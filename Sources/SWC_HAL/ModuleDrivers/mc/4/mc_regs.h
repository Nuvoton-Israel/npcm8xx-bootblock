/*----------------------------------------------------------------------------*/
/* SPDX-License-Identifier: GPL-2.0                                           */
/*                                                                            */
/* Copyright (c) 2010-2024 by Nuvoton Technology Corporation                  */
/* All rights reserved                                                        */
/*                                                                            */
/*----------------------------------------------------------------------------*/
/* File Contents:                                                             */
/*   mc_regs.h                                                                */
/* This file contains registers definition of Arbel Memory Controler          */
/* Project:                                                                   */
/*            SWC HAL                                                         */
/*----------------------------------------------------------------------------*/
//#include "arbel_mc_regs_def.h"

#ifndef _MC_REGS_H
#define _MC_REGS_H

#include __CHIP_H_FROM_DRV()


#define MEM_STRB_WIDTH 2
#define VREF_WIDTH 7
#define MAS_DLY_WIDTH 8
#define SLV_DLY_WIDTH 6
#define DQS_DLY_WIDTH 7
#define BITLVL_DLY_WIDTH 6
#define WRITE_COMMAND_PHASE1 1
#define TRIM_WIDTH 7

#define ADLL_MAS_DLY_WIDTH         MAS_DLY_WIDTH
#define ADLL_SLV_DLY_WIDTH         SLV_DLY_WIDTH

#define PHY_BASE 0xF05F0000
#define MC_BASE  0xF0824000

#define 	PHY_PAD_CTRL_1               (PHY_BASE + 0x31 * 4), MC_ACCESS, 32

#define 	PHY_PAD_CTRL_1_clk_drive_p	0, 4				// 	Clock I/O pull up pad drive strength control.
#define 	PHY_PAD_CTRL_1_clk_drive_n	4 ,4				// 	Clock I/O pull down pad drive strength control.
#define 	PHY_PAD_CTRL_1_adrctrl_drive_p	8 ,4				// 	Address control I/O’s pull up pad drive strength control.
#define 	PHY_PAD_CTRL_1_adrctrl_drive_n	12 ,4				// 	Address control I/O’s pull down pad drive strength control.
#define 	PHY_PAD_CTRL_1_dq_dqs_drive_p	16 ,4				// 	DQ, DM, DQS I/O’s pull up pad drive strength control. For PHYs supporting LPDDR4, pre-program PHY_LANE_SEL [7:0] with the desired byte lane number [0…        MEM_STRB_WIDTH].
#define 	PHY_PAD_CTRL_1_dq_dqs_drive_n	20 ,4				// 	DQ, DM, DQS I/O’s pull down pad drive strength control. For PHYs supporting LPDDR4, pre-program PHY_LANE_SEL [7:0] with the desired byte lane number [0…        MEM_STRB_WIDTH].

#define 	PHY_PAD_CTRL_2               (PHY_BASE + 0x32 * 4), MC_ACCESS, 32

#define 	PHY_PAD_CTRL_2_dq_dqs_term_p	0 ,4				// 	DQ, DM, DQS I/O’s pull up ODT impedance control. For PHYs supporting LPDDR4, pre-program PHY_LANE_SEL [7:0] with the desired byte lane number [0…        MEM_STRB_WIDTH]. Also, refer to description for local_odt_ctrl in SCL_CONFIG_1 to see how read termination window is controlled
#define 	PHY_PAD_CTRL_2_dq_dqs_term_n	4 ,4				// 	DQ, DM, DQS I/O’s pull down ODT impedance control. For PHYs supporting LPDDR4, pre-program PHY_LANE_SEL [7:0] with the desired byte lane number [0…        MEM_STRB_WIDTH].
#define 	PHY_PAD_CTRL_2_adrctrl_term_p	8 ,4				// 	Address control I/O’s pull up ODT impedance control. Not required to be used since these I/O’s are output only.
#define 	PHY_PAD_CTRL_2_adrctrl_term_n	12 ,4				// 	Address control I/O’s pull down ODT impedance control. Not required to be used since these I/O’s are output only.


#define 	PHY_PAD_CTRL_3               (PHY_BASE + 0x27 * 4), MC_ACCESS, 32

#define 	PHY_PAD_CTRL_3_clk_pemp_p	0 ,2				// 	CLK I/O’s pull up pre-emphasis mode control.
#define 	PHY_PAD_CTRL_3_clk_pemp_n	2 ,2				// 	CLK I/O’s pull down pre-emphasis mode control.
#define 	PHY_PAD_CTRL_3_adrctrl_pemp_p	4 ,2				// 	Address control I/O’s pull up pre-emphasis mode control.
#define 	PHY_PAD_CTRL_3_adrctrl_pemp_n	6 ,2				// 	Address control I/O’s pull down pre-emphasis mode control.
#define 	PHY_PAD_CTRL_3_dq_dqs_pemp_p	8 ,2				// 	DQ DQS I/O’s pull up pre-emphasis mode control. For PHYs supporting LPDDR4, pre-program PHY_LANE_SEL [7:0] with the desired byte lane number [0…        MEM_STRB_WIDTH].
#define 	PHY_PAD_CTRL_3_dq_dqs_pemp_n	10 ,2				// 	DQ DQS I/O’s pull down pre-emphasis mode control. For PHYs supporting LPDDR4, pre-program PHY_LANE_SEL [7:0] with the desired byte lane number [0…        MEM_STRB_WIDTH].
#define 	PHY_PAD_CTRL_3_test_vibias_desel_bg	11 ,2				// 	For Uniquify internal use only. Optional bit that is available only in certain PHY versions

#define 	PHY_PAD_CTRL               (PHY_BASE + 0x48 * 4), MC_ACCESS, 32

#define 	PHY_PAD_CTRL_extra_oen_clk	8 ,1				// 	Set to drive pad output enables for an extra cycle after a write burst if necessary.
#define 	PHY_PAD_CTRL_wdqs_on	9 ,1				// 	For PHYs supporting LPDDR4, it is set only when using Hynix LPDDR4 SDRAM that requires extended write preamble.
#define 	PHY_PAD_CTRL_dynamic_receiver_en	10 ,1				// 	For PHYs that support dynamic input enable on IO receivers as a power saving feature. Set to enable. See also the DYNAMIC_IE_TIMER register description.
#define 	PHY_PAD_CTRL_half_rate	14 ,1				// 	A 1 indicates the PHY is operating in half-rate mode.
#define 	PHY_PAD_CTRL_ddr1p2	15 ,1				// 	Used in certain versions of IOs. Set for all non-DDR3 (non-1.5V supply) memory types
#define 	PHY_PAD_CTRL_receiver_en	28 ,1				// 	Set to 1 to allow pad receivers on bi-directional IOs to be turned on.
#define 	PHY_PAD_CTRL_preamble_dly	29 ,2				// 	Controls the length of the preamble for writes. Applicable only for non-LPDDR4 PHYs 2’h0 => 2 cycles. 2’h1 => 1 ½ cycles. 2’h2 => 1 cycle.
#define 	PHY_PAD_CTRL_reten_en_state	31 ,1				// 	When the PHY includes a retention pad, this bit indicates the state of the retention control. 0 indicates retention mode is enabled.



#define 	UNIQUIFY_IO_1               (PHY_BASE + 0x5C * 4), MC_ACCESS, 32
#define 	UNIQUIFY_IO_1_start_tx         0, 1  /*    Enables dynamic impedance calibration for the transmitter. Dynamic impedance calibration will run continuously as long as start_tx is high.                                                                      */
#define 	UNIQUIFY_IO_1_start_rx         1, 1  /*    Enables dynamic impedance calibration for the receiver. Enabled only at initialization. Please follow register programming sequence in init_routine.c                                                            */
#define 	UNIQUIFY_IO_1_done_tx_seen     2, 1  /*    Set after the transmitter calibration has at least finished once after PHY reset.                                                                                                                                */
#define 	UNIQUIFY_IO_1_done_rx_seen     3, 1  /*    Set after the receiver calibration has  t least finished once after PHY reset.                                                                                                                                   */
#define 	UNIQUIFY_IO_1_update           4, 1  /*    Set to force the calibrated settings to be pushed to all the other I/O’s. If not set, PHY periodically performs pdates every recalib_cnt interval, when dfi_phyupd_req is assertedwith dfi_phyupd_type set to 1. */
#define 	UNIQUIFY_IO_1_cal_npu_offset   8, 6  /*    Programmable offset used to adjust the calibrated trim settings for the NMOS pull-up.                                                                                                                            */
#define 	UNIQUIFY_IO_1_incr_cal_npu     14,1  /*    Increment or decrement control for cal_npu_offset.                                                                                                                                                               */
#define 	UNIQUIFY_IO_1_override_cal_npu 15,1  /*    Override control to directly use cal_npu_offset instead of the calibrated trim settings.                                                                                                                         */
#define 	UNIQUIFY_IO_1_cal_ppu_offset   16,6  /*    Programmable offset used to adjust  the calibrated trim settings for the NMOS pull-up.                                                                                                                           */
#define 	UNIQUIFY_IO_1_incr_cal_ppu     22,1  /*    Increment or decrement control for cal_npu_offset.                                                                                                                                                               */
#define 	UNIQUIFY_IO_1_override_cal_ppu 23,1  /*    Override control to directly use cal_ppu_offset instead of the calibrated trim settings.                                                                                                                         */
#define 	UNIQUIFY_IO_1_cal_npd_offset   24,6  /*    Programmable offset used to adjust the calibrated trim settings for the NMOS pull-down.                                                                                                                          */
#define 	UNIQUIFY_IO_1_incr_cal_npd     30,1  /*    Increment or decrement control for cal_npd_offset.                                                                                                                                                               */
#define 	UNIQUIFY_IO_1_override_cal_npd 31,1  /*    Override control to directly use cal_npd_offset instead of the calibrated trim settings.                                                                                                                         */

#define 	UNIQUIFY_IO_2               (PHY_BASE + 0x5D * 4), MC_ACCESS, 32
#define 	UNIQUIFY_IO_2_cal_ppu_0p8_offset    0, 6     /* Programmable offset used to adjust the calibrated trim settings for the PMOS pull-up used only in DDR4.                         */
#define 	UNIQUIFY_IO_2_incr_cal_ppu_0p8      6, 1     /*  Increment or decrement control for cal_npd_0p8_offset.                                                                         */
#define 	UNIQUIFY_IO_2_override_cal_ppu_0p8  7, 1     /*  Override control to directly use cal_ppu_0p8_offset instead of the calibrated trim settings.                                   */
#define 	UNIQUIFY_IO_2_cal_npd_0p8_offset    8, 6     /*  Programmable offset used to adjust the calibrated trim settings for the NMOS pull-down used only in DDR4.                      */
#define 	UNIQUIFY_IO_2_incr_cal_npd_0p8      14,1     /*  Increment or decrement control for cal_npd_0p8_offset.                                                                         */
#define 	UNIQUIFY_IO_2_override_cal_npd_0p8  15,1     /*   Override control to directly use cal_npd_0p8_offset instead of the calibrated trim settings.                                  */
#define 	UNIQUIFY_IO_2_cal_rx_offset         16,5     /*   Programmable offset used to adjust the calibrated trim settings for the receiver.                                             */
#define 	UNIQUIFY_IO_2_incr_cal_rx           21,1     /*  Increment or decrement control for cal rx offset.                                                                              */
#define 	UNIQUIFY_IO_2_override_cal_rx       22,1     /*  Override control to directly use cal_rx_offset instead of the calibrated trim settings.                                        */
#define 	UNIQUIFY_IO_2_reserved1             23,1     /*  Reserved bit                                                                                                                   */
#define 	UNIQUIFY_IO_2_calib_0p8             24,1     /*  Set to either calibrate DDR4 / LPDDR3 at 0.8*VDDQ (if 1) or 0.67*VDDQ (if 0) for generating the 0p8 trim codes.                */
#define 	UNIQUIFY_IO_2_cal_trim_rx_saved     25,6     /*   RX calibration trim setting found after RX calibration read from UCAL                                                         */
#define 	UNIQUIFY_IO_2_uclk_trim_upd_extend  31,1     /*  dfi_phyupd_ack is asserted for 20 DFI clock cycles normally for IO calibration trim update. Set to double that number.         */


#define 	UNIQUIFY_IO_3               (PHY_BASE + 0x73 * 4), MC_ACCESS, 32
#define		UNIQUIFY_IO_3_slew 0, 8     /*  I/O slew control                                                                                   */
#define		UNIQUIFY_IO_3_ucal_config_bits 8, 13     /*  UCAL IO configuration control which determine the type of calibration begin done.     */
#define		UNIQUIFY_IO_3_gnd_term 24,1     /*  Set to enable pull-down style on-die termination on the receive path. RW 0                      */
#define		UNIQUIFY_IO_3_lpddr4_divby2p5 25,1     /*  Set to enable LPDDR4 VDDQ/2.5 mode calibration. RW 0                                     */
#define		UNIQUIFY_IO_3_lpddr4_divby3 26,1     /*  Set to enable LPDDR4 VDDQ/3 mode calibration. RW 0                                         */
#define		UNIQUIFY_IO_3_ucal_2step_cal 27,1     /* Set to enable two step 0.67/0.8*VDDQ style calibration. RW 0                              */



#define 	UNIQUIFY_IO_4               (PHY_BASE + 0x74 * 4), MC_ACCESS, 32
#define		UNIQUIFY_IO_4_cal_trim_npu_saved 0, 6     /*  Saved CAL IO NMOS pull-up trim value.                                                */
#define		UNIQUIFY_IO_4_cal_trim_ppu_saved 6, 7     /*  Saved CAL IO PMOS pull-up trim value.                                               */
#define		UNIQUIFY_IO_4_cal_trim_npd_saved 12, 6     /*  Saved CAL IO NMOS pull-down trim value.                                            */
#define		UNIQUIFY_IO_4_cal_trim_ppu_0p8_saved 18, 6     /*  Saved CAL IO PMOS pull-down trim value for DDR4 0p8 trim IOs.                  */
#define		UNIQUIFY_IO_4_cal_trim_npd_0p8_saved 24, 6     /*  Saved CAL IO NMOS pull-down trim values for DDR4 0p8 trim IOs.                 */

#define 	UNIQUIFY_IO_5               (PHY_BASE + 0x7C * 4), MC_ACCESS, 32

#define 	UNIQUIFY_IO_5_clk_slew	0 ,8				// 	Used to program customized SLEW control value for each memory clock output IO. Pre-program PHY_LANE_SEL [7:0] with <clock number> * 8

#define 	SCL_START               (PHY_BASE + 0x40 * 4), MC_ACCESS, 32

#define 	SCL_START_cuml_scl_rslt	0, MEM_STRB_WIDTH				// 	Read only value that gets set after SCL is run. It shows whether SCL passed or failed on each byte lane, 1 bit per byte lane.
#define 	SCL_START_cmd_bus_training	16 ,1				// 	Set to enable command bus training mode for PHYs supporting hardware CA training. Applicable only for LPDDR3 and LPDDR4.
#define 	SCL_START_cycle_cnt	20 ,8				// 	Read only value that indicates the number of delay elements required to delay the clock signal to align with the read DQS falling edge (after it has been delayed ¼ cycle by the analog or digital DLL). Before reading cycle_cnt , program phy_lane_sel to         MAS_DLY_WIDTH*<lane number> to select the desired lane.
#define 	SCL_START_write_side_bit_lvl	20 ,1				// 	Set this high in order to run write side bit-leveling at initialization from the DRAM. Set in conjunction with bit_lvl_norm.  If this is not set, bit-leveling will not automatically apply any trim on the write side and any calibration there will have to be programmed manually.
#define 	SCL_START_bit_lvl_from_saved	21 ,1				// 	Used in SCL routines and should not be set by the user. If set, dynamic bit-leveling will use previously saved bit-leveled values. Otherwise, each time dynamic bit-leveling is run, it will start bit-leveling from scratch (i.e. will set all initial delay values for all bits to 0)
#define 	SCL_START_bit_lvl_norm	22 ,1				// 	Used in SCL routines and should not be set by the user. Set to run bit-leveling using the DRAM array.
#define 	SCL_START_bit_lvl_mpr	23 ,1				// 	Used in SCL routines and should not be set by the user. Set to run bit-leveling using the multi-purpose register.
#define 	SCL_START_wr_only	24 ,1				// 	Used in SCL routines and should not be set by the user.  When set, SCL will only write the SCL data to the SCL address location in DRAM.
#define 	SCL_START_rd_only	25 ,1				// 	Used in SCL routines and should not be set by the user.  When set, SCL will only perform read back. Bit is not used currently.
#define 	SCL_START_incr_scl	26 ,1				// 	Used to run SCL phase and latency calibration as an atomic operation that can be useful for running SCL dynamically with a single register write.
#define 	SCL_START_set_ddr_scl_go_done	28 ,1				// 	Used in SCL routines and should not be set by the user.   Used to trigger SCL routine execution.
#define 	SCL_START_continuous_rds	29 ,1				// 	Used in SCL routines and should not be set by the user. Used to trigger phase calibration part of SCL.
#define 	SCL_START_wrlvl	30 ,1				// 	Used in the SCL routines and should not be set by the user.  When set, SCL will run write leveling.
#define 	SCL_START_save_restore_data	31 ,1				// 	Used in the SCL routines and should not be set by the user. When set, the user did not allocate space in the DRAM for SCL or bit-leveling training data. Therefore during DSCL and/or dynamic bit-leveling, the user’s data will be saved and overwritten with training data to complete the process and then restored for normal operation.

#define 	SCL_DATA_0               (PHY_BASE + 0x41 * 4), MC_ACCESS, 32

#define 	scl_data	0 ,32				// 	SCL_DATA_1 and SCL_DATA_0 control the test data pattern used for SCL and loopback routines. The default value provides the best calibration and test capability and is not recommended to be changed by the user. The bit-leveling routine also uses this register to write a bit-leveling specific data pattern into the DRAM.


#define 	SCL_DATA_1               (PHY_BASE + 0x42 * 4), MC_ACCESS, 32

#define 	SCL_DATA_1_scl_data_63_32	0 ,32				// 	Please see description of SCL_DATA_0

#define 	SCL_LATENCY               (PHY_BASE + 0x43 * 4), MC_ACCESS, 32

#define 	SCL_LATENCY_capture_clk_dly	0 ,4				// 	This field is used to specify the number of delay line steps that the SCL state machine should skip when trying to locate the 1 to 0 transition on the input DQS. The difference should be enough analog / digital delay line steps needed to cover the maximum jitter than can be expected on the input DQS.
#define 	SCL_LATENCY_main_clk_dly	4 ,4				// 	Automatically programmed by SCL based on the delay for generating dfi_rddata_valid with respect to dfi_rddata_en.  SCL automatically ensures that dfi_rddata_valid timing is matched for all byte lanes, so user only needs to deal with a single dfi_rddata_valid.
#define 	SCL_LATENCY_loopback	8 ,1				// 	Set to 1 to put the PHY in loopback mode.
#define 	SCL_LATENCY_dqs_gate_disabled	9 ,1				// 	Set to disable DQS gating logic.  Recommended value is 0.
#define 	SCL_LATENCY_int_loopback	10 ,1				// 	1 selects internal loopback, 0 selects external loopback when loopback is enabled by setting bit 8 to 1
#define 	SCL_LATENCY_scl_calib_wait_latency	12 ,3				// 	Number of cycles to wait in the SCL state machine after updating the data_capture_clk delay line setting before taking the next step for achieving phase lock.
#define 	SCL_LATENCY_wbl_jitter_threshold	16 ,4				// 	Jitter rejection factor to ensure write bit-levleing will not falsely lock DQS transition on the rising / falling edge of DQ instead of the center because of jitter – similar to capture_clk_dly used for read bit-leveling. Delay of 2 times this number of delay line steps should be greater than the maximum jitter that can occur.

#define 	SCL_RD_ADDR               (PHY_BASE + 0x44 * 4), MC_ACCESS, 32

#define 	SCL_RD_ADDR_scl_rd_addr	0 ,2				// 	SCL related.  For debug only. Selects between upper and lower 32-bits of SCL read data burst.
#define 	SCL_RD_ADDR_rotate_ctr_strt_val	4 ,4				// 	SCL related. Not user programmable.
#define 	SCL_RD_ADDR_data_phy_sel	8 ,  MEM_STRB_WIDTH				// 	SCL related.

#define 	SCL_RD_DATA               (PHY_BASE + 0x45 * 4), MC_ACCESS, 32

#define 	SCL_RD_DATA_scl_rd_data	0 ,32				// 	SCL related For debug only. Used to read back read data captured during SCL.

#define 	SCL_CONFIG_1               (PHY_BASE + 0x46 * 4), MC_ACCESS, 32

#define 	SCL_CONFIG_1_burst8		0 ,1				// 	Used by the PHY while running the SCL test to understand if the DDR is in burst of 4 mode (0) or burst of 8 mode (1).
#define 	SCL_CONFIG_1_ddr3		2 ,1				// 	Set to 1 for DDR3 and 0 otherwise.
#define 	SCL_CONFIG_1_dly_dfi_phyupd_ack	3 ,1				// 	Delay the dfi_phyupd_ack from the controller if it does not support issuing dfI_phyupd_ack only when all banks are idle and ready to be activated. Delayed by (REF_TO_ACT_DLY << double_ref_dly) where REF_TO_ACT_DLY is a fixed RTL parameter value.
#define 	SCL_CONFIG_1_rd_cas_latency	4 ,4				// 	DRAM Read CAS Latency.
#define 	SCL_CONFIG_1_additive_latency	8 ,4				// 	DRAM Additive Latency
#define 	SCL_CONFIG_1_local_odt_ctrl	12 ,4				// 	For turning off SoC side dynamic ODT:
#define 	SCL_CONFIG_1_ddr_odt_ctrl_rd	16 , 1				// 	Not used
#define 	SCL_CONFIG_1_ddr_odt_ctrl_wr	24 , 1				// 	ODT signals that should be driven to the DRAM when running SCL. 1 bit per chip select. Set to 1 to turn on ODT on that chip-select during writes performed by SCL.

#define 	SCL_CONFIG_2               (PHY_BASE + 0x47 * 4), MC_ACCESS, 32
#define 	SCL_CONFIG_2_scl_test_cs	0, 1				// 	Used to control which chip-select SCL will run on. 1 bit per chip select. Set to 1 to run SCL on that chip select.
#define 	SCL_CONFIG_2_wr_cas_latency	8 ,4				// 	DRAM Write CAS latency. For LPDDR2 / LPDDR3, program 1 more than DRAM Write CAS latency value.
#define 	SCL_CONFIG_2_double_ref_dly	12 ,1				// 	Determines if dly_dfi_phyupd_ack will delay SCL operation following dfi_phyupd_ack by REF_TO_ACT_DLY  or 2*REF_TO_ACT_DLY
#define 	SCL_CONFIG_2_dly_dfi_wrdata	24 ,1				// 	Set when PHY is operating in half_rate mode and write latency is either even and write commands are being issued on PHASE0 or odd and write commands are being issued on PHASE1. This will cause the controller dfi_wrdata* signals to be internally delayed by 1 full-rate clock cycle inside the phy. This is necessary to meet the correct write CAS latency timing at the DRAM interface.
#define 	SCL_CONFIG_2_wr_cas_latency_overflow	25 ,1			// 	Overflow bit to set when wr_cas_latency is >= 16
#define 	SCL_CONFIG_2_rd_cas_latency_overflow	26 ,1			// 	Overflow bit to set when rd_cas_latency is >= 16

// was in Poleg:   #define  SCL_CONFIG_2_analog_dll_for_scl  28 , 1              /* 28 analog_dll_for_scl  Set this bit to 1 to use the analog delay line for delaying data_capture_clk                   */

#define 	SCL_CONFIG_2_lpddr2_lpddr3	29 ,1				// 	Set to 1 for interfacing to LPDDR2 or LPDDR3 SDRAM.
#define 	SCL_CONFIG_2_swap_phase	31 ,1				// 	When the PHY sends DRAM commands during PHY training sequences, this bit decides if the command will be sent during phase 0 or phase 1 in half rate mode. If swap_phase = 1'b0, then CS_N will be asserted on phase 0, otherwise on phase 1.

#define 	SCL_CONFIG_3               (PHY_BASE + 0x5B * 4), MC_ACCESS, 32

#define 	SCL_CONFIG_3_scl_lanes_mask	0, MEM_STRB_WIDTH				// 	Can be used to run SCL on a limited number of lanes rather than all lanes by default. Lanes with the corresponding bit set are not checked by SCL.

#define 	CBT_CTRL               (PHY_BASE + 0x33 * 4), MC_ACCESS, 32

#define 	CBT_CTRL_pulse_ca_half_wide	02 ,1				// 	Generates a CA training pulse to train all CA except CA4 and CA9.Clears automatically when finished.
#define 	CBT_CTRL_pulse_ca_half_wide2	03 ,1				// 	Generates a CA training pulse to train CA4 and CA9. Clears automatically when finished.


#define 	PHY_DLL_RECALIB               (PHY_BASE + 0x49 * 4), MC_ACCESS, 32

#define 	PHY_DLL_RECALIB_dlls_trim_adrctrl_ma	0, SLV_DLY_WIDTH	// 	Trim settings for adjusting the output timing of all 2T timing capable signals namely row/column/bank address and ras_n/cas_n/we_n with respect to all other outputs such as DRAM clock and DQ/DQS/DM. The programmed delay should be such as to match the timing of DRAM clock programmed in PHY_DLL_TRIM_CLK when these signals are received by the DRAM. he maximum negative delay is limited to dll_slv_dly.When 2T timing is used i.e. the above mentioned outputs switch only once every 2 cycles, the total setup + hold timing budget available is 2 DDR clock cycles, and in 1T timing mode, it is 1 DDR clock cycle.
#define 	PHY_DLL_RECALIB_recalib_cnt	8 ,18				// 	Determines how often the PHY issues the dfi_phyupd_req type 1 to controller in PHY clock cycles. Also determines the period of recalibration of the digital DLL in units of (PHY clock cycles * 256). Also used as a timer for IO impedance recalibration when IO supports this feature
#define 	PHY_DLL_RECALIB_disable_recalib	26 ,1				// 	Prevents the digital DLL from recalibrating after the 1st time.
#define 	PHY_DLL_RECALIB_incr_dly_adrctrl_ma	27 ,1			// 	Used only if override_adrctrl is 0. Set to increment the delay on the slave delay line using dlls_trim_adrctrl_ma, decrement otherwise. Recommended value is 0.
#define 	PHY_DLL_RECALIB_ctr_start_val	28 ,4				// 	Controls the start value of the digital DLL master delay line. Recommended value is 4’hA.

#define 	PHY_DLL_ADRCTRL               (PHY_BASE + 0x4A * 4), MC_ACCESS, 32

#define 	PHY_DLL_ADRCTRL_dlls_trim_adrctrl	0, SLV_DLY_WIDTH				// 	Trim sett ings for adjusting the output timing of all 1T timing signals namely CS_N/CKE/ODT with respect to all other outputs such as DRAM clock and DQ/DQS/DM. The programmed delay should be such as to match the timing of DRAM clock programmed in PHY_DLL_TRIM_CLK when these signals are received by the DRAM. The maximum negative delay is limited to dll_slv_dly. It may be noted that in a multi-rank system, the 1T timing signals CS_N/CKE/ODT are separately driven for every rank and so the tighter setup + hold timing budget of 1 DDR clock cycle is acceptable. RW
#define 	PHY_DLL_ADRCTRL_override_adrctrl	8 ,1				// 	Used to override the digital DLL master delay line and set the slave delay line output delay directly through dlls_trim_adrctrl and dlls_trim_adrctrl_ma. Recommended value is 0.
#define 	PHY_DLL_ADRCTRL_incr_dly_adrctrl	9 ,1				// 	Used only if override_adrctrl is 0. Set to increment the delay on the slave delay line using dlls_trim_adrctrl, decrement otherwise. Recommended value is 0.
#define 	PHY_DLL_ADRCTRL_dll_slv_dly	16, SLV_DLY_WIDTH				// 	Slave delay line setting found by the digital DLL master (corresponds to ¼ clock delay).
#define 	PHY_DLL_ADRCTRL_dll_mas_dly	24, MAS_DLY_WIDTH				// 	Digital DLL master delay line setting (corresponds to 1 clock delay)

#define 	PHY_DLL_TRIM_CLK               (PHY_BASE + 0x69 * 4), MC_ACCESS, 32

#define 	PHY_DLL_TRIM_CLK_dlls_trim_clk	0, SLV_DLY_WIDTH				// 	Used to control the output delay of clock with respect to data signals (dq/dqs/dm). Prior to write leveling this register must be programmed such that it is guaranteed that clock arrival time is greater than DQS arrival time at each DRAM. The delay should also be such as to match output timing of other address and control signals in PHY_DLL_RECALIB and_PHY_DLL_ADRCTRL. The negative delay is limited to dll_slv_dly Bit [        SLV_DLY_WIDTH + 1] is set to increment the delay on the clock output delay line using dlls_trim_clk[        SLV_DLY_WIDTH :0], decrement otherwise. Bit [        SLV_DLY_WIDTH + 1] is used only when override_adrctrl is NOT set. Pre-program phy_lane_sel to (        SLV_DLY_WIDTH+2)*<clock number>, where clock number can range from 0 to MEM_CLOCKS - 1.

#define 	PHY_LANE_SEL               (PHY_BASE + 0x4B * 4), MC_ACCESS, 32

#define 	PHY_LANE_SEL_phy_lane_sel	0 ,8				// 	Used to select one of an array of register fields (such as a register that exists per byte lane) during programming. The value to be programmed to select the particular register field depends on the field width and is = <FIELD_WIDTH> * <field number>.
#define 	PHY_LANE_SEL_bit_sel	8 ,4				// 	Must be programmed to appropriate value before programming OP_DQ_DM_DQS_BITWISE_TRIM/ IP_DQ_DQS_BITWISE_TRIM registers.

#define 	PHY_DLL_TRIM_1               (PHY_BASE + 0x4C * 4), MC_ACCESS, 32


#define 	PHY_DLL_TRIM_1_dlls_trim_1	0 , SLV_DLY_WIDTH				// 	Can be used to adjust the trim settings on the internal digital or analog DLL for controlling output dqs timing with respect to output dq/dm signals. Recommended value is 0.


#define 	PHY_DLL_TRIM_2               (PHY_BASE + 0x4D * 4), MC_ACCESS, 32


#define 	PHY_DLL_TRIM_2_dlls_trim_2	0, SLV_DLY_WIDTH				// 	Can be used to adjust output dq/dqs/dm timing with respect to DRAM clock. Recommended value is 0. For (LP)DDR3/4 SDRAM this value is set by the write leveling training procedure. Program phy_lane_sel with SLV_DLY_WIDTH*<lane number> before programming this field.
#define 	PHY_DLL_TRIM_2_inc_dec_all_trims	8 , SLV_DLY_WIDTH				// 	When this field is non-zero when writing this register, all dlls_trim_2 values for all byte lanes are incremented (if bit 17 is 0) or decremented (if bit 17 is 1) by the value specified for the field.
#define 	PHY_DLL_TRIM_2_clear_all_trims	16 ,1				// 	When this field is set to 1 when writing this register, all dlls_trim_2 values for all byte lanes are reset to 0.
#define 	PHY_DLL_TRIM_2_inc_or_dec_all_trims	17 ,1				// 	See description for inc_dec_all_trims.

#define 	PHY_DLL_TRIM_3               (PHY_BASE + 0x4E * 4), MC_ACCESS, 32


#define 	PHY_DLL_TRIM_3_dlls_trim_3	0, SLV_DLY_WIDTH				// 	Can be used to adjust input dqs timing with respect to input dq by adjusting the trim settings on the internal digital or analog DLL. Recommended value is 0.


#define 	PHY_DLL_INCR_TRIM_1               (PHY_BASE + 0x59 * 4), MC_ACCESS, 32

#define 	PHY_DLL_INCR_TRIM_1_incr_dly_1	0, MEM_STRB_WIDTH				// 	If set, dlls_trim_1 is to be used to increment the associated delay. Otherwise, dlls_trim_1 will be used to decrement the delay. 1 bit per byte lane. Recommended value is 0.

#define 	PHY_DLL_INCR_TRIM_3               (PHY_BASE + 0x5A * 4), MC_ACCESS, 32

#define 	PHY_DLL_INCR_TRIM_3_incr_dly_3	0, MEM_STRB_WIDTH			// 	If set, dlls_trim_3 is to be used to increment the associated delay. Otherwise, dlls_trim_3 will be used to decrement the delay. 1 bit per byte lane. Recommended value is 0.

#define 	SCL_DCAPCLK_DLY               (PHY_BASE + 0x4F * 4), MC_ACCESS, 32

#define 	SCL_DCAPCLK_DLY_dcap_byte_dly	0, DATA_CAP_DLY_WIDTH				// 	SCL data_capture_clk setting programmed per byte lane. Automatically programmed by SCL, but can be manually programmed by user as well. For manual programming, program phy_lane_sel to (lane number * DATA_CAP_DLY_WIDTH), before programming or reading this value. SCL / DSCL programs this register in such as way that the data_capture_clk edge used to transfer data from the input DQS clock domain to the PHY core clock domain provides the best possible timing margins (please see chapter 11 for more details).

#define 	SCL_MAIN_CLK_DELTA               (PHY_BASE + 0x50 * 4), MC_ACCESS, 32

#define 	SCL_MAIN_CLK_DELTA_main_clk_delta_dly	0 ,3				// 	SCL latency setting programmed per byte lane. Automatically programmed by SCL, but can be manually programmed by user as well. For manual programming, program phy_lane_sel to (lane number * 3), before programming or reading this value. This value is programmed by SCL/DSCL to delay faster byte lanes compared to slower byte lanes in such a way that a common dfi_rddata_valid can be generated for all byte lanes aligned with the controller’s clock. Please see section 11.2 for more details.
#define 	SCL_MAIN_CLK_DELTA_clear	4 ,1				// 	Write 1 to clear main_clk_delta_dly for all lanes.
#define 	SCL_MAIN_CLK_DELTA_scl_rslt	4 , MEM_STRB_WIDTH				// 	Read only value that gets set after SCL is run. It shows whether SCL passed or failed on each byte lane, 1 bit per byte lane. Should be identical to cuml_scl_rslt.

#define 	WRLVL_CTRL               (PHY_BASE + 0x52 * 4), MC_ACCESS, 32

#define 	WRLVL_CTRL_wrlvl_rslt	0, MEM_STRB_WIDTH				// 	SCL related Used to check if write leveling passed on each lane. It stores the last sampled value at the end of write-leveling. A zero should be seen in start_wr_lvl and a one in wrlvl_rslt to confirm write-leveling passed.
#define 	WRLVL_CTRL_ip_dq_sample	20 ,8				// 	SCL related. Used only for debug.
#define 	WRLVL_CTRL_pulse_dqs	20 ,1				// 	SCL related. Used only for debug.
#define 	WRLVL_CTRL_turn_on_dq_odt	28 ,1				// 	SCL related. Used only for debug.
#define 	WRLVL_CTRL_turn_on_ddr_odt	29 ,1				// 	SCL related. Used only for debug.
#define 	WRLVL_CTRL_turn_on_dqs_op	30 ,1				// 	SCL related. Used only for debug. Set this to 1 for the loopback test to turn on DQS output permanently.
#define 	WRLVL_CTRL_turn_on_dq_op	31 ,1				// 	SCL related. Used only for debug.

#define 	WRLVL_AUTOINC_TRIM               (PHY_BASE + 0x53 * 4), MC_ACCESS, 32

#define 	WRLVL_AUTOINC_TRIM_start_wr_lvl	0, MEM_STRB_WIDTH				// 	Specifies lanes to be trained during write leveling. When read back after write-leveling, it indicates for each lane if a zero was sampled sometime during write-leveling. It can be used in combination with wrlvl_rslt to check if write-leveling passed.
#define 	WRLVL_AUTOINC_TRIM_bit_lvl_from_saved	20 ,1				// 	Read back value for bit of the same name in SCL_START.
#define 	WRLVL_AUTOINC_TRIM_bit_lvl_norm	21 ,1				// 	Read back value for bit of the same name in SCL_START.
#define 	WRLVL_AUTOINC_TRIM_bit_lvl_mpr	22 ,1				// 	Read back value for bit of the same name in SCL_START.
#define 	WRLVL_AUTOINC_TRIM_wr_only	23 ,1				// 	Read back value for bit of the same name in SCL_START.
#define 	WRLVL_AUTOINC_TRIM_rd_only	24 ,1				// 	Read back value for bit of the same name in SCL_START.
#define 	WRLVL_AUTOINC_TRIM_incr_scl	25 ,1				// 	Read back value for bit of the same name in SCL_START.
#define 	WRLVL_AUTOINC_TRIM_cmd_bus_training	26 ,1				// 	Read back value for bit of the same name in SCL_START.

#define 	WRLVL_DYN_ODT               (PHY_BASE + 0x54 * 4), MC_ACCESS, 32

#define 	WRLVL_DYN_ODT_dynamic_odt_off	0 ,16				// 	Value that should be programmed in (LP)DDR3/DDR4 SDRAM’s Mode register 2 prior to write-leveling. It specifies the value of Mode register 2 that is to be used during Write leveling. Please be careful to turn off dynamic ODT here since dynamic ODT is not permitted during write-leveling.
#define 	WRLVL_DYN_ODT_dynamic_odt_on	16 ,16				// 	Value that should be programmed in (LP)DDR3/DDR4 SDRAM’s Mode register 2 after write-leveling corresponding to the value of Mode register 2 that is desired to be used for functional operation. This value may be DIFFERENT or SAME as bits 15:0 depending on whether dynamic ODT is used or not used during functional operation.

#define 	WRLVL_ON_OFF               (PHY_BASE + 0x55 * 4), MC_ACCESS, 32

#define 	WRLVL_ON_OFF_wr_lvl_off	0 ,16				// 	Value that should be programmed in (LP)DDR3/DDR4 SDRAM’s Mode register 1 to turn off write-leveling.
#define 	WRLVL_ON_OFF_wr_lvl_on	16 ,16				// 	Value that should be programmed in (LP)DDR3/DDR4 SDRAM’s Mode register 1 to turn on write-leveling.

#define 	WRLVL_STEP_SIZE               (PHY_BASE + 0x19 * 4), MC_ACCESS, 32

#define 	WRLVL_STEP_SIZE_wr_lvl_step_size	0 ,6				// 	Step size control for write-leveling. How many steps does the delay line increment at each iteration of write leveling.
#define 	WRLVL_STEP_SIZE_wr_lvl_transition_step_size	8 ,6				// 	Step size control for write leveling used at the 1->0 transition of DRAM clock so write leveling will not falsely lock on the falling edge transition instead of rising edge transition as required.

#define 	UNQ_ANALOG_DLL_1               (PHY_BASE + 0x57 * 4), MC_ACCESS, 32

#define 	UNQ_ANALOG_DLL_1_analog_dll_reset	0, MEM_STRB_WIDTH				// 	Reset control for the analog DLL on a per byte lane basis.

#define 	UNQ_ANALOG_DLL_2               (PHY_BASE + 0x58 * 4), MC_ACCESS, 32

#define 	UNQ_ANALOG_DLL_2_analog_dll_lock	0, MEM_STRB_WIDTH				// 	Indication from Analog DLL about its lock state.
#define 	UNQ_ANALOG_DLL_2_mas_dly	24 ,7				// 	Indication from Analog DLL about its master delay line setting. Program phy_lane_sel to         MAS_DLY_WIDTH*<lane number> before programming this field.

#define 	UNQ_ANALOG_DLL_3               (PHY_BASE + 0x64 * 4), MC_ACCESS, 32

#define 	UNQ_ANALOG_DLL_3_phase1	0 ,5				// 	Phase by which DQS should be delayed on the write side. Bit 4 is used to delay by 1/4 cycle, Bit 3 by 1/8 cycle, Bit 2 by 1/16 cycle, Bit 1 by 1/32 cycle and Bit 0 by 1/64 cycle. Program phy_lane_sel to 5*<lane number> before programming this field. Recommended value is 5’h10
#define 	UNQ_ANALOG_DLL_3_phase2	8 ,5				// 	Phase by which DQS should be delayed on the read side. Bit 4 is used to delay by 1/4 cycle, Bit 3 by 1/8 cycle, Bit 2 by 1/16 cycle, Bit 1 by 1/32 cycle and Bit 0 by 1/64 cycle. Program phy_lane_sel to 5*<lane number> before programming this field. Recommended value is 5’h10.
#define 	UNQ_ANALOG_DLL_3_rise_cycle_cnt_dphy	16, ADLL_MAS_DLY_WIDTH				// 	Indication from Analog DLL of half clock cycle delay value. Program phy_lane_sel to ADLL_MAS_DLY_WIDTH*<lane number> before reading this field


#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_1               (PHY_BASE + 0x5E * 4), MC_ACCESS, 32

#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_1_addr_ctrl_loopback	0 ,2				// 	Set to 1 to enable loopback test on the address control pins.

#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_1_ras_n_result	2 ,1				// 	Compare result for RASN output to DRAM.
#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_1_cas_n_result	3 ,1				// 	Compare result for CASN output to DRAM.
#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_1_we_n_result	4 ,1				// 	Compare result for WEN output to DRAM.
#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_1_cke_result	5 ,1				// 	Compare result for CKE output to DRAM.
#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_1_ba_result	6,  MEM_BANK_BITS				// 	Compare result for BA (bank address) output to DRAM.
#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_1_odt_result	6+MEM_BANK_BITS ,  MEM_CHIP_SELECTS				// 	Compare result for ODT output to DRAM.
#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_1_rst_n_result	6+MEM_BANK_BITS ,  MEM_CHIP_SELECTS 				// 	Compare result for RST_N output to DRAM.

#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_2               (PHY_BASE + 0x5F * 4), MC_ACCESS, 32

#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_2_ma_result	0 , MEM_ADDR_BITS				// 	Compare result for DRAM MA (row / column address) output.
#define 	UNIQUIFY_ADDR_CTRL_LOOPBACK_2_cs_n_result	MEM_ADDR_BITS , MEM_CHIP_SELECTS				// 	Compare result for DRAM CSN output.

#define 	PHY_SCL_START_ADDR               (PHY_BASE + 0x62 * 4), MC_ACCESS, 32

#define 	PHY_SCL_START_ADDR_scl_start_row_addr	0 ,16				// 	Row address to use when running SCL / Bit-leveling.
#define 	PHY_SCL_START_ADDR_scl_start_col_addr	16 ,13				// 	Column address to use when running SCL / Bit-leveling. 16 column locations starting from this column address need to be reserved for dynamic SCL / bit-leveling
#define 	PHY_SCL_START_ADDR_scl_start_bank_addr	29 ,3				// 	Bank address to use when running SCL / Bit-leveling. For DDR4, this bank address in bank group 0 and bank group 1 will both be used

#define 	PHY_DLL_RISE_FALL               (PHY_BASE + 0x63 * 4), MC_ACCESS, 32

#define 	PHY_DLL_RISE_FALL_min_rise_fall_dly	0 ,4				// 	Used to prevent DLL from locking on the half-cycle because of clock jitter. Recommended value is 4’h6.
#define 	PHY_DLL_RISE_FALL_rise_cycle_cnt	4 ,8				// 	Half-cycle period detected by the DLL.
#define 	PHY_DLL_RISE_FALL_dfi_init_complete	12 ,1				// 	Signal defined in the DFI spec. It indicates that PHY is ready to accept commands on the DFI interface.

#define 	DSCL_CNT               (PHY_BASE + 0x67 * 4), MC_ACCESS, 32

#define 	DSCL_CNT_dscl_exp_cnt	0 ,24				// 	When dscl_en is set, this controls the frequency at which the PHY issues dfi_ phyupd request for running DSCL. Interval between DSCL requests is = dscl_exp_cnt * 256 PHY clock cycles.
#define 	DSCL_CNT_dscl_en	24 ,1				// 	Set to 1 to enable DSCL to run continuously without software intervention.
#define 	DSCL_CNT_dscl_save_restore_needed	25 ,1				// 	If set to 1 whenever DSCL is run, the data in the DRAM is saved and restored. This will increase the DSCL run time. To save DSCL run time, the user may set this bit to 0 and program the PHY_SCL_START_ADDR register with the location of the reserved memory in DRAM. Save/restore is not supported when phy is operating at half frequency and this bit SHOULD be set to 0.

#define 	IP_DQ_DQS_BITWISE_TRIM               (PHY_BASE + 0x65 * 4), MC_ACCESS, 32


#define 	IP_DQ_DQS_BITWISE_TRIM_ip_dq_dqs_bitwise_trim_reg	0, TRIM_WIDTH				// 	Trim delay and Incr/Decr setting for each input DQ bit. The MSB is the Incr (1)/Decr (0) control and the other bits are the trim. This delay is added using the input delay line available for each DQ bit. Program phy_lane_sel to <byte number>*(        BITLVL_DLY_WIDTH + 1) and bit_sel to <bit number> before programming this field with the delay required on that byte lane and that bit. <bit number> is defined as 0 to 7 for DQ bits 0 to 7 and 8 for DQS. Recommended value is 0. This register stores the user programmed value only when ip_dq_trim_override is set. Otherwise, this register automatically registers the DQ bit trim values found during bit-leveling.
#define 	IP_DQ_DQS_BITWISE_TRIM_ip_dq_trim_override	TRIM_WIDTH, 1				// 	Used to override the trim delay of all input DQ’s found from bit- leveling and to set the delay directly through the value programmed in the ip_dq_trim_bitwise register. Note that this override bit is common to all bits / lanes, and if it is set to 0 during any register write, all the previously software programmed values will be immediately overwritten with the current hardware value.
#define 	IP_DQ_DQS_BITWISE_TRIM_bit_lvl_done_status	8, MEM_STRB_WIDTH				// 	Read only indication of whether bit-leveling has finished on each byte lane, 1 bit per byte lane.

#define 	OP_DQ_DM_DQS_BITWISE_TRIM               (PHY_BASE + 0x68 * 4), MC_ACCESS, 32


#define 	OP_DQ_DM_DQS_BITWISE_TRIM_op_dq_dm_dqs_bitwise_trim_reg	0, TRIM_WIDTH				// 	Trim delay and Incr/Decr setting for each output DQ/DM/DQS. The MSB is the Incr (1)/Decr (0) and the other bits are the trim. This delay is added using the output delay line available for each DQ/DM/DQS signal.
#define 	OP_DQ_DM_DQS_BITWISE_TRIM_op_dq_trim_override_DQ	TRIM_WIDTH, 1				// 	Used to override the trim delay of all output DQ’s from bit- leveling and to set the delay directly through value programmed in op_dq_dm_dqs_bitwise_trim.
#define 	OP_DQ_DM_DQS_BITWISE_TRIM_op_dq_trim_override_DM	TRIM_WIDTH+1, 1				// 	Used to override the trim delay of all output DQ’s from bit- leveling and to set the delay directly through value programmed in op_dq_dm_dqs_bitwise_trim.
// DM bit is not documented.


#define 	DYNAMIC_BIT_LVL               (PHY_BASE + 0x6B * 4), MC_ACCESS, 32


#define 	DYNAMIC_BIT_LVL_dynamic_bit_leveling	0 ,1				// 	Set to run read bit-leveling dynamically.
#define 	DYNAMIC_BIT_LVL_bit_lvl_trim_latency	4 ,4				// 	Used by bit-leveling logic to add delay in-between samplings of input DQ such that each time trim values are updated, the sampled value has taken the effect of the update.
#define 	DYNAMIC_BIT_LVL_bit_lvl_read_latency	8 ,6				// 	Used by bit-leveling logic after the dynamic bit-leveling process is started to delay the initial sampling of input DQ till there is valid data.
#define 	DYNAMIC_BIT_LVL_bit_lvl_failure_status	14, MEM_STRB_WIDTH				// 	Read only indication of whether bit-leveling has failed on each byte lane, 1 bit per byte lane.

#define 	SCL_WINDOW_TRIM               (PHY_BASE + 0x6D * 4), MC_ACCESS, 32

#define 	SCL_WINDOW_TRIM_winA_extra_margin	0, MAS_DLY_WIDTH 			// 	Can be used to add additional weightage to SCL window A when comparing to window B in case window A has better timing than window B. See “SCL Theory of Operation” for definition of window A and window B.
#define 	SCL_WINDOW_TRIM_winB_extra_margin	8, MAS_DLY_WIDTH 				// 	Can be used to add additional weightage to SCL window B in case window B has better timing than window A. See “SCL Theory of Operation” for definition of window A and window B.
#define 	SCL_WINDOW_TRIM_incr_winA_val   	16, MAS_DLY_WIDTH 				// 	Value by which window A center point needs to be incremented or decremented if the default formula used to calculate the center point is not optimal.
#define 	SCL_WINDOW_TRIM_incr_winB_val	        24, MAS_DLY_WIDTH 				// 	Value by which window B center point needs to be incremented or decremented if the default formula used to calculate the center point is not optimal.

#define 	SCL_GATE_TIMING               (PHY_BASE + 0x78 * 4), MC_ACCESS, 32


#define 	SCL_GATE_TIMING_invert_cycle_cnt_modified_clk	0 ,1				// 	If 1, advances DQS gate opening timing by 1 full DDR clock period from the default value.
#define 	SCL_GATE_TIMING_del_dqs_gate	1 ,1				// 	Used to control whether DQS gate opening timing needs to be delayed (if 1) or advanced (if 0) by dqs_gate_trim.
#define 	SCL_GATE_TIMING_dqs_gate_trim	4, MAS_DLY_WIDTH				// 	Value by which DQS gate opening timing needs to be delayed or advanced. This control is independent of and additional to invert_cycle_cnt_modified_clk

#define 	DISABLE_GATING_FOR_SCL               (PHY_BASE + 0x6E * 4), MC_ACCESS, 32


#define 	DISABLE_GATING_FOR_SCL_disable_scl_gating	0 ,1				// 	Setting this to 1 will disable the traditional SCL gating logic. This gating should be allowed when running bit-leveling at initialization. Once complete this should be set to 1 prior to running SCL at initialization, as SCL will determine proper gating settings to be used throughout operation.
#define 	DISABLE_GATING_FOR_SCL_disable_x_prop_fix	1 ,1				// 	Only used for simulation, this register will not be synthesized. Should be set to 1 after SCL is run for the first time.


#define 	SCL_CONFIG_4               (PHY_BASE + 0x6F * 4), MC_ACCESS, 32


#define 	SCL_CONFIG_4_dly_dfi_wrdata_en_start	0 ,1				// 	Used to delay the wrdata_en_start in the PHY by one cycle when swap phase is set and write CAS latency is even.

#define 	BIT_LVL_CONFIG               (PHY_BASE + 0x18 * 4), MC_ACCESS, 32

#define 	BIT_LVL_CONFIG_bit_lvl_sample_qty	0 ,4				// 	Determines the number of DQ samples that should be taken during each step of bit-leveling to detect if a DQ transition has occurred.
#define 	BIT_LVL_CONFIG_bit_lvl_edge_sel	4 ,2				// 	Selects which edge of DQS to sample data with during read/write bit-leveling. ‘h0 = Negative Edges Only ‘h1 = Positive Edges Only ‘h3 = Both Edges Program         PHY_LANE_SEL with [0…        MEM_STRB_WIDTH] to choose the desired byte lane.

#define 	DYNAMIC_WRITE_BIT_LVL               (PHY_BASE + 0x70 * 4), MC_ACCESS, 32

#define 	DYNAMIC_WRITE_BIT_LVL_dynamic_write_bit_leveling	0 ,1				// 	Set to run bit leveling dynamically with independent write side training. Mutually exclusive with dynamic_bit_leveling. Note that write side bit leveling takes about 10 times longer than read side bit leveling. So set dynamic_bit_leveling and not dynamic_write_bit_leveling if training related latency is a concern.
#define 	DYNAMIC_WRITE_BIT_LVL_bit_lvl_wr_side_trim_lat	4 ,6				// 	Latency value used to know when to evaluate the next sample and update trim.
#define 	DYNAMIC_WRITE_BIT_LVL_bit_lvl_wr_side_read_lat	12 ,7				// 	Latency value used to know when to expect the first read issued by the addr phy.
#define 	DYNAMIC_WRITE_BIT_LVL_bit_lvl_wr_failure_status	20, MEM_STRB_WIDTH				// 	Failure status of write side bit leveling, per lane. 1 signifies that a lane has failed.

#define 	DYNAMIC_WRITE_BIT_LVL_EXT               (PHY_BASE + 0x7B * 4), MC_ACCESS, 32


#define 	DYNAMIC_WRITE_BIT_LVL_EXT_bit_lvl_wr_failure_status	0, (MEM_STRB_WIDTH-12)				// 	Overflow bits from bit_lvl_wr_failure_status in DYNAMIC_WRITE_BIT_LVL.

#define 	DDR4_CONFIG_1               (PHY_BASE + 0x71 * 4), MC_ACCESS, 32

#define 	DDR4_CONFIG_1_ddr4	0 ,1				/* 	Set to 1 for DDR4 otherwise 0.*/
#define 	DDR4_CONFIG_1_scl_start_row_addr	1 ,2				// 	Upper bits, 17:16, of row addr for the start location of SCL data, only applicable in DDR4.
#define 	DDR4_CONFIG_1_pod_term	3 ,1				// 	Set to 1 to enable pull up style on-die termination on the receive path.
#define 	DDR4_CONFIG_1_scl_start_bg_addr	4 ,2				// 	Starting bank group for scl and bit-leveling routines.

// was in Poleg: #define  DDR4_CONFIG_1_scl_bit_lvl_in_ddr4  7 , 1               /* 7 scl_bit_lvl_in_ddr4  This bit must be programmed high before starting SCL or bit-leveling with DDR4                 */


#define 	VREF_TRAINING               (PHY_BASE + 0x72 * 4), MC_ACCESS, 32

#define 	VREF_TRAINING_vref_training	0 ,1				// 	Set high to signal the PHY to operate in vref training mode.
#define 	VREF_TRAINING_vref_output_enable	2 ,1				// 	Set high to enable internally generated VREF reference voltage from UVREF pad.
#define 	VREF_TRAINING_vref_value	4 , VREF_WIDTH				// 	Vref value for the PHY per lane.


#define 	VREF_CA_TRAINING               (PHY_BASE + 0x30 * 4), MC_ACCESS, 32

#define 	VREF_CA_TRAINING_vref_ca_value	0, VREF_WIDTH				// 	VREF value for the Command / Address IOs – used only during loopback test when CA IO receivers are being used..

#define 	VREF_TRAINING_WINDOWS               (PHY_BASE + 0x75 * 4), MC_ACCESS, 32

#define 	VREF_TRAINING_WINDOWS_ddr_window_0	0, BITLVL_DLY_WIDTH				// 	Measured size, in delay steps, of the 0 portion of the data eye. Program phy_lane_sel to <lane>*        BITLVL_DLY_WIDTH before reading this field.
#define 	VREF_TRAINING_WINDOWS_ddr_window_1	8, BITLVL_DLY_WIDTH				// 	Measured size, in delay steps, of the 1 portion of the data eye. Program phy_lane_sel to <lane>*        BITLVL_DLY_WIDTH before reading this field.

#define 	MRW_CTRL               (PHY_BASE + 0x34 * 4), MC_ACCESS, 32

#define 	MRW_CTRL_mrw_cmd	0 ,1				// 	Set to 1 to issue a mode register write command to DRAM. Auto clears when the operation is complete. To program the data to be written in the mode register, use MRW_CTRL_DDR4 in the case of DDR3/DDR4 or mrw_op in the case of LPDDR2/LPDDR3
#define 	MRW_CTRL_mrw_op	4 ,8				// 	Value to be written into LPDDR2/LPDDR3/LPDDR4 mode register. See mrw_cmd
#define 	MRW_CTRL_mrw_mr	12 ,8				// 	Mode register address being programmed
#define 	MRW_CTRL_mrw_wait	20 ,9				// 	Number of half rate cycles of wait time required after programming the concerned mode register.

#define 	MRW_CTRL_DDR4               (PHY_BASE + 0x1A * 4), MC_ACCESS, 32

#define 	MRW_CTRL_DDR4_mrw_op_ddr4	0 ,18				// 	Value to be written into DDR3/DDR4 mode register. See mrw_cmd,

#define 	CA_TRAINING               (PHY_BASE + 0x17 * 4), MC_ACCESS, 32

#define 	CA_TRAINING_ca_training_pattern	0 ,20				// 	Programmable pattern used for LPDDR3 CA training.

#define 	DLL_TEST               (PHY_BASE + 0x11 * 4), MC_ACCESS, 32

#define 	DLL_TEST_dll_test	0 ,1				// 	Enables the DLL test feature.
#define 	DLL_TEST_dll_test_dly	4, MAS_DLY_WIDTH				// 	Delay line delay to be used during the DLL test.
#define 	DLL_TEST_dll_test_period	16 ,10				// 	Programmable time period that specifies how many PHY clock cycles the DLL test feature divider enable should be asserted. The dividers then measure the delay value of each delay line.
#define 	DLL_TEST_test_sel_ip_mclk	28 ,3				// 	Selects which of the DRAM clock outputs is to be tested using loopback test.
#define 	DLL_TEST_loopback_test_clk_sel	31 ,1				// 	Set to 1 to enable loopbacked DRAM clock to be calibrated by DLL master for test purposes.

#define 	DLL_TEST_START               (PHY_BASE + 0x12 * 4), MC_ACCESS, 32

#define 	DLL_TEST_START_dll_test_start	0, MEM_STRB_WIDTH				// 	Starts the DLL test. Programmable per byte lane and self-clearing.

#define 	DLL_TEST_RANGE               (PHY_BASE + 0x13 * 4), MC_ACCESS, 32

#define 	DLL_TEST_RANGE_dll_test_min_value	0, NUM_FF_DIVIDER				// 	Programmable test min value which is used for comparison against the output of the DLL test divider NOTE: DLL test passes if the DLL test divider output is between both the min and max values. For UCLK Loopback Test: Max negative error in delay line steps of calibrated delay of full clock and half-clock periods for the looped back DRAM clock.
#define 	DLL_TEST_RANGE_dll_test_max_value	16, NUM_FF_DIVIDER				// 	Programmable test max value which is used for comparison against the output of the DLL test divider For UCLK Loopback Test: Max positive error in delay line steps of calibrated delay of full clock and half-clock periods for the looped back DRAM clock.

#define 	DLL_TEST_RESULT               (PHY_BASE + 0x14 * 4), MC_ACCESS, 32

#define 	DLL_TEST_RESULT_dll_test_pass	0, AHB_REG_DATA_WIDTH				// 	Readout of whether the DLL test has passed for each DLL. Program PHY_LANE_SEL to shift through dll_test_pass result of all delay lines, 32-bits at a time: dll_test_pass >> {phy_lane_sel, 5’h0} For UCLK Loopback Test: dll_test_pass[        DLL_SIGNAL_WIDTH_DPHY] is used to indicate pass/fail.

#define 	DLLM_WINDOW_SIZE               (PHY_BASE + 0x16 * 4), MC_ACCESS, 32

#define 	DLLM_WINDOW_SIZE_dllm_window_size	0 ,5				// 	Specifies the number of DLL master delay calibration values to take for calculating the moving window average value.in dll_mas_dly. Note: The programmed value represents a power of 2 number of samples. A value of 0 will just take the current calibrated value as is instead of taking an average.
#define 	DLLM_WINDOW_SIZE_clr_dllm_window	8 ,1				// 	Clears all DLL master delay moving window calculation values in the address and data PHYs. It self-clears when address PHY DLL master has finished. Setting this bit also sets clr_dllm_window_dphy for all lanes
#define 	DLLM_WINDOW_SIZE_clr_dllm_window_dphy	12, MEM_STRB_WIDTH				// 	Self-clears when corresponding data PHY DLL master delay moving window calculation values have been cleared.

#define 	DC_PARAM_OUT               (PHY_BASE + 0x76 * 4), MC_ACCESS, 32


#define 	DC_PARAM_OUT_dc_param_wdata	0 ,32				// 	Data to be sent on DDR IOs for test purposes.

#define 	DC_PARAM_SEL               (PHY_BASE + 0x77 * 4), MC_ACCESS, 32


#define 	DC_PARAM_SEL_dc_param_enable	0 ,1				// 	Enables the test mode output value and test mode output enable for DDR IOs.
#define 	DC_PARAM_SEL_dc_param_mode	1 ,2				// 	Program to switch between DC parametric modes as follows; 00: Input, 01: duplicate test data on all PHYs, 10: Test data driven only on selected PHY and all other PHYs drive ‘0’, 11: Test data driven only on selected PHY and all other PHYs drive ‘1’
#define 	DC_PARAM_SEL_dc_param_sel	4 ,5				// 	Set to target the desired PHY for the test input or output. Program hex value for desired data lane and all high for address PHY, i.e. 00011 = lane 3 and 11111 = addr.
#define 	DC_PARAM_SEL_dc_param_rdata	12 ,9				// 	Holds the input from the DDR as {jtag_ip_dqs, jtag_ip_dq} for the byte lane selected above, returns 0 if addr PHY is selected.

#define 	BIT_LVL_MASK               (PHY_BASE + 0x79 * 4), MC_ACCESS, 32

#define 	BIT_LVL_MASK_bit_lvl_mask	0 , DQ_DQS_RATIO				// 	Set to 1 to disable read and write bit leveling from running for a particular bit(s) within every byte lane.


#define 	DYNAMIC_IE_TIMER               (PHY_BASE + 0x7A * 4), MC_ACCESS, 32


#define 	DYNAMIC_IE_TIMER_dynamic_ie_timer_val	0 ,10				// 	Specifies the number of clock cycles that should pass without any read commands being detected before the dynamic input enable control feature disables the dynamic input enable to the IOs
#define 	DYNAMIC_IE_TIMER_enable_ctrl_ie	16 ,1				// 	Set when the controller supports assertion of the turn_on_ie input to PHY to provide an early indication to the PHY about an upcoming read command. The PHY needs this indication at least (        UNIQUIFY_NUM_STAGES_C2D + 2) number of DFI clocks - RL + 10ns before the read command is issued on the DFI bus.



















// Cadence registers:

//****************************************************************************************************************
// Register: DENALI_CTL_0
//****************************************************************************************************************
#define DENALI_CTL_0						(MC_BASE + 0x0000), MC_ACCESS, 32  /* Offset: 0x0000 */
#define DENALI_CTL_0_START					 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Initiate command processing in the controller. Set to 1 to initiate. */
#define DENALI_CTL_0_DRAM_CLASS					 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Defines the class of DRAM memory which is connected to the controller. */
#define DENALI_CTL_0_CONTROLLER_ID				16 , 16  /* Type: RD ; Reset: 0x1046 ; Desc: Holds the controller product id number. */

//****************************************************************************************************************
// Register: DENALI_CTL_1
//****************************************************************************************************************
#define DENALI_CTL_1						(MC_BASE + 0x0004), MC_ACCESS, 32  /* Offset: 0x0004 */
#define DENALI_CTL_1_CONTROLLER_VERSION_0			 0 , 32  /* Type: RD ; Reset: 0x5c91bac3 ; Desc: Holds the controller version id. */

//****************************************************************************************************************
// Register: DENALI_CTL_2
//****************************************************************************************************************
#define DENALI_CTL_2						(MC_BASE + 0x0008), MC_ACCESS, 32  /* Offset: 0x0008 */
#define DENALI_CTL_2_CONTROLLER_VERSION_1			 0 , 32  /* Type: RD ; Reset: 0xe9bb9a0 ; Desc: Holds the controller version id. */

//****************************************************************************************************************
// Register: DENALI_CTL_3
//****************************************************************************************************************
#define DENALI_CTL_3						(MC_BASE + 0x000c), MC_ACCESS, 32  /* Offset: 0x000c */
#define DENALI_CTL_3_MAX_ROW_REG				 0 ,  5  /* Type: RD ; Reset: 0x11 ; Desc: Holds the maximum width of memory address bus. */
#define DENALI_CTL_3_MAX_COL_REG				 8 ,  4  /* Type: RD ; Reset: 0xc ; Desc: Holds the maximum width of column address in DRAMs. */
#define DENALI_CTL_3_MAX_CS_REG					16 ,  1  /* Type: RD ; Reset: 0x1 ; Desc: Holds the maximum number of chip selects available. */
#define DENALI_CTL_3_READ_DATA_FIFO_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x10 ; Desc: Reports the depth of the controller core read data queue. */

//****************************************************************************************************************
// Register: DENALI_CTL_4
//****************************************************************************************************************
#define DENALI_CTL_4						(MC_BASE + 0x0010), MC_ACCESS, 32  /* Offset: 0x0010 */
#define DENALI_CTL_4_READ_DATA_FIFO_PTR_WIDTH			 0 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the width of the controller core read data queue pointer. */
#define DENALI_CTL_4_WRITE_DATA_FIFO_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x10 ; Desc: Reports the depth of the controller core write data latency queue. */
#define DENALI_CTL_4_WRITE_DATA_FIFO_PTR_WIDTH			16 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the width of the controller core write data latency queue pointer. */

//****************************************************************************************************************
// Register: DENALI_CTL_5
//****************************************************************************************************************
#define DENALI_CTL_5						(MC_BASE + 0x0014), MC_ACCESS, 32  /* Offset: 0x0014 */
#define DENALI_CTL_5_MEMCD_RMODW_FIFO_DEPTH			 0 , 16  /* Type: RD ; Reset: 0x24 ; Desc: Reports the depth of the controller core read/modify/write FIFO. */
#define DENALI_CTL_5_MEMCD_RMODW_FIFO_PTR_WIDTH			16 ,  8  /* Type: RD ; Reset: 0x6 ; Desc: Reports the width of the controller core read/modify/write FIFO pointer. */
#define DENALI_CTL_5_ASYNC_CDC_STAGES				24 ,  8  /* Type: RD ; Reset: 0x2 ; Desc: Reports the number of synchronizer delays specified for the asynchronous boundary crossings. */

//****************************************************************************************************************
// Register: DENALI_CTL_6
//****************************************************************************************************************
#define DENALI_CTL_6						(MC_BASE + 0x0018), MC_ACCESS, 32  /* Offset: 0x0018 */
#define DENALI_CTL_6_AXI0_CMDFIFO_LOG2_DEPTH			 0 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 0 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_6_AXI0_RDFIFO_LOG2_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 0 read data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_6_AXI0_WR_ARRAY_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 0 write data array. Value is the log2 value of the depth. */
#define DENALI_CTL_6_AXI0_TRANS_WRFIFO_LOG2_DEPTH		24 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 0 transition write data FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_7
//****************************************************************************************************************
#define DENALI_CTL_7						(MC_BASE + 0x001c), MC_ACCESS, 32  /* Offset: 0x001c */
#define DENALI_CTL_7_AXI0_WRCMD_PROC_FIFO_LOG2_DEPTH		 0 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 0 write command processing FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_7_AXI1_CMDFIFO_LOG2_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 1 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_7_AXI1_RDFIFO_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 1 read data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_7_AXI1_WR_ARRAY_LOG2_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 1 write data array. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_8
//****************************************************************************************************************
#define DENALI_CTL_8						(MC_BASE + 0x0020), MC_ACCESS, 32  /* Offset: 0x0020 */
#define DENALI_CTL_8_AXI1_TRANS_WRFIFO_LOG2_DEPTH		 0 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 1 transition write data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_8_AXI1_WRCMD_PROC_FIFO_LOG2_DEPTH		 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 1 write command processing FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_8_AXI2_CMDFIFO_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 2 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_8_AXI2_RDFIFO_LOG2_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 2 read data FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_9
//****************************************************************************************************************
#define DENALI_CTL_9						(MC_BASE + 0x0024), MC_ACCESS, 32  /* Offset: 0x0024 */
#define DENALI_CTL_9_AXI2_WR_ARRAY_LOG2_DEPTH			 0 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 2 write data array. Value is the log2 value of the depth. */
#define DENALI_CTL_9_AXI2_TRANS_WRFIFO_LOG2_DEPTH		 8 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 2 transition write data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_9_AXI2_WRCMD_PROC_FIFO_LOG2_DEPTH		16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 2 write command processing FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_9_AXI3_CMDFIFO_LOG2_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 3 command FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_10
//****************************************************************************************************************
#define DENALI_CTL_10						(MC_BASE + 0x0028), MC_ACCESS, 32  /* Offset: 0x0028 */
#define DENALI_CTL_10_AXI3_RDFIFO_LOG2_DEPTH			 0 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 3 read data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_10_AXI3_WR_ARRAY_LOG2_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 3 write data array. Value is the log2 value of the depth. */
#define DENALI_CTL_10_AXI3_TRANS_WRFIFO_LOG2_DEPTH		16 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 3 transition write data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_10_AXI3_WRCMD_PROC_FIFO_LOG2_DEPTH		24 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 3 write command processing FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_11
//****************************************************************************************************************
#define DENALI_CTL_11						(MC_BASE + 0x002c), MC_ACCESS, 32  /* Offset: 0x002c */
#define DENALI_CTL_11_AXI4_CMDFIFO_LOG2_DEPTH			 0 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 4 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_11_AXI4_RDFIFO_LOG2_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 4 read data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_11_AXI4_WR_ARRAY_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 4 write data array. Value is the log2 value of the depth. */
#define DENALI_CTL_11_AXI4_TRANS_WRFIFO_LOG2_DEPTH		24 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 4 transition write data FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_12
//****************************************************************************************************************
#define DENALI_CTL_12						(MC_BASE + 0x0030), MC_ACCESS, 32  /* Offset: 0x0030 */
#define DENALI_CTL_12_AXI4_WRCMD_PROC_FIFO_LOG2_DEPTH		 0 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 4 write command processing FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_12_AXI5_CMDFIFO_LOG2_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 5 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_12_AXI5_RDFIFO_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 5 read data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_12_AXI5_WR_ARRAY_LOG2_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 5 write data array. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_13
//****************************************************************************************************************
#define DENALI_CTL_13						(MC_BASE + 0x0034), MC_ACCESS, 32  /* Offset: 0x0034 */
#define DENALI_CTL_13_AXI5_TRANS_WRFIFO_LOG2_DEPTH		 0 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 5 transition write data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_13_AXI5_WRCMD_PROC_FIFO_LOG2_DEPTH		 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 5 write command processing FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_13_AXI6_CMDFIFO_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 6 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_13_AXI6_RDFIFO_LOG2_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 6 read data FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_14
//****************************************************************************************************************
#define DENALI_CTL_14						(MC_BASE + 0x0038), MC_ACCESS, 32  /* Offset: 0x0038 */
#define DENALI_CTL_14_AXI6_WR_ARRAY_LOG2_DEPTH			 0 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 6 write data array. Value is the log2 value of the depth. */
#define DENALI_CTL_14_AXI6_TRANS_WRFIFO_LOG2_DEPTH		 8 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 6 transition write data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_14_AXI6_WRCMD_PROC_FIFO_LOG2_DEPTH		16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 6 write command processing FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_14_AXI7_CMDFIFO_LOG2_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 7 command FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_15
//****************************************************************************************************************
#define DENALI_CTL_15						(MC_BASE + 0x003c), MC_ACCESS, 32  /* Offset: 0x003c */
#define DENALI_CTL_15_AXI7_RDFIFO_LOG2_DEPTH			 0 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 7 read data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_15_AXI7_WR_ARRAY_LOG2_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 7 write data array. Value is the log2 value of the depth. */
#define DENALI_CTL_15_AXI7_TRANS_WRFIFO_LOG2_DEPTH		16 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 7 transition write data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_15_AXI7_WRCMD_PROC_FIFO_LOG2_DEPTH		24 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 7 write command processing FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_16
//****************************************************************************************************************
#define DENALI_CTL_16						(MC_BASE + 0x0040), MC_ACCESS, 32  /* Offset: 0x0040 */
#define DENALI_CTL_16_AXI8_CMDFIFO_LOG2_DEPTH			 0 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 8 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_16_AXI8_RDFIFO_LOG2_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 8 read data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_16_AXI8_WR_ARRAY_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 8 write data array. Value is the log2 value of the depth. */
#define DENALI_CTL_16_AXI8_TRANS_WRFIFO_LOG2_DEPTH		24 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 8 transition write data FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_17
//****************************************************************************************************************
#define DENALI_CTL_17						(MC_BASE + 0x0044), MC_ACCESS, 32  /* Offset: 0x0044 */
#define DENALI_CTL_17_AXI8_WRCMD_PROC_FIFO_LOG2_DEPTH		 0 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 8 write command processing FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_17_AXI9_CMDFIFO_LOG2_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 9 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_17_AXI9_RDFIFO_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 9 read data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_17_AXI9_WR_ARRAY_LOG2_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 9 write data array. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_18
//****************************************************************************************************************
#define DENALI_CTL_18						(MC_BASE + 0x0048), MC_ACCESS, 32  /* Offset: 0x0048 */
#define DENALI_CTL_18_AXI9_TRANS_WRFIFO_LOG2_DEPTH		 0 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 9 transition write data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_18_AXI9_WRCMD_PROC_FIFO_LOG2_DEPTH		 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 9 write command processing FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_18_AXI10_CMDFIFO_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 10 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_18_AXI10_RDFIFO_LOG2_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 10 read data FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_19
//****************************************************************************************************************
#define DENALI_CTL_19						(MC_BASE + 0x004c), MC_ACCESS, 32  /* Offset: 0x004c */
#define DENALI_CTL_19_AXI10_WR_ARRAY_LOG2_DEPTH			 0 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 10 write data array. Value is the log2 value of the depth. */
#define DENALI_CTL_19_AXI10_TRANS_WRFIFO_LOG2_DEPTH		 8 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 10 transition write data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_19_AXI10_WRCMD_PROC_FIFO_LOG2_DEPTH		16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 10 write command processing FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_19_AXI11_CMDFIFO_LOG2_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 11 command FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_20
//****************************************************************************************************************
#define DENALI_CTL_20						(MC_BASE + 0x0050), MC_ACCESS, 32  /* Offset: 0x0050 */
#define DENALI_CTL_20_AXI11_RDFIFO_LOG2_DEPTH			 0 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 11 read data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_20_AXI11_WR_ARRAY_LOG2_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 11 write data array. Value is the log2 value of the depth. */
#define DENALI_CTL_20_AXI11_TRANS_WRFIFO_LOG2_DEPTH		16 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 11 transition write data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_20_AXI11_WRCMD_PROC_FIFO_LOG2_DEPTH		24 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 11 write command processing FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_21
//****************************************************************************************************************
#define DENALI_CTL_21						(MC_BASE + 0x0054), MC_ACCESS, 32  /* Offset: 0x0054 */
#define DENALI_CTL_21_AXI12_CMDFIFO_LOG2_DEPTH			 0 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 12 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_21_AXI12_RDFIFO_LOG2_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 12 read data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_21_AXI12_WR_ARRAY_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 12 write data array. Value is the log2 value of the depth. */
#define DENALI_CTL_21_AXI12_TRANS_WRFIFO_LOG2_DEPTH		24 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 12 transition write data FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_22
//****************************************************************************************************************
#define DENALI_CTL_22						(MC_BASE + 0x0058), MC_ACCESS, 32  /* Offset: 0x0058 */
#define DENALI_CTL_22_AXI12_WRCMD_PROC_FIFO_LOG2_DEPTH		 0 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 12 write command processing FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_22_AXI13_CMDFIFO_LOG2_DEPTH			 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 13 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_22_AXI13_RDFIFO_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 13 read data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_22_AXI13_WR_ARRAY_LOG2_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 13 write data array. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_23
//****************************************************************************************************************
#define DENALI_CTL_23						(MC_BASE + 0x005c), MC_ACCESS, 32  /* Offset: 0x005c */
#define DENALI_CTL_23_AXI13_TRANS_WRFIFO_LOG2_DEPTH		 0 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 13 transition write data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_23_AXI13_WRCMD_PROC_FIFO_LOG2_DEPTH		 8 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 13 write command processing FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_23_AXI14_CMDFIFO_LOG2_DEPTH			16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 14 command FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_23_AXI14_RDFIFO_LOG2_DEPTH			24 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 14 read data FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_24
//****************************************************************************************************************
#define DENALI_CTL_24						(MC_BASE + 0x0060), MC_ACCESS, 32  /* Offset: 0x0060 */
#define DENALI_CTL_24_AXI14_WR_ARRAY_LOG2_DEPTH			 0 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 14 write data array. Value is the log2 value of the depth. */
#define DENALI_CTL_24_AXI14_TRANS_WRFIFO_LOG2_DEPTH		 8 ,  8  /* Type: RD ; Reset: 0x4 ; Desc: Reports the depth of the AXI port 14 transition write data FIFO. Value is the log2 value of the depth. */
#define DENALI_CTL_24_AXI14_WRCMD_PROC_FIFO_LOG2_DEPTH		16 ,  8  /* Type: RD ; Reset: 0x3 ; Desc: Reports the depth of the AXI port 14 write command processing FIFO. Value is the log2 value of the depth. */

//****************************************************************************************************************
// Register: DENALI_CTL_25
//****************************************************************************************************************
#define DENALI_CTL_25						(MC_BASE + 0x0064), MC_ACCESS, 32  /* Offset: 0x0064 */
#define DENALI_CTL_25_TINIT					 0 , 24  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TINIT value in cycles. */
#define DENALI_CTL_25_PHY_INDEP_TRAIN_MODE			24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable PHY independent training mode commands during initialization. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_26
//****************************************************************************************************************
#define DENALI_CTL_26						(MC_BASE + 0x0068), MC_ACCESS, 32  /* Offset: 0x0068 */
#define DENALI_CTL_26_TSREF2PHYMSTR				 0 ,  6  /* Type: RW ; Reset: 0x0 ; Desc: Specifies the minimum time after a self-refresh exit command on the DFI bus that the Controller will wait for the PHY to assert the dfi_phymstr_req signal, before completing other commands. Used when the low power control logic is expected to pass control to the PHY for training when exiting SREF. */
#define DENALI_CTL_26_PHY_INDEP_INIT_MODE			 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable PHY independent initailization mode commands during initialization. Set to 1 to enable. */
#define DENALI_CTL_26_DFIBUS_FREQ				16 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI bus frequency. */

//****************************************************************************************************************
// Register: DENALI_CTL_27
//****************************************************************************************************************
#define DENALI_CTL_27						(MC_BASE + 0x006c), MC_ACCESS, 32  /* Offset: 0x006c */
#define DENALI_CTL_27_TRST_PWRON				 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Duration of memory reset during power-on initialization. */

//****************************************************************************************************************
// Register: DENALI_CTL_28
//****************************************************************************************************************
#define DENALI_CTL_28						(MC_BASE + 0x0070), MC_ACCESS, 32  /* Offset: 0x0070 */
#define DENALI_CTL_28_CKE_INACTIVE				 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Number of cycles after reset before CKE will be active. */

//****************************************************************************************************************
// Register: DENALI_CTL_29
//****************************************************************************************************************
#define DENALI_CTL_29						(MC_BASE + 0x0074), MC_ACCESS, 32  /* Offset: 0x0074 */
#define DENALI_CTL_29_TDLL					 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TDLL value in cycles. */
#define DENALI_CTL_29_CASLAT_LIN				16 ,  6  /* Type: RW ; Reset: 0x0 ; Desc: Sets latency from read command send to data receive from/to controller. Bit (0) is half-cycle increment and the upper bits define memory CAS latency for the controller. */
#define DENALI_CTL_29_WRLAT					24 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: DRAM WRLAT value in cycles. */

//****************************************************************************************************************
// Register: DENALI_CTL_30
//****************************************************************************************************************
#define DENALI_CTL_30						(MC_BASE + 0x0078), MC_ACCESS, 32  /* Offset: 0x0078 */
#define DENALI_CTL_30_ADDITIVE_LAT				 0 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: DRAM additive latency value in cycles. */
#define DENALI_CTL_30_CA_PARITY_LAT				 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: DRAM CA parity latency value in cycles. */
#define DENALI_CTL_30_TMOD_PAR					16 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TMOD value when CA parity is enabled in cycles. */
#define DENALI_CTL_30_TMRD_PAR					24 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TMRD value when CA parity is enabled in cycles. */

//****************************************************************************************************************
// Register: DENALI_CTL_31
//****************************************************************************************************************
#define DENALI_CTL_31						(MC_BASE + 0x007c), MC_ACCESS, 32  /* Offset: 0x007c */
#define DENALI_CTL_31_TBST_INT_INTERVAL				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: DRAM burst interrupt interval value in cycles. */
#define DENALI_CTL_31_TCCD					 8 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: DRAM CAS-to-CAS value in cycles. */
#define DENALI_CTL_31_TCCD_L					16 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: DRAM CAS-to-CAS value within the same bank group in cycles. */
#define DENALI_CTL_31_TRRD					24 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TRRD value in cycles. */

//****************************************************************************************************************
// Register: DENALI_CTL_32
//****************************************************************************************************************
#define DENALI_CTL_32						(MC_BASE + 0x0080), MC_ACCESS, 32  /* Offset: 0x0080 */
#define DENALI_CTL_32_TRRD_L					 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TRRD_L value in cycles. */
#define DENALI_CTL_32_TRC					 8 ,  9  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TRC value in cycles. */

//****************************************************************************************************************
// Register: DENALI_CTL_33
//****************************************************************************************************************
#define DENALI_CTL_33						(MC_BASE + 0x0084), MC_ACCESS, 32  /* Offset: 0x0084 */
#define DENALI_CTL_33_TRAS_MIN					 0 ,  9  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TRAS_MIN value in cycles. */
#define DENALI_CTL_33_TWTR					16 ,  6  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TWTR value in cycles. */
#define DENALI_CTL_33_TWTR_L					24 ,  6  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TWTR_L value in cycles. */

//****************************************************************************************************************
// Register: DENALI_CTL_34
//****************************************************************************************************************
#define DENALI_CTL_34						(MC_BASE + 0x0088), MC_ACCESS, 32  /* Offset: 0x0088 */
#define DENALI_CTL_34_TRP					 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TRP value in cycles. */
#define DENALI_CTL_34_TFAW					 8 ,  9  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TFAW value in cycles. */
#define DENALI_CTL_34_TRTP					24 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TRTP value in cycles. */

//****************************************************************************************************************
// Register: DENALI_CTL_35
//****************************************************************************************************************
#define DENALI_CTL_35						(MC_BASE + 0x008c), MC_ACCESS, 32  /* Offset: 0x008c */
#define DENALI_CTL_35_TRTP_AP					 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TRTP for auto-precharge value in cycles. */
#define DENALI_CTL_35_TMRD					 8 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TMRD value in cycles. */
#define DENALI_CTL_35_TMOD					16 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Number of cycles after MRS command and before any other command. */

//****************************************************************************************************************
// Register: DENALI_CTL_36
//****************************************************************************************************************
#define DENALI_CTL_36						(MC_BASE + 0x0090), MC_ACCESS, 32  /* Offset: 0x0090 */
#define DENALI_CTL_36_TRAS_MAX					 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TRAS_MAX value in cycles. */
#define DENALI_CTL_36_TCKE					24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Minimum CKE pulse width. */

//****************************************************************************************************************
// Register: DENALI_CTL_37
//****************************************************************************************************************
#define DENALI_CTL_37						(MC_BASE + 0x0094), MC_ACCESS, 32  /* Offset: 0x0094 */
#define DENALI_CTL_37_TCKESR					 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Minimum CKE low pulse width during a self-refresh. */
#define DENALI_CTL_37_MC_RESERVED0				 8 ,  3  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_37_MC_RESERVED1				16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_37_WRITEINTERP				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Allow controller to interrupt a write burst to the DRAMs with a read command. Set to 1 to allow interruption. */

//****************************************************************************************************************
// Register: DENALI_CTL_38
//****************************************************************************************************************
#define DENALI_CTL_38						(MC_BASE + 0x0098), MC_ACCESS, 32  /* Offset: 0x0098 */
#define DENALI_CTL_38_TRCD					 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TRCD value in cycles. */
#define DENALI_CTL_38_TWR					 8 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TWR value in cycles. */
#define DENALI_CTL_38_TVREF					16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Defines the number of cycles of delay after a MRW command that changes VREF value to the next command. */

//****************************************************************************************************************
// Register: DENALI_CTL_39
//****************************************************************************************************************
#define DENALI_CTL_39						(MC_BASE + 0x009c), MC_ACCESS, 32  /* Offset: 0x009c */
#define DENALI_CTL_39_TMRD_PDA					 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Number of cycles after a per-DRAM addressable MRW command data is complete to the next command. */
#define DENALI_CTL_39_AP					 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable auto pre-charge mode of controller. Set to 1 to enable. */
#define DENALI_CTL_39_CONCURRENTAP				16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: IF the DRAM supports it, this allows the controller to issue commands to other banks while a bank is in auto pre-charge. Set to 1 to enable. */
#define DENALI_CTL_39_TRAS_LOCKOUT				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: IF the DRAM supports it, this allows the controller to execute auto pre-charge commands before the TRAS_MIN parameter expires. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_40
//****************************************************************************************************************
#define DENALI_CTL_40						(MC_BASE + 0x00a0), MC_ACCESS, 32  /* Offset: 0x00a0 */
#define DENALI_CTL_40_TDAL					 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TDAL value in cycles. */
#define DENALI_CTL_40_BSTLEN					 8 ,  3  /* Type: RW_D ; Reset: 0x2 ; Desc: Encoded burst length sent to DRAMs during initialization. Program to 1 for BL2, program to 2 for BL4, or program to 3 for BL8. All other settings are reserved. */
#define DENALI_CTL_40_TRP_AB					16 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TRP all bank value in cycles. */
#define DENALI_CTL_40_REG_DIMM_ENABLE				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable registered DIMM operation of the controller. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_41
//****************************************************************************************************************
#define DENALI_CTL_41						(MC_BASE + 0x00a4), MC_ACCESS, 32  /* Offset: 0x00a4 */
#define DENALI_CTL_41_OPTIMAL_RMODW_EN				 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables optimized RMODW logic in the controller. A value of 1 enables optimized RMODW operation. All RMODW operations are still supported in a non-optimal manner when the value is 0. */
#define DENALI_CTL_41_MC_RESERVED2				 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_41_NO_MEMORY_DM				16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Indicates that the external DRAM does not support DM masking. Set to 1 for no DM masking at the DRAM. */

//****************************************************************************************************************
// Register: DENALI_CTL_42
//****************************************************************************************************************
#define DENALI_CTL_42						(MC_BASE + 0x00a8), MC_ACCESS, 32  /* Offset: 0x00a8 */
#define DENALI_CTL_42_CA_PARITY_ERROR_INJECT			 0 , 26  /* Type: RW ; Reset: 0x0 ; Desc: Selects bit to corrupt on the CA bus for CA parity error injection. */

//****************************************************************************************************************
// Register: DENALI_CTL_43
//****************************************************************************************************************
#define DENALI_CTL_43						(MC_BASE + 0x00ac), MC_ACCESS, 32  /* Offset: 0x00ac */
#define DENALI_CTL_43_CA_PARITY_ERROR				 0 ,  1  /* Type: RD ; Reset: 0x0 ; Desc: Contains one hot indication of registered DIMM parity errors. Value of 1 indicates an error on that DIMM. */
#define DENALI_CTL_43_AREFRESH					 8 ,  1  /* Type: WR ; Reset: 0x0 ; Desc: Initiate auto-refresh at the end of the current burst boundary. Set to 1 to trigger. */
#define DENALI_CTL_43_AREF_STATUS				16 ,  1  /* Type: RD ; Reset: 0x0 ; Desc: Indicates a SR error associated with the AREF interrupt. Value of 1 indicates a violation. */
#define DENALI_CTL_43_TREF_ENABLE				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Issue auto-refresh commands to the DRAMs at the interval defined in the TREF parameter. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_44
//****************************************************************************************************************
#define DENALI_CTL_44						(MC_BASE + 0x00b0), MC_ACCESS, 32  /* Offset: 0x00b0 */
#define DENALI_CTL_44_MC_RESERVED3				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_44_CS_COMPARISON_FOR_REFRESH_DEPTH		 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Defines the number of entries of the command queue that the refresh logic will consider for sending a refresh command. A non-zero value limits the decode to a subset of the full command pipeline. */
#define DENALI_CTL_44_TRFC					16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TRFC value in cycles. */

//****************************************************************************************************************
// Register: DENALI_CTL_45
//****************************************************************************************************************
#define DENALI_CTL_45						(MC_BASE + 0x00b4), MC_ACCESS, 32  /* Offset: 0x00b4 */
#define DENALI_CTL_45_TREF					 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TREF value in cycles. */

//****************************************************************************************************************
// Register: DENALI_CTL_46
//****************************************************************************************************************
#define DENALI_CTL_46						(MC_BASE + 0x00b8), MC_ACCESS, 32  /* Offset: 0x00b8 */
#define DENALI_CTL_46_TPDEX					 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TPDEX value in cycles. */
#define DENALI_CTL_46_TXPDLL					16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TXPDLL value in cycles. */

//****************************************************************************************************************
// Register: DENALI_CTL_47
//****************************************************************************************************************
#define DENALI_CTL_47						(MC_BASE + 0x00bc), MC_ACCESS, 32  /* Offset: 0x00bc */
#define DENALI_CTL_47_TXSR					 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TXSR value in cycles. */
#define DENALI_CTL_47_TXSNR					16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TXSNR value in cycles. */

//****************************************************************************************************************
// Register: DENALI_CTL_48
//****************************************************************************************************************
#define DENALI_CTL_48						(MC_BASE + 0x00c0), MC_ACCESS, 32  /* Offset: 0x00c0 */
#define DENALI_CTL_48_TXPR					 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DRAM TXPR value in cycles.This parameter defines reset exit time from CKE HIGH to a valid command  */
#define DENALI_CTL_48_PWRUP_SREFRESH_EXIT			16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Allow powerup via self-refresh instead of full memory initialization. Set to 1 to enable. */
#define DENALI_CTL_48_MC_RESERVED4				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_49
//****************************************************************************************************************
#define DENALI_CTL_49						(MC_BASE + 0x00c4), MC_ACCESS, 32  /* Offset: 0x00c4 */
#define DENALI_CTL_49_ENABLE_QUICK_SREFRESH			 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Allow user to interrupt memory initialization to enter self-refresh mode. Set to 1 to allow interruption. */
#define DENALI_CTL_49_CKE_DELAY					 8 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Additional cycles to delay CKE for status reporting. */
#define DENALI_CTL_49_ZQ_STATUS_LOG				16 ,  1  /* Type: RD ; Reset: 0x0 ; Desc: Indicates that a ZQ cal init, reset, short, or long command was received that was terminated without execution. Value of 1 indicates a violation. */
#define DENALI_CTL_49_MC_RESERVED5				24 ,  3  /* Type: RW ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_50
//****************************************************************************************************************
#define DENALI_CTL_50						(MC_BASE + 0x00c8), MC_ACCESS, 32  /* Offset: 0x00c8 */
#define DENALI_CTL_50_MC_RESERVED6				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_50_MC_RESERVED7				 8 ,  8  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_50_MC_RESERVED8				16 ,  8  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_50_MC_RESERVED9				24 ,  8  /* Type: RW ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_51
//****************************************************************************************************************
#define DENALI_CTL_51						(MC_BASE + 0x00cc), MC_ACCESS, 32  /* Offset: 0x00cc */
#define DENALI_CTL_51_UPD_CTRLUPD_NORM_THRESHOLD		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DFI control update number of long counts until the normal priority request is asserted. */
#define DENALI_CTL_51_UPD_CTRLUPD_HIGH_THRESHOLD		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DFI control update number of long counts until the high priority request is asserted. */

//****************************************************************************************************************
// Register: DENALI_CTL_52
//****************************************************************************************************************
#define DENALI_CTL_52						(MC_BASE + 0x00d0), MC_ACCESS, 32  /* Offset: 0x00d0 */
#define DENALI_CTL_52_UPD_CTRLUPD_TIMEOUT			 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DFI control update number of long counts until the timeout is asserted. */
#define DENALI_CTL_52_UPD_CTRLUPD_SW_PROMOTE_THRESHOLD		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DFI control update SW promotion number of long counts until the high priority request is asserted. */

//****************************************************************************************************************
// Register: DENALI_CTL_53
//****************************************************************************************************************
#define DENALI_CTL_53						(MC_BASE + 0x00d4), MC_ACCESS, 32  /* Offset: 0x00d4 */
#define DENALI_CTL_53_UPD_PHYUPD_DFI_PROMOTE_THRESHOLD		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DFI PHY update DFI promotion number of long counts until the high priority request is asserted. */

//****************************************************************************************************************
// Register: DENALI_CTL_54
//****************************************************************************************************************
#define DENALI_CTL_54						(MC_BASE + 0x00d8), MC_ACCESS, 32  /* Offset: 0x00d8 */
#define DENALI_CTL_54_TDFI_PHYMSTR_MAX				 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tPHYMSTR_MAX timing parameter (in DFI clocks), the maximum cycles that dfi_phymstr_req can be asserted following the assertion of dfi_phymstr_ack. If programmed to a non-zero, a timing violation will cause an interrupt and bit (0) set in the PHYMSTR_ERROR_STATUS parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_55
//****************************************************************************************************************
#define DENALI_CTL_55						(MC_BASE + 0x00dc), MC_ACCESS, 32  /* Offset: 0x00dc */
#define DENALI_CTL_55_TDFI_PHYMSTR_RESP				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tPHYMSTR_RESP timing parameter (in DFI clocks), the maximum cycles between a dfi_phymstr_req assertion and a dfi_phymstr_ack assertion. If programmed to a non-zero, a timing violation will cause an interrupt and bit (1) to be set to 1 in the PHYMSTR_ERROR_STATUS parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_56
//****************************************************************************************************************
#define DENALI_CTL_56						(MC_BASE + 0x00e0), MC_ACCESS, 32  /* Offset: 0x00e0 */
#define DENALI_CTL_56_PHYMSTR_DFI_PROMOTE_THRESHOLD		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DFI PHY master request promotion number of long counts until the high priority request is asserted. */
#define DENALI_CTL_56_PHYMSTR_NO_AREF				16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Disables refreshes during the PHY master interface sequence. Set to 1 to disable. Refreshes during reset are only supported for DFI 4.0 and this parameter may be set or cleared for DFI 4.0. For all other DFI versions, this parameter must be set to 1. */
#define DENALI_CTL_56_PHYMSTR_ERROR_STATUS			24 ,  2  /* Type: RD ; Reset: 0x0 ; Desc: Identifies the source of any DFI PHY Master Interface errors. Value of 1 indicates a timing violation of the associated timing parameter. Bit (0) set indicates a TDFI_PHYMSTR_MAX or TDFI_PHYMSTR_TYPEn_MAX parmaeter violation and bit (1) set indicates a TDFI_PHYMSTR_RESP parameter violation. */

//****************************************************************************************************************
// Register: DENALI_CTL_57
//****************************************************************************************************************
#define DENALI_CTL_57						(MC_BASE + 0x00e4), MC_ACCESS, 32  /* Offset: 0x00e4 */
#define DENALI_CTL_57_PHYMSTR_DFI_VERSION_4P0V1			 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the version of the DFI 4.0 specification supported. Clear to 0 for DFI 4.0 version 2 PHY Master Interface, or set to 1 for DFI 4.0 version 1 PHY Master Interface. Default is cleared to 0 for version 2. */
#define DENALI_CTL_57_PHYMSTR_TRAIN_AFTER_INIT_COMPLETE		 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines how the PHY will use the PHY Master Interface for training. Clear to 0 to perform training without the PHY Master Interface, or set to 1 to use the PHY Master Interface to gain control over the DFI bus after the dfi_init_complete signal assertion for the initial training. Default is cleared to 0. */
#define DENALI_CTL_57_PPR_CONTROL				16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables the post-package repair feature. Set to 1 to enable. This parameter may only be programmed before initialization begins. */
#define DENALI_CTL_57_PPR_COMMAND				24 ,  3  /* Type: WR ; Reset: 0x0 ; Desc: Specifies the type of PPR command. Program to 1 for pre-charge all, program to 2 for MRW, program to 3 for activate, or program to 5 for write. All other values are reserved. */

//****************************************************************************************************************
// Register: DENALI_CTL_58
//****************************************************************************************************************
#define DENALI_CTL_58						(MC_BASE + 0x00e8), MC_ACCESS, 32  /* Offset: 0x00e8 */
#define DENALI_CTL_58_PPR_COMMAND_MRW_REGNUM			 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Specifies the mode register to be used. Clear to 0 for MRW0 or program to 4 for MRW4. All other values are reserved. */
#define DENALI_CTL_58_PPR_COMMAND_MRW_DATA			 8 , 17  /* Type: RW ; Reset: 0x0 ; Desc: Specifies the data for the mode register write. */

//****************************************************************************************************************
// Register: DENALI_CTL_59
//****************************************************************************************************************
#define DENALI_CTL_59						(MC_BASE + 0x00ec), MC_ACCESS, 32  /* Offset: 0x00ec */
#define DENALI_CTL_59_PPR_ROW_ADDRESS				 0 , 17  /* Type: RW ; Reset: 0x0 ; Desc: Specifies the encoded row address to be repaired. */
#define DENALI_CTL_59_PPR_BANK_ADDRESS				24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Specifies the bank for the row to be repaired. */

//****************************************************************************************************************
// Register: DENALI_CTL_60
//****************************************************************************************************************
#define DENALI_CTL_60						(MC_BASE + 0x00f0), MC_ACCESS, 32  /* Offset: 0x00f0 */
#define DENALI_CTL_60_PPR_CS_ADDRESS				 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Specifies the chip select for the row to be repaired. */

//****************************************************************************************************************
// Register: DENALI_CTL_61
//****************************************************************************************************************
#define DENALI_CTL_61						(MC_BASE + 0x00f4), MC_ACCESS, 32  /* Offset: 0x00f4 */
#define DENALI_CTL_61_PPR_DATA_0				 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Holds the data pattern to be written to memory for all data phases. This is specific to DDR4 memories. */

//****************************************************************************************************************
// Register: DENALI_CTL_62
//****************************************************************************************************************
#define DENALI_CTL_62						(MC_BASE + 0x00f8), MC_ACCESS, 32  /* Offset: 0x00f8 */
#define DENALI_CTL_62_PPR_DATA_1				 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Holds the data pattern to be written to memory for all data phases. This is specific to DDR4 memories. */

//****************************************************************************************************************
// Register: DENALI_CTL_63
//****************************************************************************************************************
#define DENALI_CTL_63						(MC_BASE + 0x00fc), MC_ACCESS, 32  /* Offset: 0x00fc */
#define DENALI_CTL_63_PPR_STATUS				 0 ,  2  /* Type: RD ; Reset: 0x0 ; Desc: Reports the status of the PPR operation. Bit (0) set indicates that PPR operations are now allowed and bit (1) set indicates if the last PPR command is complete. */
#define DENALI_CTL_63_LOWPOWER_REFRESH_ENABLE			 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable refreshes while in low power mode. Bit (0) controls cs0, bit (1) controls cs1, etc. Set each bit to 1 to disable. */
#define DENALI_CTL_63_CKSRE					16 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Clock hold delay on self-refresh entry. */
#define DENALI_CTL_63_CKSRX					24 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Clock stable delay on self-refresh exit. */

//****************************************************************************************************************
// Register: DENALI_CTL_64
//****************************************************************************************************************
#define DENALI_CTL_64						(MC_BASE + 0x0100), MC_ACCESS, 32  /* Offset: 0x0100 */
#define DENALI_CTL_64_LP_CMD					 0 ,  7  /* Type: WR ; Reset: 0x0 ; Desc: Low power software command request interface. Bit (0) controls exit, bit (1) controls entry, bits (4:2) define the low power state, bit (5) controls memory clock gating, bit (6) controls controller clock gating, and bit (7) controls lock. */
#define DENALI_CTL_64_LPI_IDLE_WAKEUP				 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tLP_WAKEUP timing parameter (in DFI clocks) to be driven when Controller is idle. */
#define DENALI_CTL_64_LPI_SR_SHORT_WAKEUP			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tLP_WAKEUP timing parameter (in DFI clocks) to be driven when memory is in the self-refresh short state (with or without memory clock gating). */
#define DENALI_CTL_64_LPI_SR_LONG_WAKEUP			24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tLP_WAKEUP timing parameter (in DFI clocks) to be driven when memory is in the self-refresh long state (with or without memory clock gating). */

//****************************************************************************************************************
// Register: DENALI_CTL_65
//****************************************************************************************************************
#define DENALI_CTL_65						(MC_BASE + 0x0104), MC_ACCESS, 32  /* Offset: 0x0104 */
#define DENALI_CTL_65_LPI_SR_LONG_MCCLK_GATE_WAKEUP		 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tLP_WAKEUP timing parameter (in DFI clocks) to be driven when memory is in the self-refresh long with memory and controller clock gating state. */
#define DENALI_CTL_65_LPI_PD_WAKEUP				 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tLP_WAKEUP timing parameter (in DFI clocks) to be driven when memory is in any of the power-down states (with or without memory clock gating). */
#define DENALI_CTL_65_LPI_TIMER_WAKEUP				16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tLP_WAKEUP timing parameter (in DFI clocks) to be driven when the LPI timer expires. */
#define DENALI_CTL_65_LPI_WAKEUP_EN				24 ,  6  /* Type: RW ; Reset: 0x0 ; Desc: Enables the various low power state wakeup parameters for LPI request uses. Bit (0) enables controller idle wakeup, bit (1) enables power-down wakeup, bit (2) enables either self-refresh short or self-refresh long with or without mem clk gating, bit (3) enables self-refresh long with mem and ctlr clk gating, bit (4) enables the LPI timer expiry wakeup, and bit (5) is reserved. Set each bit to 1 to enable the respective LP_WAKEUP value for the LPI request. */

//****************************************************************************************************************
// Register: DENALI_CTL_66
//****************************************************************************************************************
#define DENALI_CTL_66						(MC_BASE + 0x0108), MC_ACCESS, 32  /* Offset: 0x0108 */
#define DENALI_CTL_66_LPI_CTRL_REQ_EN				 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables the dfi_lpi_ctrl_req signal for the LPI. This signal is only relevant for DFI versions 3.1 and beyond. Set to 1 to enable or clear to 0 to disable. */
#define DENALI_CTL_66_LPI_TIMER_COUNT				 8 , 12  /* Type: RW ; Reset: 0x0 ; Desc: Defines the LPI timer count, the number of clock cycles of idle time before transitioning the dfi_lp_wakeup signal to the LPI_TIMER_WAKEUP value. */

//****************************************************************************************************************
// Register: DENALI_CTL_67
//****************************************************************************************************************
#define DENALI_CTL_67						(MC_BASE + 0x010c), MC_ACCESS, 32  /* Offset: 0x010c */
#define DENALI_CTL_67_LPI_WAKEUP_TIMEOUT			 0 , 12  /* Type: RW ; Reset: 0x0 ; Desc: Defines the LPI timeout time, the maximum cycles between a dfi_lp_req de-assertion and a dfi_lp_ack de-assertion. If this value is exceeded, an interrupt will occur. */
#define DENALI_CTL_67_TDFI_LP_RESP				16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tLP_RESP timing parameter (in DFI clocks), the maximum cycles between a dfi_lp_req assertion and a dfi_lp_ack assertion. */
#define DENALI_CTL_67_LP_STATE					24 ,  7  /* Type: RD ; Reset: 0x40 ; Desc: Low power state status parameter. Bits (5:0) indicate the current low power state and bit (6) set indicates that status bits are valid. */

//****************************************************************************************************************
// Register: DENALI_CTL_68
//****************************************************************************************************************
#define DENALI_CTL_68						(MC_BASE + 0x0110), MC_ACCESS, 32  /* Offset: 0x0110 */
#define DENALI_CTL_68_LP_AUTO_ENTRY_EN				 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Enable auto entry into each of the low power states when the associated idle timer expires. Bit (0) controls power-down, bit (1) controls self-refresh long, bit (2) controls self-refresh long with memory and controller clock gating, and bit (3) controls self-refresh short. Set each bit to 1 to enable. */
#define DENALI_CTL_68_LP_AUTO_EXIT_EN				 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Enable auto exit from each of the low power states when a read or write command enters the command queue. Bit (0) controls power-down, bit (1) controls self-refresh long, bit (2) controls self-refresh long with memory and controller clock gating, and bit (3) controls self-refresh short. Set each bit to 1 to enable. */
#define DENALI_CTL_68_LP_AUTO_MEM_GATE_EN			16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Enable memory clock gating when entering a low power state via the auto low power counters. Bit (0) controls power-down, bit (1) controls self-refresh long, and bit (2) controls self-refresh short. Set each bit to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_69
//****************************************************************************************************************
#define DENALI_CTL_69						(MC_BASE + 0x0114), MC_ACCESS, 32  /* Offset: 0x0114 */
#define DENALI_CTL_69_LP_AUTO_PD_IDLE				 0 , 12  /* Type: RW ; Reset: 0x0 ; Desc: Defines the idle time (in controller clocks) until the controller will automatically issue an entry into one of the power-down low power states. */
#define DENALI_CTL_69_LP_AUTO_SR_SHORT_IDLE			16 , 12  /* Type: RW ; Reset: 0x0 ; Desc: Defines the idle time (in controller clocks) until the controller will automatically issue an entry into the self-refresh short (with or without memory clock gating) low power states. */

//****************************************************************************************************************
// Register: DENALI_CTL_70
//****************************************************************************************************************
#define DENALI_CTL_70						(MC_BASE + 0x0118), MC_ACCESS, 32  /* Offset: 0x0118 */
#define DENALI_CTL_70_LP_AUTO_SR_LONG_IDLE			 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Defines the idle time (in long counts) until the controller will automatically issue an entry into the self-refresh long (with or without memory clock gating) low power states. */
#define DENALI_CTL_70_LP_AUTO_SR_LONG_MC_GATE_IDLE		 8 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Defines the idle time (in long counts) until the controller will automatically issue an entry into the self-refresh long with memory and controller clock gating low power state. */
#define DENALI_CTL_70_HW_PROMOTE_THRESHOLD			16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: HW interface promotion number of long counts until the high priority request is asserted. */

//****************************************************************************************************************
// Register: DENALI_CTL_71
//****************************************************************************************************************
#define DENALI_CTL_71						(MC_BASE + 0x011c), MC_ACCESS, 32  /* Offset: 0x011c */
#define DENALI_CTL_71_LPC_PROMOTE_THRESHOLD			 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: LPC promotion number of long counts until the high priority request is asserted. Applies to SW and auto low power commands. */
#define DENALI_CTL_71_LPC_SR_CTRLUPD_EN				16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable LPC to execute a DFI control update on a self-refresh exit sequence. Set to 1 to enable. */
#define DENALI_CTL_71_LPC_SR_PHYUPD_EN				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable LPC to execute a DFI PHY update on a self-refresh exit sequence. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_72
//****************************************************************************************************************
#define DENALI_CTL_72						(MC_BASE + 0x0120), MC_ACCESS, 32  /* Offset: 0x0120 */
#define DENALI_CTL_72_LPC_SR_PHYMSTR_EN				 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable LPC to execute a DFI PHY Master request on a self-refresh exit sequence. Set to 1 to enable. */
#define DENALI_CTL_72_LPC_SR_ZQ_EN				 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable LPC to execute a ZQ calibration on a self-refresh exit sequence. Set to 1 to enable. */
#define DENALI_CTL_72_MC_RESERVED10				16 ,  8  /* Type: RW ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_73
//****************************************************************************************************************
#define DENALI_CTL_73						(MC_BASE + 0x0124), MC_ACCESS, 32  /* Offset: 0x0124 */
#define DENALI_CTL_73_WRITE_MODEREG				 0 , 27  /* Type: RW+ ; Reset: 0x0 ; Desc: Write memory mode register data to the DRAMs. Bits (7:0) define the memory mode register number if bit (23) is set, bits (15:8) define the chip select if bit (24) is clear, bits (23:16) define which memory mode register/s to write, bit (24) defines whether all chip selects will be written, and bit (25) triggers the write. */

//****************************************************************************************************************
// Register: DENALI_CTL_74
//****************************************************************************************************************
#define DENALI_CTL_74						(MC_BASE + 0x0128), MC_ACCESS, 32  /* Offset: 0x0128 */
#define DENALI_CTL_74_MRW_STATUS				 0 ,  8  /* Type: RD ; Reset: 0x0 ; Desc: Write memory mode register status. Bit (0) set indicates a WRITE_MODEREG parameter programming error. Bit (1) is Reserved. Bit (2) is Reserved. Bit (3) set indicates a self-refresh or deep power-down error. Bit (4) is Reserved. */
#define DENALI_CTL_74_MRW_PROMOTE_THRESHOLD			 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: MRW promotion number of long counts until the high priority request is asserted. Applies to SW MRW commands. */
#define DENALI_CTL_74_MC_RESERVED11				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_75
//****************************************************************************************************************
#define DENALI_CTL_75						(MC_BASE + 0x012c), MC_ACCESS, 32  /* Offset: 0x012c */
#define DENALI_CTL_75_MR0_DATA_0				 0 , 17  /* Type: RW ; Reset: 0x0 ; Desc: Data to program into memory mode register 0 for chip select 0. */

//****************************************************************************************************************
// Register: DENALI_CTL_76
//****************************************************************************************************************
#define DENALI_CTL_76						(MC_BASE + 0x0130), MC_ACCESS, 32  /* Offset: 0x0130 */
#define DENALI_CTL_76_MR1_DATA_0				 0 , 17  /* Type: RW ; Reset: 0x0 ; Desc: Data to program into memory mode register 1 for chip select 0. */

//****************************************************************************************************************
// Register: DENALI_CTL_77
//****************************************************************************************************************
#define DENALI_CTL_77						(MC_BASE + 0x0134), MC_ACCESS, 32  /* Offset: 0x0134 */
#define DENALI_CTL_77_MR2_DATA_0				 0 , 17  /* Type: RW ; Reset: 0x0 ; Desc: Data to program into memory mode register 2 for chip select 0. */

//****************************************************************************************************************
// Register: DENALI_CTL_78
//****************************************************************************************************************
#define DENALI_CTL_78						(MC_BASE + 0x0138), MC_ACCESS, 32  /* Offset: 0x0138 */
#define DENALI_CTL_78_MRSINGLE_DATA_0				 0 , 17  /* Type: RW ; Reset: 0x0 ; Desc: Data to program into memory mode register single write to chip select 0. */

//****************************************************************************************************************
// Register: DENALI_CTL_79
//****************************************************************************************************************
#define DENALI_CTL_79						(MC_BASE + 0x013c), MC_ACCESS, 32  /* Offset: 0x013c */
#define DENALI_CTL_79_MR3_DATA_0				 0 , 17  /* Type: RW ; Reset: 0x0 ; Desc: Data to program into memory mode register 3 for chip select 0. */

//****************************************************************************************************************
// Register: DENALI_CTL_80
//****************************************************************************************************************
#define DENALI_CTL_80						(MC_BASE + 0x0140), MC_ACCESS, 32  /* Offset: 0x0140 */
#define DENALI_CTL_80_MR4_DATA_0				 0 , 17  /* Type: RW ; Reset: 0x0 ; Desc: Data to program into memory mode register 4 for chip select 0. */

//****************************************************************************************************************
// Register: DENALI_CTL_81
//****************************************************************************************************************
#define DENALI_CTL_81						(MC_BASE + 0x0144), MC_ACCESS, 32  /* Offset: 0x0144 */
#define DENALI_CTL_81_MR5_DATA_0				 0 , 17  /* Type: RW ; Reset: 0x0 ; Desc: Data to program into memory mode register 5 for chip select 0. */

//****************************************************************************************************************
// Register: DENALI_CTL_82
//****************************************************************************************************************
#define DENALI_CTL_82						(MC_BASE + 0x0148), MC_ACCESS, 32  /* Offset: 0x0148 */
#define DENALI_CTL_82_MR6_DATA_0				 0 , 17  /* Type: RW ; Reset: 0x0 ; Desc: Data to program into memory mode register 6 for chip select 0. */
#define DENALI_CTL_82_BIST_GO					24 ,  1  /* Type: WR ; Reset: 0x0 ; Desc: Initiate a BIST operation. Set to 1 to trigger. */

//****************************************************************************************************************
// Register: DENALI_CTL_83
//****************************************************************************************************************
#define DENALI_CTL_83						(MC_BASE + 0x014c), MC_ACCESS, 32  /* Offset: 0x014c */
#define DENALI_CTL_83_BIST_RESULT				 0 ,  2  /* Type: RD ; Reset: 0x0 ; Desc: BIST operation status (pass/fail). Bit (0) indicates data check status and bit (1) indicates address check status. Value of 1 is a passing result. */
#define DENALI_CTL_83_ADDR_SPACE				 8 ,  6  /* Type: RW ; Reset: 0x0 ; Desc: Sets the number of address bits to check during BIST operation. */
#define DENALI_CTL_83_BIST_DATA_CHECK				16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable data checking with BIST operation. Set to 1 to enable. */
#define DENALI_CTL_83_BIST_ADDR_CHECK				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable address checking with BIST operation. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_84
//****************************************************************************************************************
#define DENALI_CTL_84						(MC_BASE + 0x0150), MC_ACCESS, 32  /* Offset: 0x0150 */
#define DENALI_CTL_84_BIST_START_ADDRESS_0			 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Start BIST checking at this address. */

//****************************************************************************************************************
// Register: DENALI_CTL_85
//****************************************************************************************************************
#define DENALI_CTL_85						(MC_BASE + 0x0154), MC_ACCESS, 32  /* Offset: 0x0154 */
#define DENALI_CTL_85_BIST_START_ADDRESS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Start BIST checking at this address. */

//****************************************************************************************************************
// Register: DENALI_CTL_86
//****************************************************************************************************************
#define DENALI_CTL_86						(MC_BASE + 0x0158), MC_ACCESS, 32  /* Offset: 0x0158 */
#define DENALI_CTL_86_BIST_DATA_MASK				 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Mask applied to data for BIST error checking. Bit (0) controls memory data path bit (0), bit (1) controls memory data path bit (1), etc. Set each bit to 1 to mask. */

//****************************************************************************************************************
// Register: DENALI_CTL_87
//****************************************************************************************************************
#define DENALI_CTL_87						(MC_BASE + 0x015c), MC_ACCESS, 32  /* Offset: 0x015c */
#define DENALI_CTL_87_BIST_TEST_MODE				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Sets the BIST test mode. Value of 0 specifies standard BIST operation, value of 1 specifies a reduced BIST operation, value of 2 specifies a self-refresh retention test, value of 3 specifies an idle retention test, and value of 4 specifies memory initalization function. All other values are reserved. */

//****************************************************************************************************************
// Register: DENALI_CTL_88
//****************************************************************************************************************
#define DENALI_CTL_88						(MC_BASE + 0x0160), MC_ACCESS, 32  /* Offset: 0x0160 */
#define DENALI_CTL_88_BIST_DATA_PATTERN_0			 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Data pattern to be used when the BIST_TEST_MODE parameter is programmed to 1, 2, 3 or 4. */

//****************************************************************************************************************
// Register: DENALI_CTL_89
//****************************************************************************************************************
#define DENALI_CTL_89						(MC_BASE + 0x0164), MC_ACCESS, 32  /* Offset: 0x0164 */
#define DENALI_CTL_89_BIST_DATA_PATTERN_1			 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Data pattern to be used when the BIST_TEST_MODE parameter is programmed to 1, 2, 3 or 4. */

//****************************************************************************************************************
// Register: DENALI_CTL_90
//****************************************************************************************************************
#define DENALI_CTL_90						(MC_BASE + 0x0168), MC_ACCESS, 32  /* Offset: 0x0168 */
#define DENALI_CTL_90_BIST_RET_STATE_EXIT			 0 ,  1  /* Type: WR ; Reset: 0x0 ; Desc: Exit self-refresh or idle retention state, used when the BIST_TEST_MODE parameter is programmed to 2 or 3. Set to 1 to trigger. */
#define DENALI_CTL_90_BIST_RET_STATE				 8 ,  1  /* Type: RD ; Reset: 0x0 ; Desc: Indicates if BIST is in a retention wait state, used when the BIST_TEST_MODE parameter is programmed to 2 or 3. Value of 1 indicates BIST is waiting. */
#define DENALI_CTL_90_BIST_ERR_STOP				16 , 12  /* Type: RW ; Reset: 0x0 ; Desc: Defines the maximum number of error occurrences allowed prior to quitting when the BIST_TEST_MODE parameter is programmed to 1, 2 or 3. A value of 0 will allow the test to run to completion. */

//****************************************************************************************************************
// Register: DENALI_CTL_91
//****************************************************************************************************************
#define DENALI_CTL_91						(MC_BASE + 0x016c), MC_ACCESS, 32  /* Offset: 0x016c */
#define DENALI_CTL_91_BIST_ERR_COUNT				 0 , 12  /* Type: RD ; Reset: 0x0 ; Desc: Indicates the number of BIST errors found when the BIST_TEST_MODE parameter is programmed to 1, 2 or 3. */
#define DENALI_CTL_91_ECC_ENABLE				16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: ECC error checking and correcting control register. Clear to 0 to fully disable ECC, program to 1 to enable ECC with no error detection or error correction, program to 2 to enable ECC with error detection without error correction, or program to 3 to enable ECC with both error detection and error correction. */
#define DENALI_CTL_91_INLINE_ECC_BANK_OFFSET			24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Inline ECC Bank Offset defines the bank shift between data and ECC commands associated with the same sequence the bank is offset to prevent inefficiencies due to opening an closing the pages on the same bank during transition between data and ECC commands. */

//****************************************************************************************************************
// Register: DENALI_CTL_92
//****************************************************************************************************************
#define DENALI_CTL_92						(MC_BASE + 0x0170), MC_ACCESS, 32  /* Offset: 0x0170 */
#define DENALI_CTL_92_MC_RESERVED12				 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_92_ECC_READ_CACHING_EN			 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Allows ECC read data already in one of the ECC buffers to be used when possible in place of issuing an ECC read command to memory. This implies that some ECC read commands will be dropped in the command queue when it can pull the read data from the buffer instead. */
#define DENALI_CTL_92_ECC_WRITE_COMBINING_EN			16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Allows ECC write data within a given ECC buffer to be combined across commands so that in certain cases where we see multiple ECC writes to the same ECC address, the controller may end up only issuing one final ECC write command to memory. */
#define DENALI_CTL_92_MC_RESERVED13				24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_93
//****************************************************************************************************************
#define DENALI_CTL_93						(MC_BASE + 0x0174), MC_ACCESS, 32  /* Offset: 0x0174 */
#define DENALI_CTL_93_MC_RESERVED14				 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_93_FWC					 8 ,  1  /* Type: RW+ ; Reset: 0x0 ; Desc: Force a write check. Xor the XOR_CHECK_BITS parameter with the ECC code and write to memory. Set to 1 to trigger. */
#define DENALI_CTL_93_XOR_CHECK_BITS				16 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Value to xor with generated ECC codes for forced write check. */
#define DENALI_CTL_93_ECC_WRITEBACK_EN				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: ECC writeback will occur on detection of single bit errors for reads. The ECC_ENABLE parameter must be programmed to 3 for this to take any effect. Note that no writebacks will be issued during BIST. */

//****************************************************************************************************************
// Register: DENALI_CTL_94
//****************************************************************************************************************
#define DENALI_CTL_94						(MC_BASE + 0x0178), MC_ACCESS, 32  /* Offset: 0x0178 */
#define DENALI_CTL_94_ECC_DISABLE_W_UC_ERR			 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Controls auto-corruption of ECC when un-correctable errors occur in R/M/W operations. Set to 1 to disable corruption. */

//****************************************************************************************************************
// Register: DENALI_CTL_95
//****************************************************************************************************************
#define DENALI_CTL_95						(MC_BASE + 0x017c), MC_ACCESS, 32  /* Offset: 0x017c */
#define DENALI_CTL_95_ECC_U_ADDR_0				 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Address of uncorrectable ECC event. */

//****************************************************************************************************************
// Register: DENALI_CTL_96
//****************************************************************************************************************
#define DENALI_CTL_96						(MC_BASE + 0x0180), MC_ACCESS, 32  /* Offset: 0x0180 */
#define DENALI_CTL_96_ECC_U_ADDR_1				 0 ,  2  /* Type: RD ; Reset: 0x0 ; Desc: Address of uncorrectable ECC event. */
#define DENALI_CTL_96_ECC_U_SYND				 8 ,  8  /* Type: RD ; Reset: 0x0 ; Desc: Syndrome for uncorrectable ECC event. */

//****************************************************************************************************************
// Register: DENALI_CTL_97
//****************************************************************************************************************
#define DENALI_CTL_97						(MC_BASE + 0x0184), MC_ACCESS, 32  /* Offset: 0x0184 */
#define DENALI_CTL_97_ECC_U_DATA_0				 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Data associated with uncorrectable ECC event. */

//****************************************************************************************************************
// Register: DENALI_CTL_98
//****************************************************************************************************************
#define DENALI_CTL_98						(MC_BASE + 0x0188), MC_ACCESS, 32  /* Offset: 0x0188 */
#define DENALI_CTL_98_ECC_U_DATA_1				 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Data associated with uncorrectable ECC event. */

//****************************************************************************************************************
// Register: DENALI_CTL_99
//****************************************************************************************************************
#define DENALI_CTL_99						(MC_BASE + 0x018c), MC_ACCESS, 32  /* Offset: 0x018c */
#define DENALI_CTL_99_ECC_C_ADDR_0				 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Address of correctable ECC event. */

//****************************************************************************************************************
// Register: DENALI_CTL_100
//****************************************************************************************************************
#define DENALI_CTL_100						(MC_BASE + 0x0190), MC_ACCESS, 32  /* Offset: 0x0190 */
#define DENALI_CTL_100_ECC_C_ADDR_1				 0 ,  2  /* Type: RD ; Reset: 0x0 ; Desc: Address of correctable ECC event. */
#define DENALI_CTL_100_ECC_C_SYND				 8 ,  8  /* Type: RD ; Reset: 0x0 ; Desc: Syndrome for correctable ECC event. */

//****************************************************************************************************************
// Register: DENALI_CTL_101
//****************************************************************************************************************
#define DENALI_CTL_101						(MC_BASE + 0x0194), MC_ACCESS, 32  /* Offset: 0x0194 */
#define DENALI_CTL_101_ECC_C_DATA_0				 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Data associated with correctable ECC event. */

//****************************************************************************************************************
// Register: DENALI_CTL_102
//****************************************************************************************************************
#define DENALI_CTL_102						(MC_BASE + 0x0198), MC_ACCESS, 32  /* Offset: 0x0198 */
#define DENALI_CTL_102_ECC_C_DATA_1				 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Data associated with correctable ECC event. */

//****************************************************************************************************************
// Register: DENALI_CTL_103
//****************************************************************************************************************
#define DENALI_CTL_103						(MC_BASE + 0x019c), MC_ACCESS, 32  /* Offset: 0x019c */
#define DENALI_CTL_103_ECC_U_ID					 0 , 14  /* Type: RD ; Reset: 0x0 ; Desc: Source ID associated with the uncorrectable ECC event. */
#define DENALI_CTL_103_ECC_C_ID					16 , 14  /* Type: RD ; Reset: 0x0 ; Desc: Source ID associated with correctable ECC event. */

//****************************************************************************************************************
// Register: DENALI_CTL_104
//****************************************************************************************************************
#define DENALI_CTL_104						(MC_BASE + 0x01a0), MC_ACCESS, 32  /* Offset: 0x01a0 */
#define DENALI_CTL_104_NON_ECC_REGION_START_ADDR_0		 0 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 0. The address written is 1Mbyte aligned. */
#define DENALI_CTL_104_NON_ECC_REGION_END_ADDR_0		16 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 0. The address written is 1Mbyte aligned. */

//****************************************************************************************************************
// Register: DENALI_CTL_105
//****************************************************************************************************************
#define DENALI_CTL_105						(MC_BASE + 0x01a4), MC_ACCESS, 32  /* Offset: 0x01a4 */
#define DENALI_CTL_105_NON_ECC_REGION_START_ADDR_1		 0 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 1. The address written is 1Mbyte aligned. */
#define DENALI_CTL_105_NON_ECC_REGION_END_ADDR_1		16 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 1. The address written is 1Mbyte aligned. */

//****************************************************************************************************************
// Register: DENALI_CTL_106
//****************************************************************************************************************
#define DENALI_CTL_106						(MC_BASE + 0x01a8), MC_ACCESS, 32  /* Offset: 0x01a8 */
#define DENALI_CTL_106_NON_ECC_REGION_START_ADDR_2		 0 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 2. The address written is 1Mbyte aligned. */
#define DENALI_CTL_106_NON_ECC_REGION_END_ADDR_2		16 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 2. The address written is 1Mbyte aligned. */

//****************************************************************************************************************
// Register: DENALI_CTL_107
//****************************************************************************************************************
#define DENALI_CTL_107						(MC_BASE + 0x01ac), MC_ACCESS, 32  /* Offset: 0x01ac */
#define DENALI_CTL_107_NON_ECC_REGION_START_ADDR_3		 0 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 3. The address written is 1Mbyte aligned. */
#define DENALI_CTL_107_NON_ECC_REGION_END_ADDR_3		16 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 3. The address written is 1Mbyte aligned. */

//****************************************************************************************************************
// Register: DENALI_CTL_108
//****************************************************************************************************************
#define DENALI_CTL_108						(MC_BASE + 0x01b0), MC_ACCESS, 32  /* Offset: 0x01b0 */
#define DENALI_CTL_108_NON_ECC_REGION_START_ADDR_4		 0 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 4. The address written is 1Mbyte aligned. */
#define DENALI_CTL_108_NON_ECC_REGION_END_ADDR_4		16 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 4. The address written is 1Mbyte aligned. */

//****************************************************************************************************************
// Register: DENALI_CTL_109
//****************************************************************************************************************
#define DENALI_CTL_109						(MC_BASE + 0x01b4), MC_ACCESS, 32  /* Offset: 0x01b4 */
#define DENALI_CTL_109_NON_ECC_REGION_START_ADDR_5		 0 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 5. The address written is 1Mbyte aligned. */
#define DENALI_CTL_109_NON_ECC_REGION_END_ADDR_5		16 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 5. The address written is 1Mbyte aligned. */

//****************************************************************************************************************
// Register: DENALI_CTL_110
//****************************************************************************************************************
#define DENALI_CTL_110						(MC_BASE + 0x01b8), MC_ACCESS, 32  /* Offset: 0x01b8 */
#define DENALI_CTL_110_NON_ECC_REGION_START_ADDR_6		 0 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 6. The address written is 1Mbyte aligned. */
#define DENALI_CTL_110_NON_ECC_REGION_END_ADDR_6		16 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 6. The address written is 1Mbyte aligned. */

//****************************************************************************************************************
// Register: DENALI_CTL_111
//****************************************************************************************************************
#define DENALI_CTL_111						(MC_BASE + 0x01bc), MC_ACCESS, 32  /* Offset: 0x01bc */
#define DENALI_CTL_111_NON_ECC_REGION_START_ADDR_7		 0 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 7. The address written is 1Mbyte aligned. */
#define DENALI_CTL_111_NON_ECC_REGION_END_ADDR_7		16 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 7. The address written is 1Mbyte aligned. */

//****************************************************************************************************************
// Register: NONE ECC REGIONS
//****************************************************************************************************************
#define DENALI_CTL_NONE_ECC(n)						(MC_BASE + 0x01a0 + 4*(n)), MC_ACCESS, 32
#define DENALI_CTL_NON_ECC_REGION_START_ADDR		 0 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 7. The address written is 1Mbyte aligned. */
#define DENALI_CTL_NON_ECC_REGION_END_ADDR		16 , 14  /* Type: RW ; Reset: 0x0 ; Desc: Set the base address of the soft-designated non-ECC region 7. The address written is 1Mbyte aligned. */


//****************************************************************************************************************
// Register: DENALI_CTL_112
//****************************************************************************************************************
#define DENALI_CTL_112						(MC_BASE + 0x01c0), MC_ACCESS, 32  /* Offset: 0x01c0 */
#define DENALI_CTL_112_NON_ECC_REGION_ENABLE			 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Enables each soft-designated non-ECC region. Bit (0) correlates to region 0, bit (1) correlates to region 1, etc. Set each bit to 1 to enable. */
#define DENALI_CTL_112_ECC_SCRUB_START				 8 ,  1  /* Type: WR ; Reset: 0x0 ; Desc: ECC scrubbing control. Set to 1 to kick start the scrubbing operation. */
#define DENALI_CTL_112_ECC_SCRUB_IN_PROGRESS			16 ,  1  /* Type: RD ; Reset: 0x0 ; Desc: Reports the scrubbing operation status. A value of 1 indicates that the controller is in the process of performing a scrubbing operation. */
#define DENALI_CTL_112_ECC_SCRUB_LEN				24 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Defines the length of the ECC scrubbing read command that the controller will issue. */

//****************************************************************************************************************
// Register: DENALI_CTL_113
//****************************************************************************************************************
#define DENALI_CTL_113						(MC_BASE + 0x01c4), MC_ACCESS, 32  /* Offset: 0x01c4 */
#define DENALI_CTL_113_ECC_SCRUB_MODE				 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines how often ECC scrubbing operations will occur. Clear to 0 to scrub at regular intervals as dictated by the ECC_SCRUB_INTERVAL parameter, or set to 1 to scrub only when the controller is idle. */
#define DENALI_CTL_113_ECC_SCRUB_INTERVAL			 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: The minimum interval between two ECC scrubbing commands in number of controller clock cycles. Valid when the ECC_SCRUB_MODE parameter is cleared to 0. */

//****************************************************************************************************************
// Register: DENALI_CTL_114
//****************************************************************************************************************
#define DENALI_CTL_114						(MC_BASE + 0x01c8), MC_ACCESS, 32  /* Offset: 0x01c8 */
#define DENALI_CTL_114_ECC_SCRUB_IDLE_CNT			 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: The number of controller clock cycles that the scrubbing engine will wait in controller idle state before starting scrubbing operations. Valid when the ECC_SCRUB_MODE parameter is set to 1. */

//****************************************************************************************************************
// Register: DENALI_CTL_115
//****************************************************************************************************************
#define DENALI_CTL_115						(MC_BASE + 0x01cc), MC_ACCESS, 32  /* Offset: 0x01cc */
#define DENALI_CTL_115_ECC_SCRUB_START_ADDR_0			 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: The starting address from where scrubbing operations will begin. */

//****************************************************************************************************************
// Register: DENALI_CTL_116
//****************************************************************************************************************
#define DENALI_CTL_116						(MC_BASE + 0x01d0), MC_ACCESS, 32  /* Offset: 0x01d0 */
#define DENALI_CTL_116_ECC_SCRUB_START_ADDR_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: The starting address from where scrubbing operations will begin. */

//****************************************************************************************************************
// Register: DENALI_CTL_117
//****************************************************************************************************************
#define DENALI_CTL_117						(MC_BASE + 0x01d4), MC_ACCESS, 32  /* Offset: 0x01d4 */
#define DENALI_CTL_117_ECC_SCRUB_END_ADDR_0			 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: The end address where scrubbing operations will wrap around to the start address. If this parameter is cleared to 0, the maximum physical address will be considered as the end address. */

//****************************************************************************************************************
// Register: DENALI_CTL_118
//****************************************************************************************************************
#define DENALI_CTL_118						(MC_BASE + 0x01d8), MC_ACCESS, 32  /* Offset: 0x01d8 */
#define DENALI_CTL_118_ECC_SCRUB_END_ADDR_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: The end address where scrubbing operations will wrap around to the start address. If this parameter is cleared to 0, the maximum physical address will be considered as the end address. */
#define DENALI_CTL_118_LONG_COUNT_MASK				 8 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: Reduces the length of the long counter from 1024 cycles. The only supported values are 0x00 (1024 cycles), 0x10 (512 clocks), 0x18 (256 clocks), 0x1C (128 clocks), 0x1E (64 clocks) and 0x1F (32 clocks). */
#define DENALI_CTL_118_AREF_NORM_THRESHOLD			16 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: AREF number of pending refreshes until the normal priority request is asserted. */
#define DENALI_CTL_118_AREF_HIGH_THRESHOLD			24 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: AREF number of pending refreshes until the high priority request is asserted. */

//****************************************************************************************************************
// Register: DENALI_CTL_119
//****************************************************************************************************************
#define DENALI_CTL_119						(MC_BASE + 0x01dc), MC_ACCESS, 32  /* Offset: 0x01dc */
#define DENALI_CTL_119_AREF_MAX_DEFICIT				 0 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: AREF number of pending refreshes until the maximum number of refreshes has been exceeded. */
#define DENALI_CTL_119_AREF_MAX_CREDIT				 8 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: AREF number of posted refreshes until the maximum number of refresh credits has been reached. */
#define DENALI_CTL_119_AREF_CMD_MAX_PER_TREFI			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Sets the maximum number of auto-refreshes that will be executed in a TREFI period - both normal and high priority. This does not prevent refreshes generated by sub-task requests such as a self-refresh exit and enter. */

//****************************************************************************************************************
// Register: DENALI_CTL_120
//****************************************************************************************************************
#define DENALI_CTL_120						(MC_BASE + 0x01e0), MC_ACCESS, 32  /* Offset: 0x01e0 */
#define DENALI_CTL_120_ZQ_CS_NORM_THRESHOLD			 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: ZQ CS number of long counts until the normal priority request is asserted. */
#define DENALI_CTL_120_ZQ_CS_HIGH_THRESHOLD			16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: ZQ CS number of long counts until the high priority request is asserted. */

//****************************************************************************************************************
// Register: DENALI_CTL_121
//****************************************************************************************************************
#define DENALI_CTL_121						(MC_BASE + 0x01e4), MC_ACCESS, 32  /* Offset: 0x01e4 */
#define DENALI_CTL_121_ZQ_CS_TIMEOUT				 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: ZQ CS number of long counts until the timeout is asserted. */
#define DENALI_CTL_121_ZQ_PROMOTE_THRESHOLD			16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: ZQ SW promotion number of long counts until the high priority request is asserted. */

//****************************************************************************************************************
// Register: DENALI_CTL_122
//****************************************************************************************************************
#define DENALI_CTL_122						(MC_BASE + 0x01e8), MC_ACCESS, 32  /* Offset: 0x01e8 */
#define DENALI_CTL_122_MC_RESERVED15				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_122_TIMEOUT_TIMER_LOG			 8 ,  4  /* Type: RD ; Reset: 0x0 ; Desc: Reflects which timers experienced a timeout error (or had an uncleared error) when the timeout interrupt fired. Bit (0) correlates to a ZQ cal init, cs, cl, or reset FM timeout. Bit (1) correlates to the DFI update FM timeout. Bit (2) correlates to the low power interface wakeup timeout. Bit (3) correlates to the auto refresh max deficit timeout. */
#define DENALI_CTL_122_ZQINIT					16 , 12  /* Type: RW_D ; Reset: 0x0 ; Desc: Number of cycles needed for a ZQINIT command. */

//****************************************************************************************************************
// Register: DENALI_CTL_123
//****************************************************************************************************************
#define DENALI_CTL_123						(MC_BASE + 0x01ec), MC_ACCESS, 32  /* Offset: 0x01ec */
#define DENALI_CTL_123_ZQCL					 0 , 12  /* Type: RW ; Reset: 0x0 ; Desc: Number of cycles needed for a ZQCL command. */
#define DENALI_CTL_123_ZQCS					16 , 12  /* Type: RW ; Reset: 0x0 ; Desc: Number of cycles needed for a ZQCS command. */

//****************************************************************************************************************
// Register: DENALI_CTL_124
//****************************************************************************************************************
#define DENALI_CTL_124						(MC_BASE + 0x01f0), MC_ACCESS, 32  /* Offset: 0x01f0 */
#define DENALI_CTL_124_ZQ_REQ					 0 ,  2  /* Type: WR ; Reset: 0x0 ; Desc: User request to initiate a ZQ calibration. Program to 1 for ZQ Short (ZQCS) or program to 2 for ZQ Long (ZQCL). Clearing to 0 will not trigger any ZQ command. This parameter should only be written when the ZQ_REQ_PENDING parameter is cleared to 0. */
#define DENALI_CTL_124_ZQ_REQ_PENDING				 8 ,  1  /* Type: RD ; Reset: 0x0 ; Desc: Indicates that a ZQ command is currently in progress or waiting to run. Value of 1 indicates command in progress or waiting to run. When this is asserted, no writes to ZQ_REQ should occur. */
#define DENALI_CTL_124_BANK_DIFF				16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Encoded number of banks on the DRAM (s). */
#define DENALI_CTL_124_ROW_DIFF					24 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Difference between number of address pins available and number being used. */

//****************************************************************************************************************
// Register: DENALI_CTL_125
//****************************************************************************************************************
#define DENALI_CTL_125						(MC_BASE + 0x01f4), MC_ACCESS, 32  /* Offset: 0x01f4 */
#define DENALI_CTL_125_COL_DIFF					 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Difference between number of column pins available and number being used. */
#define DENALI_CTL_125_BANK_START_BIT				 8 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: Defines the LSbit of the bank address within the page of the user address when the BANK_ADDR_INTLV_EN parameter is set. */
#define DENALI_CTL_125_BANK_ADDR_INTLV_EN			16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables the capability to interleave the bank address within the row address bits. Set to 1 to enable. */
#define DENALI_CTL_125_APREBIT					24 ,  5  /* Type: RW_D ; Reset: 0xa ; Desc: Location of the auto pre-charge bit in the DRAM address. */

//****************************************************************************************************************
// Register: DENALI_CTL_126
//****************************************************************************************************************
#define DENALI_CTL_126						(MC_BASE + 0x01f8), MC_ACCESS, 32  /* Offset: 0x01f8 */
#define DENALI_CTL_126_AGE_COUNT				 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Initial value of master aging-rate counter for command aging. */
#define DENALI_CTL_126_COMMAND_AGE_COUNT			 8 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Initial value of individual command aging counters for command aging. */
#define DENALI_CTL_126_ADDR_CMP_EN				16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable address collision detection as a rule for command queue placement. Set to 1 to enable. */
#define DENALI_CTL_126_ADDR_COLLISION_MPM_DIS			24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Disable address collision detection extension using micro page mask for command queue placement and selection. Set to 1 to disable. */

//****************************************************************************************************************
// Register: DENALI_CTL_127
//****************************************************************************************************************
#define DENALI_CTL_127						(MC_BASE + 0x01fc), MC_ACCESS, 32  /* Offset: 0x01fc */
#define DENALI_CTL_127_BANK_SPLIT_EN				 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable bank splitting as a rule for command queue placement. Set to 1 to enable. */
#define DENALI_CTL_127_PLACEMENT_EN				 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable placement logic for command queue. Set to 1 to enable. */
#define DENALI_CTL_127_PRIORITY_EN				16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable priority as a rule for command queue placement. Set to 1 to enable. */
#define DENALI_CTL_127_RW_SAME_EN				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable read/write grouping as a rule for command queue placement. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_128
//****************************************************************************************************************
#define DENALI_CTL_128						(MC_BASE + 0x0200), MC_ACCESS, 32  /* Offset: 0x0200 */
#define DENALI_CTL_128_RW_SAME_PAGE_EN				 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable page grouping when read/write grouping as a rule for command queue placement. This is only valid when the RW_SAME_EN parameter is set. Set to 1 to enable. */
#define DENALI_CTL_128_DISABLE_RW_GROUP_W_BNK_CONFLICT		 8 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Disables placement to read/write group when grouping creates a bank collision. Bit (0) controls placement next to bank conflict command and bit (1) controls placement 2 away from bank conflict command. Set each bit to 1 to disable. */
#define DENALI_CTL_128_NUM_Q_ENTRIES_ACT_DISABLE		16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Number of queue entries in which ACT requests will be disabled. Programming to X will disable ACT requests from the X entries lowest in the command queue. */
#define DENALI_CTL_128_SWAP_EN					24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable command swapping logic in execution unit. Set to 1 to enable. If inline ECC is enabled (if the ECC_ENABLE parameter is programmed to 1, 2 or 3), the SWAP_EN parameter must be cleared to 0 because these two features are not supported together. */

//****************************************************************************************************************
// Register: DENALI_CTL_129
//****************************************************************************************************************
#define DENALI_CTL_129						(MC_BASE + 0x0204), MC_ACCESS, 32  /* Offset: 0x0204 */
#define DENALI_CTL_129_DISABLE_RD_INTERLEAVE			 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Disable read data interleaving for commands from the same port, regardless of the requestor ID. If inline ECC is enabled (if the ECC_ENABLE parameter is programmed to either of 1, 2 or 3), the DISABLE_RD_INTERLEAVE parameter must be cleared to 0 because these two features are not supported together. */
#define DENALI_CTL_129_INHIBIT_DRAM_CMD				 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Inhibit read/write command traffic and associated bank commands. Set to 1 to inhibit. */
#define DENALI_CTL_129_BURST_ON_FLY_BIT				16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Identifies the burst-on-fly bit in the memory mode registers. */
#define DENALI_CTL_129_REDUC					24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable the half datapath feature of the controller. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_130
//****************************************************************************************************************
#define DENALI_CTL_130						(MC_BASE + 0x0208), MC_ACCESS, 32  /* Offset: 0x0208 */
#define DENALI_CTL_130_MEMDATA_RATIO_0				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Defines the ratio of the DRAM device size on chip select 0 to the memory data width. Program with the log2 ratio of the memory data width to the device data width. */
#define DENALI_CTL_130_Q_FULLNESS				 8 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Quantity that determines when the command queue almost full signal will assert (q_almost_full). When cleared to 0, the q_almost_full signal will be driven to 0 irrespective of number of entries in the command queue. */
#define DENALI_CTL_130_IN_ORDER_ACCEPT				16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Forces the controller to accept commands in the order in which they are placed in the command queue. If inline ECC is enabled (if the ECC_ENABLE parameter is programmed to 1, 2 or 3), the IN_ORDER_ACCEPT parameter must be set to 1. */
#define DENALI_CTL_130_WR_ORDER_REQ				24 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Determines if the controller can re-order write commands from the same source ID and/or the same port. Bit (0) controls source ID usage and bit (1) controls port ID usage. Set each bit to 1 to enable usage in placement logic. */

//****************************************************************************************************************
// Register: DENALI_CTL_131
//****************************************************************************************************************
#define DENALI_CTL_131						(MC_BASE + 0x020c), MC_ACCESS, 32  /* Offset: 0x020c */
#define DENALI_CTL_131_CONTROLLER_BUSY				 0 ,  1  /* Type: RD ; Reset: 0x0 ; Desc: Indicator that the controller is processing a command. Evaluates all ports for outstanding transactions. Value of 1 indicates controller busy. */
#define DENALI_CTL_131_CTRLUPD_REQ				 8 ,  1  /* Type: WR ; Reset: 0x0 ; Desc: Assert the DFI controller-initiated update request signal dfi_ctrlupd_req. Set to 1 to trigger. */
#define DENALI_CTL_131_CTRLUPD_REQ_PER_AREF_EN			16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable an automatic controller-initiated update (dfi_ctrlupd_req) after every refresh. Set to 1 to enable. */
#define DENALI_CTL_131_CTRLUPD_AREF_HP_ENABLE			24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable an automatic controller-initiated update (dfi_ctrlupd_req) after every high priority refresh when executing as a subtask request. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_132
//****************************************************************************************************************
#define DENALI_CTL_132						(MC_BASE + 0x0210), MC_ACCESS, 32  /* Offset: 0x0210 */
#define DENALI_CTL_132_PREAMBLE_SUPPORT				 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Selects the preamble for read and write burst transfers. */
#define DENALI_CTL_132_RD_PREAMBLE_TRAINING_EN			 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable read preamble training during gate training. Set to 1 to enable. */
#define DENALI_CTL_132_WR_DBI_EN				16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables controller support of DRAM DBI feature for write data with DDR4 devices. Set to 1 to enable. */
#define DENALI_CTL_132_RD_DBI_EN				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables controller support of DRAM DBI feature for read data with DDR4 devices. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_133
//****************************************************************************************************************
#define DENALI_CTL_133						(MC_BASE + 0x0214), MC_ACCESS, 32  /* Offset: 0x0214 */
#define DENALI_CTL_133_DFI_ERROR				 0 ,  3  /* Type: RD ; Reset: 0x0 ; Desc: Indicates that the DFI error flag has been asserted. */
#define DENALI_CTL_133_DFI_ERROR_INFO				 8 , 12  /* Type: RD ; Reset: 0x0 ; Desc: Holds the encoded DFI error type associated with the DFI_ERROR parameter assertion. */
#define DENALI_CTL_133_BG_ROTATE_EN				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable bank group rotation. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_134
//****************************************************************************************************************
#define DENALI_CTL_134						(MC_BASE + 0x0218), MC_ACCESS, 32  /* Offset: 0x0218 */
#define DENALI_CTL_134_MC_RESERVED16				 0 ,  1  /* Type: WR ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_135
//****************************************************************************************************************
#define DENALI_CTL_135						(MC_BASE + 0x021c), MC_ACCESS, 32  /* Offset: 0x021c */
#define DENALI_CTL_135_INT_STATUS_MASTER			 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Master status reporting register for interrupt status groups. */

#define DENALI_CTL_135_All                 31 ,1
#define DENALI_CTL_135_Parity              15 , 1
#define DENALI_CTL_135_Mode                14 , 1
#define DENALI_CTL_135_Misc                13 , 1
#define DENALI_CTL_135_Init                12 , 1
#define DENALI_CTL_135_Freq                11 , 1
#define DENALI_CTL_135_DIMM                10 , 1
#define DENALI_CTL_135_DFI                 9 , 1
#define DENALI_CTL_135_CRC                 8 , 1
#define DENALI_CTL_135_BIST                7 , 1
#define DENALI_CTL_135_UserInterface       6 , 1
#define DENALI_CTL_135_Training            5 , 1
#define DENALI_CTL_135_ReadFIFOTimeout     4 , 1
#define DENALI_CTL_135_PortTimeout         3 , 1
#define DENALI_CTL_135_LowPower            2 , 1
#define DENALI_CTL_135_ECC                 1 , 1
#define DENALI_CTL_135_Timeout             0 , 1


//****************************************************************************************************************
// Register: DENALI_CTL_136
//****************************************************************************************************************
#define DENALI_CTL_136						(MC_BASE + 0x0220), MC_ACCESS, 32  /* Offset: 0x0220 */
#define DENALI_CTL_136_INT_MASK_MASTER				 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Master mask register for interrupt status groups. */

//****************************************************************************************************************
// Register: DENALI_CTL_137
//****************************************************************************************************************
#define DENALI_CTL_137						(MC_BASE + 0x0224), MC_ACCESS, 32  /* Offset: 0x0224 */
#define DENALI_CTL_137_INT_STATUS_TIMEOUT			 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Status of interrupts in the controller related to Timeout monitors. */

//****************************************************************************************************************
// Register: DENALI_CTL_138
//****************************************************************************************************************
#define DENALI_CTL_138						(MC_BASE + 0x0228), MC_ACCESS, 32  /* Offset: 0x0228 */
#define DENALI_CTL_138_INT_STATUS_ECC				 0 , 16  /* Type: RD ; Reset: 0x0 ; Desc: Status of interrupts in the controller related to ECC. */
#define DENALI_CTL_138_INT_STATUS_LOWPOWER			16 , 16  /* Type: RD ; Reset: 0x0 ; Desc: Status of interrupts in the controller related to Low Power. */

//****************************************************************************************************************
// Register: DENALI_CTL_139
//****************************************************************************************************************
#define DENALI_CTL_139						(MC_BASE + 0x022c), MC_ACCESS, 32  /* Offset: 0x022c */
#define DENALI_CTL_139_MC_RESERVED17				 0 , 16  /* Type: RD ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_139_MC_RESERVED18				16 , 16  /* Type: RD ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_140
//****************************************************************************************************************
#define DENALI_CTL_140						(MC_BASE + 0x0230), MC_ACCESS, 32  /* Offset: 0x0230 */
#define DENALI_CTL_140_INT_STATUS_TRAINING			 0 , 16  /* Type: RD ; Reset: 0x0 ; Desc: Status of interrupts in the controller related to Training/Calibration. */

//****************************************************************************************************************
// Register: DENALI_CTL_141
//****************************************************************************************************************
#define DENALI_CTL_141						(MC_BASE + 0x0234), MC_ACCESS, 32  /* Offset: 0x0234 */
#define DENALI_CTL_141_INT_STATUS_BIST				 0 ,  8  /* Type: RD ; Reset: 0x0 ; Desc: Status of interrupts in the controller related to BIST. */
#define DENALI_CTL_141_MC_RESERVED19				 8 ,  8  /* Type: RD ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_141_INT_STATUS_DFI				16 ,  8  /* Type: RD ; Reset: 0x0 ; Desc: Status of interrupts in the controller related to DFI. */
#define DENALI_CTL_141_MC_RESERVED20				24 ,  8  /* Type: RD ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_142
//****************************************************************************************************************
#define DENALI_CTL_142						(MC_BASE + 0x0238), MC_ACCESS, 32  /* Offset: 0x0238 */
#define DENALI_CTL_142_MC_RESERVED21				 0 ,  8  /* Type: RD ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_142_INT_STATUS_INIT				 8 ,  8  /* Type: RD ; Reset: 0x0 ; Desc: Status of interrupts in the controller related to Initialization. */
#define DENALI_CTL_142_INT_STATUS_MISC				16 , 16  /* Type: RD ; Reset: 0x0 ; Desc: Status of interrupts in the controller related to Miscellaneous features. */

//****************************************************************************************************************
// Register: DENALI_CTL_143
//****************************************************************************************************************
#define DENALI_CTL_143						(MC_BASE + 0x023c), MC_ACCESS, 32  /* Offset: 0x023c */
#define DENALI_CTL_143_INT_STATUS_MODE				 0 ,  8  /* Type: RD ; Reset: 0x0 ; Desc: Status of interrupts in the controller related to Memory Mode Settings. */
#define DENALI_CTL_143_INT_STATUS_PARITY			 8 ,  8  /* Type: RD ; Reset: 0x0 ; Desc: Status of interrupts in the controller related to Parity. */

//****************************************************************************************************************
// Register: DENALI_CTL_144
//****************************************************************************************************************
#define DENALI_CTL_144						(MC_BASE + 0x0240), MC_ACCESS, 32  /* Offset: 0x0240 */
#define DENALI_CTL_144_INT_ACK_TIMEOUT				 0 , 32  /* Type: WR ; Reset: 0x0 ; Desc: Clear status of the INT_STATUS_TIMEOUT parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_145
//****************************************************************************************************************
#define DENALI_CTL_145						(MC_BASE + 0x0244), MC_ACCESS, 32  /* Offset: 0x0244 */
#define DENALI_CTL_145_INT_ACK_ECC				 0 , 16  /* Type: WR ; Reset: 0x0 ; Desc: Clear status of the INT_STATUS_ECC parameter. */
#define DENALI_CTL_145_INT_ACK_LOWPOWER				16 , 16  /* Type: WR ; Reset: 0x0 ; Desc: Clear status of the INT_STATUS_LOWPOWER parameter. */

#define DENALI_CTL_145_ECC_correctable_error         (8, 1) //  An ECC correctable error has been detected in a scrubbing read operation.
#define DENALI_CTL_145_scrub_operation_trigge        (7, 1) //  The scrub operation triggered by setting param ecc scrub start has completed.
#define DENALI_CTL_145_One_or_more_ECC_writeback     (6, 1) //  One or more ECC writeback commands could not be executed.
#define DENALI_CTL_145_Multiple_uncorrectable_ECC    (3, 1) //  Multiple uncorrectable ECC events have been detected.
#define DENALI_CTL_145_uncorrectable_ECC             (2, 1) //  A uncorrectable ECC event has been detected.
#define DENALI_CTL_145_Multiple_correctable_ECC      (1, 1) //  Multiple correctable ECC events have been detected.
#define DENALI_CTL_145_correctable_ECC               (0, 1) //  A correctable ECC event has been detected.

//****************************************************************************************************************
// Register: DENALI_CTL_146
//****************************************************************************************************************
#define DENALI_CTL_146						(MC_BASE + 0x0248), MC_ACCESS, 32  /* Offset: 0x0248 */
#define DENALI_CTL_146_MC_RESERVED22				 0 , 16  /* Type: WR ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_146_MC_RESERVED23				16 , 16  /* Type: WR ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_147
//****************************************************************************************************************
#define DENALI_CTL_147						(MC_BASE + 0x024c), MC_ACCESS, 32  /* Offset: 0x024c */
#define DENALI_CTL_147_INT_ACK_TRAINING				 0 , 16  /* Type: WR ; Reset: 0x0 ; Desc: Clear status of the INT_STATUS_TRAINING parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_148
//****************************************************************************************************************
#define DENALI_CTL_148						(MC_BASE + 0x0250), MC_ACCESS, 32  /* Offset: 0x0250 */
#define DENALI_CTL_148_INT_ACK_BIST				 0 ,  8  /* Type: WR ; Reset: 0x0 ; Desc: Clear status of the INT_STATUS_BIST parameter. */
#define DENALI_CTL_148_MC_RESERVED24				 8 ,  8  /* Type: WR ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_148_INT_ACK_DFI				16 ,  8  /* Type: WR ; Reset: 0x0 ; Desc: Clear status of the INT_STATUS_DFI parameter. */
#define DENALI_CTL_148_MC_RESERVED25				24 ,  8  /* Type: WR ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_149
//****************************************************************************************************************
#define DENALI_CTL_149						(MC_BASE + 0x0254), MC_ACCESS, 32  /* Offset: 0x0254 */
#define DENALI_CTL_149_MC_RESERVED26				 0 ,  8  /* Type: WR ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_149_INT_ACK_INIT				 8 ,  8  /* Type: WR ; Reset: 0x0 ; Desc: Clear status of the INT_STATUS_INIT parameter. */
#define DENALI_CTL_149_INT_ACK_MISC				16 , 16  /* Type: WR ; Reset: 0x0 ; Desc: Clear status of the INT_STATUS_MISC parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_150
//****************************************************************************************************************
#define DENALI_CTL_150						(MC_BASE + 0x0258), MC_ACCESS, 32  /* Offset: 0x0258 */
#define DENALI_CTL_150_INT_ACK_MODE				 0 ,  8  /* Type: WR ; Reset: 0x0 ; Desc: Clear status of the INT_STATUS_MODE parameter. */
#define DENALI_CTL_150_INT_ACK_PARITY				 8 ,  8  /* Type: WR ; Reset: 0x0 ; Desc: Clear status of the INT_STATUS_PARITY parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_151
//****************************************************************************************************************
#define DENALI_CTL_151						(MC_BASE + 0x025c), MC_ACCESS, 32  /* Offset: 0x025c */
#define DENALI_CTL_151_INT_MASK_TIMEOUT				 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Mask for the controller_int signal from the INT_MASK_TIMEOUT parameter */

//****************************************************************************************************************
// Register: DENALI_CTL_152
//****************************************************************************************************************
#define DENALI_CTL_152						(MC_BASE + 0x0260), MC_ACCESS, 32  /* Offset: 0x0260 */
#define DENALI_CTL_152_INT_MASK_ECC				 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Mask for the controller_int signal from the INT_MASK_ECC parameter */
#define DENALI_CTL_152_INT_MASK_LOWPOWER			16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Mask for the controller_int signal from the INT_MASK_LOWPOWER parameter */

//****************************************************************************************************************
// Register: DENALI_CTL_153
//****************************************************************************************************************
#define DENALI_CTL_153						(MC_BASE + 0x0264), MC_ACCESS, 32  /* Offset: 0x0264 */
#define DENALI_CTL_153_MC_RESERVED27				 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_153_MC_RESERVED28				16 , 16  /* Type: RW ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_154
//****************************************************************************************************************
#define DENALI_CTL_154						(MC_BASE + 0x0268), MC_ACCESS, 32  /* Offset: 0x0268 */
#define DENALI_CTL_154_INT_MASK_TRAINING			 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Mask for the controller_int signal from the INT_MASK_TRAINING parameter */

//****************************************************************************************************************
// Register: DENALI_CTL_155
//****************************************************************************************************************
#define DENALI_CTL_155						(MC_BASE + 0x026c), MC_ACCESS, 32  /* Offset: 0x026c */
#define DENALI_CTL_155_INT_MASK_BIST				 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Mask for the controller_int signal from the INT_MASK_BIST parameter */
#define DENALI_CTL_155_MC_RESERVED29				 8 ,  8  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_155_INT_MASK_DFI				16 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Mask for the controller_int signal from the INT_MASK_DFI parameter */
#define DENALI_CTL_155_MC_RESERVED30				24 ,  8  /* Type: RW ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_156
//****************************************************************************************************************
#define DENALI_CTL_156						(MC_BASE + 0x0270), MC_ACCESS, 32  /* Offset: 0x0270 */
#define DENALI_CTL_156_MC_RESERVED31				 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc:  */
#define DENALI_CTL_156_INT_MASK_INIT				 8 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Mask for the controller_int signal from the INT_MASK_INIT parameter */
#define DENALI_CTL_156_INT_MASK_MISC				16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Mask for the controller_int signal from the INT_MASK_MISC parameter */

//****************************************************************************************************************
// Register: DENALI_CTL_157
//****************************************************************************************************************
#define DENALI_CTL_157						(MC_BASE + 0x0274), MC_ACCESS, 32  /* Offset: 0x0274 */
#define DENALI_CTL_157_INT_MASK_MODE				 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Mask for the controller_int signal from the INT_MASK_MODE parameter */
#define DENALI_CTL_157_INT_MASK_PARITY				 8 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Mask for the controller_int signal from the INT_MASK_PARITY parameter */

//****************************************************************************************************************
// Register: DENALI_CTL_158
//****************************************************************************************************************
#define DENALI_CTL_158						(MC_BASE + 0x0278), MC_ACCESS, 32  /* Offset: 0x0278 */
#define DENALI_CTL_158_OUT_OF_RANGE_ADDR_0			 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Address of command that caused an out-of-range interrupt. */

//****************************************************************************************************************
// Register: DENALI_CTL_159
//****************************************************************************************************************
#define DENALI_CTL_159						(MC_BASE + 0x027c), MC_ACCESS, 32  /* Offset: 0x027c */
#define DENALI_CTL_159_OUT_OF_RANGE_ADDR_1			 0 ,  2  /* Type: RD ; Reset: 0x0 ; Desc: Address of command that caused an out-of-range interrupt. */
#define DENALI_CTL_159_OUT_OF_RANGE_LENGTH			 8 ,  8  /* Type: RD ; Reset: 0x0 ; Desc: Length of command that caused an out-of-range interrupt. */
#define DENALI_CTL_159_OUT_OF_RANGE_TYPE			16 ,  7  /* Type: RD ; Reset: 0x0 ; Desc: Type of command that caused an out-of-range interrupt. */

//****************************************************************************************************************
// Register: DENALI_CTL_160
//****************************************************************************************************************
#define DENALI_CTL_160						(MC_BASE + 0x0280), MC_ACCESS, 32  /* Offset: 0x0280 */
#define DENALI_CTL_160_OUT_OF_RANGE_SOURCE_ID			 0 , 14  /* Type: RD ; Reset: 0x0 ; Desc: Source ID of command that caused an out-of-range interrupt. */

//****************************************************************************************************************
// Register: DENALI_CTL_161
//****************************************************************************************************************
#define DENALI_CTL_161						(MC_BASE + 0x0284), MC_ACCESS, 32  /* Offset: 0x0284 */
#define DENALI_CTL_161_BIST_EXP_DATA_0				 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Expected data on BIST error. */

//****************************************************************************************************************
// Register: DENALI_CTL_162
//****************************************************************************************************************
#define DENALI_CTL_162						(MC_BASE + 0x0288), MC_ACCESS, 32  /* Offset: 0x0288 */
#define DENALI_CTL_162_BIST_EXP_DATA_1				 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Expected data on BIST error. */

//****************************************************************************************************************
// Register: DENALI_CTL_163
//****************************************************************************************************************
#define DENALI_CTL_163						(MC_BASE + 0x028c), MC_ACCESS, 32  /* Offset: 0x028c */
#define DENALI_CTL_163_BIST_FAIL_DATA_0				 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Actual data on BIST error. */

//****************************************************************************************************************
// Register: DENALI_CTL_164
//****************************************************************************************************************
#define DENALI_CTL_164						(MC_BASE + 0x0290), MC_ACCESS, 32  /* Offset: 0x0290 */
#define DENALI_CTL_164_BIST_FAIL_DATA_1				 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Actual data on BIST error. */

//****************************************************************************************************************
// Register: DENALI_CTL_165
//****************************************************************************************************************
#define DENALI_CTL_165						(MC_BASE + 0x0294), MC_ACCESS, 32  /* Offset: 0x0294 */
#define DENALI_CTL_165_BIST_FAIL_ADDR_0				 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Address of BIST error. */

//****************************************************************************************************************
// Register: DENALI_CTL_166
//****************************************************************************************************************
#define DENALI_CTL_166						(MC_BASE + 0x0298), MC_ACCESS, 32  /* Offset: 0x0298 */
#define DENALI_CTL_166_BIST_FAIL_ADDR_1				 0 ,  2  /* Type: RD ; Reset: 0x0 ; Desc: Address of BIST error. */

//****************************************************************************************************************
// Register: DENALI_CTL_167
//****************************************************************************************************************
#define DENALI_CTL_167						(MC_BASE + 0x029c), MC_ACCESS, 32  /* Offset: 0x029c */
#define DENALI_CTL_167_PORT_CMD_ERROR_ADDR_0			 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Address of command that caused the PORT command error. */

//****************************************************************************************************************
// Register: DENALI_CTL_168
//****************************************************************************************************************
#define DENALI_CTL_168						(MC_BASE + 0x02a0), MC_ACCESS, 32  /* Offset: 0x02a0 */
#define DENALI_CTL_168_PORT_CMD_ERROR_ADDR_1			 0 ,  2  /* Type: RD ; Reset: 0x0 ; Desc: Address of command that caused the PORT command error. */
#define DENALI_CTL_168_PORT_CMD_ERROR_ID			 8 , 14  /* Type: RD ; Reset: 0x0 ; Desc: Source ID of command that caused the PORT command error. */
#define DENALI_CTL_168_PORT_CMD_ERROR_TYPE			24 ,  3  /* Type: RD ; Reset: 0x0 ; Desc: Type of error and access type that caused the PORT command error. */

//****************************************************************************************************************
// Register: DENALI_CTL_169
//****************************************************************************************************************
#define DENALI_CTL_169						(MC_BASE + 0x02a4), MC_ACCESS, 32  /* Offset: 0x02a4 */
#define DENALI_CTL_169_TODTL_2CMD				 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DRAM delay from an ODT de-assertion to the next non-write, non-read command. */
#define DENALI_CTL_169_TODTH_WR					 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DRAM minimum ODT high time after an ODT assertion for a write command. */
#define DENALI_CTL_169_ODT_EN					16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable support of DRAM ODT. When enabled, controller will assert and de-assert ODT output to DRAM as needed. */
#define DENALI_CTL_169_MC_RESERVED32				24 ,  5  /* Type: RW ; Reset: 0x0 ; Desc:  */

//****************************************************************************************************************
// Register: DENALI_CTL_170
//****************************************************************************************************************
#define DENALI_CTL_170						(MC_BASE + 0x02a8), MC_ACCESS, 32  /* Offset: 0x02a8 */
#define DENALI_CTL_170_R2R_SAMECS_DLY				 0 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: Additional delay to insert between two reads to the same chip select. Any value including 0 supported. */
#define DENALI_CTL_170_R2W_SAMECS_DLY				 8 ,  5  /* Type: RW_D ; Reset: 0x2 ; Desc: Additional delay to insert between reads and writes to the same chip select. Program to a non-zero value. */
#define DENALI_CTL_170_W2R_SAMECS_DLY				16 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: Additional delay to insert between writes and reads to the same chip select. */
#define DENALI_CTL_170_W2W_SAMECS_DLY				24 ,  5  /* Type: RW ; Reset: 0x0 ; Desc: Additional delay to insert between two writes to the same chip select. Any value including 0 supported. */

//****************************************************************************************************************
// Register: DENALI_CTL_171
//****************************************************************************************************************
#define DENALI_CTL_171						(MC_BASE + 0x02ac), MC_ACCESS, 32  /* Offset: 0x02ac */
#define DENALI_CTL_171_SW_LEVELING_MODE				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Defines the leveling operation for software leveling. Clear to 0 for none, program to 1 for write leveling, program to 2 for data eye training, or program to 3 for gate training. */
#define DENALI_CTL_171_SWLVL_LOAD				 8 ,  1  /* Type: WR ; Reset: 0x0 ; Desc: User request to load delays and execute software leveling. Set to 1 to trigger. */
#define DENALI_CTL_171_SWLVL_START				16 ,  1  /* Type: WR ; Reset: 0x0 ; Desc: User request to initiate software leveling of type in the SW_LEVELING_MODE parameter. Set to 1 to trigger. */
#define DENALI_CTL_171_SWLVL_EXIT				24 ,  1  /* Type: WR ; Reset: 0x0 ; Desc: User request to exit software leveling. Set to 1 to exit. */

//****************************************************************************************************************
// Register: DENALI_CTL_172
//****************************************************************************************************************
#define DENALI_CTL_172						(MC_BASE + 0x02b0), MC_ACCESS, 32  /* Offset: 0x02b0 */
#define DENALI_CTL_172_SWLVL_OP_DONE				 0 ,  1  /* Type: RD ; Reset: 0x0 ; Desc: Signals that software leveling is currently in progress. Value of 1 indicates operation complete. */
#define DENALI_CTL_172_VREF_CS					 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Specifies the target chip select for the VREF training operation. */
#define DENALI_CTL_172_VREF_EN					16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable VREF training during power-up initialization. Set to 1 to enable. */
#define DENALI_CTL_172_VREF_PDA_EN				24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable per-DRAM addressability during VREF training. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_173
//****************************************************************************************************************
#define DENALI_CTL_173						(MC_BASE + 0x02b4), MC_ACCESS, 32  /* Offset: 0x02b4 */
#define DENALI_CTL_173_VREF_VAL_DEV0_0				 0 ,  7  /* Type: RW ; Reset: 0x0 ; Desc: Defines the range and value for VREF training for DRAM 0 for CS 0. If the VREF_PDA_EN parameter is not set, the device 0 value is used for all devices. */
#define DENALI_CTL_173_VREF_VAL_DEV1_0				 8 ,  7  /* Type: RW ; Reset: 0x0 ; Desc: Defines the range and value for VREF training for DRAM 1 for CS 0. If the VREF_PDA_EN parameter is not set, the device 0 value is used for all devices. */
#define DENALI_CTL_173_VREF_SW_PROMOTE_THRESHOLD		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: DFI VREF SW promotion number of long counts until the high priority request is asserted. */

//****************************************************************************************************************
// Register: DENALI_CTL_174
//****************************************************************************************************************
#define DENALI_CTL_174						(MC_BASE + 0x02b8), MC_ACCESS, 32  /* Offset: 0x02b8 */
#define DENALI_CTL_174_AHB4_WRLEN				 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR write command on AHB port 4. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_174_AHB4_RDLEN				 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR read command on AHB port 4. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_174_AHB5_WRLEN				16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR write command on AHB port 5. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_174_AHB5_RDLEN				24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR read command on AHB port 5. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */

//****************************************************************************************************************
// Register: DENALI_CTL_175
//****************************************************************************************************************
#define DENALI_CTL_175						(MC_BASE + 0x02bc), MC_ACCESS, 32  /* Offset: 0x02bc */
#define DENALI_CTL_175_AHB6_WRLEN				 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR write command on AHB port 6. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_175_AHB6_RDLEN				 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR read command on AHB port 6. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_175_AHB7_WRLEN				16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR write command on AHB port 7. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_175_AHB7_RDLEN				24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR read command on AHB port 7. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */

//****************************************************************************************************************
// Register: DENALI_CTL_176
//****************************************************************************************************************
#define DENALI_CTL_176						(MC_BASE + 0x02c0), MC_ACCESS, 32  /* Offset: 0x02c0 */
#define DENALI_CTL_176_AHB8_WRLEN				 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR write command on AHB port 8. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_176_AHB8_RDLEN				 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR read command on AHB port 8. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_176_AHB9_WRLEN				16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR write command on AHB port 9. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_176_AHB9_RDLEN				24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR read command on AHB port 9. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */

//****************************************************************************************************************
// Register: DENALI_CTL_177
//****************************************************************************************************************
#define DENALI_CTL_177						(MC_BASE + 0x02c4), MC_ACCESS, 32  /* Offset: 0x02c4 */
#define DENALI_CTL_177_AHB10_WRLEN				 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR write command on AHB port 10. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_177_AHB10_RDLEN				 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR read command on AHB port 10. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_177_AHB11_WRLEN				16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR write command on AHB port 11. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_177_AHB11_RDLEN				24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR read command on AHB port 11. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */

//****************************************************************************************************************
// Register: DENALI_CTL_178
//****************************************************************************************************************
#define DENALI_CTL_178						(MC_BASE + 0x02c8), MC_ACCESS, 32  /* Offset: 0x02c8 */
#define DENALI_CTL_178_AHB12_WRLEN				 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR write command on AHB port 12. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_178_AHB12_RDLEN				 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR read command on AHB port 12. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_178_AHB13_WRLEN				16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR write command on AHB port 13. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_178_AHB13_RDLEN				24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR read command on AHB port 13. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */

//****************************************************************************************************************
// Register: DENALI_CTL_179
//****************************************************************************************************************
#define DENALI_CTL_179						(MC_BASE + 0x02cc), MC_ACCESS, 32  /* Offset: 0x02cc */
#define DENALI_CTL_179_AHB14_WRLEN				 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR write command on AHB port 14. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_179_AHB14_RDLEN				 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Number of beats minus one for an INCR read command on AHB port 14. Clear to 0 for 1 beat, program to 1 for 2 beats, etc. */
#define DENALI_CTL_179_AXI0_ALL_STROBES_USED_ENABLE		16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 0. Set to 1 to enable. */
#define DENALI_CTL_179_AXI0_FIXED_PORT_PRIORITY_ENABLE		24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 0 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.0._R_PRIORITY and AXI.0._W_PRIORITY parameters. Clear to 0 for per-command. */

//****************************************************************************************************************
// Register: DENALI_CTL_180
//****************************************************************************************************************
#define DENALI_CTL_180						(MC_BASE + 0x02d0), MC_ACCESS, 32  /* Offset: 0x02d0 */
#define DENALI_CTL_180_AXI0_R_PRIORITY				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 0. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI0_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_180_AXI0_W_PRIORITY				 8 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 0. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI0_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_180_AXI0_FIFO_TYPE_REG			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 0 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */
#define DENALI_CTL_180_AXI1_ALL_STROBES_USED_ENABLE		24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 1. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_181
//****************************************************************************************************************
#define DENALI_CTL_181						(MC_BASE + 0x02d4), MC_ACCESS, 32  /* Offset: 0x02d4 */
#define DENALI_CTL_181_AXI1_FIXED_PORT_PRIORITY_ENABLE		 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 1 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.1._R_PRIORITY and AXI.1._W_PRIORITY parameters. Clear to 0 for per-command. */
#define DENALI_CTL_181_AXI1_R_PRIORITY				 8 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 1. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI1_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_181_AXI1_W_PRIORITY				16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 1. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI1_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_181_AXI1_FIFO_TYPE_REG			24 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 1 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */

//****************************************************************************************************************
// Register: DENALI_CTL_182
//****************************************************************************************************************
#define DENALI_CTL_182						(MC_BASE + 0x02d8), MC_ACCESS, 32  /* Offset: 0x02d8 */
#define DENALI_CTL_182_AXI2_ALL_STROBES_USED_ENABLE		 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 2. Set to 1 to enable. */
#define DENALI_CTL_182_AXI2_FIXED_PORT_PRIORITY_ENABLE		 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 2 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.2._R_PRIORITY and AXI.2._W_PRIORITY parameters. Clear to 0 for per-command. */
#define DENALI_CTL_182_AXI2_R_PRIORITY				16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 2. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI2_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_182_AXI2_W_PRIORITY				24 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 2. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI2_FIXED_PORT_PRIORITY_ENABLE parameter is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_183
//****************************************************************************************************************
#define DENALI_CTL_183						(MC_BASE + 0x02dc), MC_ACCESS, 32  /* Offset: 0x02dc */
#define DENALI_CTL_183_AXI2_FIFO_TYPE_REG			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 2 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */
#define DENALI_CTL_183_AXI3_ALL_STROBES_USED_ENABLE		 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 3. Set to 1 to enable. */
#define DENALI_CTL_183_AXI3_FIXED_PORT_PRIORITY_ENABLE		16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 3 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.3._R_PRIORITY and AXI.3._W_PRIORITY parameters. Clear to 0 for per-command. */
#define DENALI_CTL_183_AXI3_R_PRIORITY				24 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 3. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI3_FIXED_PORT_PRIORITY_ENABLE parameter is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_184
//****************************************************************************************************************
#define DENALI_CTL_184						(MC_BASE + 0x02e0), MC_ACCESS, 32  /* Offset: 0x02e0 */
#define DENALI_CTL_184_AXI3_W_PRIORITY				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 3. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI3_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_184_AXI3_FIFO_TYPE_REG			 8 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 3 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */
#define DENALI_CTL_184_AXI4_ALL_STROBES_USED_ENABLE		16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 4. Set to 1 to enable. */
#define DENALI_CTL_184_AXI4_FIXED_PORT_PRIORITY_ENABLE		24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 4 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.4._R_PRIORITY and AXI.4._W_PRIORITY parameters. Clear to 0 for per-command. */

//****************************************************************************************************************
// Register: DENALI_CTL_185
//****************************************************************************************************************
#define DENALI_CTL_185						(MC_BASE + 0x02e4), MC_ACCESS, 32  /* Offset: 0x02e4 */
#define DENALI_CTL_185_AXI4_R_PRIORITY				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 4. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI4_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_185_AXI4_W_PRIORITY				 8 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 4. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI4_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_185_AXI4_FIFO_TYPE_REG			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 4 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */
#define DENALI_CTL_185_AXI5_ALL_STROBES_USED_ENABLE		24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 5. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_186
//****************************************************************************************************************
#define DENALI_CTL_186						(MC_BASE + 0x02e8), MC_ACCESS, 32  /* Offset: 0x02e8 */
#define DENALI_CTL_186_AXI5_FIXED_PORT_PRIORITY_ENABLE		 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 5 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.5._R_PRIORITY and AXI.5._W_PRIORITY parameters. Clear to 0 for per-command. */
#define DENALI_CTL_186_AXI5_R_PRIORITY				 8 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 5. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI5_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_186_AXI5_W_PRIORITY				16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 5. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI5_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_186_AXI5_FIFO_TYPE_REG			24 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 5 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */

//****************************************************************************************************************
// Register: DENALI_CTL_187
//****************************************************************************************************************
#define DENALI_CTL_187						(MC_BASE + 0x02ec), MC_ACCESS, 32  /* Offset: 0x02ec */
#define DENALI_CTL_187_AXI6_ALL_STROBES_USED_ENABLE		 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 6. Set to 1 to enable. */
#define DENALI_CTL_187_AXI6_FIXED_PORT_PRIORITY_ENABLE		 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 6 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.6._R_PRIORITY and AXI.6._W_PRIORITY parameters. Clear to 0 for per-command. */
#define DENALI_CTL_187_AXI6_R_PRIORITY				16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 6. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI6_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_187_AXI6_W_PRIORITY				24 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 6. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI6_FIXED_PORT_PRIORITY_ENABLE parameter is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_188
//****************************************************************************************************************
#define DENALI_CTL_188						(MC_BASE + 0x02f0), MC_ACCESS, 32  /* Offset: 0x02f0 */
#define DENALI_CTL_188_AXI6_FIFO_TYPE_REG			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 6 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */
#define DENALI_CTL_188_AXI7_ALL_STROBES_USED_ENABLE		 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 7. Set to 1 to enable. */
#define DENALI_CTL_188_AXI7_FIXED_PORT_PRIORITY_ENABLE		16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 7 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.7._R_PRIORITY and AXI.7._W_PRIORITY parameters. Clear to 0 for per-command. */
#define DENALI_CTL_188_AXI7_R_PRIORITY				24 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 7. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI7_FIXED_PORT_PRIORITY_ENABLE parameter is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_189
//****************************************************************************************************************
#define DENALI_CTL_189						(MC_BASE + 0x02f4), MC_ACCESS, 32  /* Offset: 0x02f4 */
#define DENALI_CTL_189_AXI7_W_PRIORITY				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 7. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI7_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_189_AXI7_FIFO_TYPE_REG			 8 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 7 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */
#define DENALI_CTL_189_AXI8_ALL_STROBES_USED_ENABLE		16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 8. Set to 1 to enable. */
#define DENALI_CTL_189_AXI8_FIXED_PORT_PRIORITY_ENABLE		24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 8 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.8._R_PRIORITY and AXI.8._W_PRIORITY parameters. Clear to 0 for per-command. */

//****************************************************************************************************************
// Register: DENALI_CTL_190
//****************************************************************************************************************
#define DENALI_CTL_190						(MC_BASE + 0x02f8), MC_ACCESS, 32  /* Offset: 0x02f8 */
#define DENALI_CTL_190_AXI8_R_PRIORITY				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 8. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI8_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_190_AXI8_W_PRIORITY				 8 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 8. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI8_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_190_AXI8_FIFO_TYPE_REG			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 8 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */
#define DENALI_CTL_190_AXI9_ALL_STROBES_USED_ENABLE		24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 9. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_191
//****************************************************************************************************************
#define DENALI_CTL_191						(MC_BASE + 0x02fc), MC_ACCESS, 32  /* Offset: 0x02fc */
#define DENALI_CTL_191_AXI9_FIXED_PORT_PRIORITY_ENABLE		 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 9 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.9._R_PRIORITY and AXI.9._W_PRIORITY parameters. Clear to 0 for per-command. */
#define DENALI_CTL_191_AXI9_R_PRIORITY				 8 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 9. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI9_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_191_AXI9_W_PRIORITY				16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 9. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI9_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_191_AXI9_FIFO_TYPE_REG			24 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 9 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */

//****************************************************************************************************************
// Register: DENALI_CTL_192
//****************************************************************************************************************
#define DENALI_CTL_192						(MC_BASE + 0x0300), MC_ACCESS, 32  /* Offset: 0x0300 */
#define DENALI_CTL_192_AXI10_ALL_STROBES_USED_ENABLE		 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 10. Set to 1 to enable. */
#define DENALI_CTL_192_AXI10_FIXED_PORT_PRIORITY_ENABLE		 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 10 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.10._R_PRIORITY and AXI.10._W_PRIORITY parameters. Clear to 0 for per-command. */
#define DENALI_CTL_192_AXI10_R_PRIORITY				16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 10. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI10_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_192_AXI10_W_PRIORITY				24 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 10. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI10_FIXED_PORT_PRIORITY_ENABLE parameter is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_193
//****************************************************************************************************************
#define DENALI_CTL_193						(MC_BASE + 0x0304), MC_ACCESS, 32  /* Offset: 0x0304 */
#define DENALI_CTL_193_AXI10_FIFO_TYPE_REG			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 10 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */
#define DENALI_CTL_193_AXI11_ALL_STROBES_USED_ENABLE		 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 11. Set to 1 to enable. */
#define DENALI_CTL_193_AXI11_FIXED_PORT_PRIORITY_ENABLE		16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 11 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.11._R_PRIORITY and AXI.11._W_PRIORITY parameters. Clear to 0 for per-command. */
#define DENALI_CTL_193_AXI11_R_PRIORITY				24 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 11. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI11_FIXED_PORT_PRIORITY_ENABLE parameter is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_194
//****************************************************************************************************************
#define DENALI_CTL_194						(MC_BASE + 0x0308), MC_ACCESS, 32  /* Offset: 0x0308 */
#define DENALI_CTL_194_AXI11_W_PRIORITY				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 11. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI11_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_194_AXI11_FIFO_TYPE_REG			 8 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 11 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */
#define DENALI_CTL_194_AXI12_ALL_STROBES_USED_ENABLE		16 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 12. Set to 1 to enable. */
#define DENALI_CTL_194_AXI12_FIXED_PORT_PRIORITY_ENABLE		24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 12 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.12._R_PRIORITY and AXI.12._W_PRIORITY parameters. Clear to 0 for per-command. */

//****************************************************************************************************************
// Register: DENALI_CTL_195
//****************************************************************************************************************
#define DENALI_CTL_195						(MC_BASE + 0x030c), MC_ACCESS, 32  /* Offset: 0x030c */
#define DENALI_CTL_195_AXI12_R_PRIORITY				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 12. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI12_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_195_AXI12_W_PRIORITY				 8 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 12. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI12_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_195_AXI12_FIFO_TYPE_REG			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 12 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */
#define DENALI_CTL_195_AXI13_ALL_STROBES_USED_ENABLE		24 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 13. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_196
//****************************************************************************************************************
#define DENALI_CTL_196						(MC_BASE + 0x0310), MC_ACCESS, 32  /* Offset: 0x0310 */
#define DENALI_CTL_196_AXI13_FIXED_PORT_PRIORITY_ENABLE		 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 13 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.13._R_PRIORITY and AXI.13._W_PRIORITY parameters. Clear to 0 for per-command. */
#define DENALI_CTL_196_AXI13_R_PRIORITY				 8 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 13. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI13_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_196_AXI13_W_PRIORITY				16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 13. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI13_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_196_AXI13_FIFO_TYPE_REG			24 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 13 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */

//****************************************************************************************************************
// Register: DENALI_CTL_197
//****************************************************************************************************************
#define DENALI_CTL_197						(MC_BASE + 0x0314), MC_ACCESS, 32  /* Offset: 0x0314 */
#define DENALI_CTL_197_AXI14_ALL_STROBES_USED_ENABLE		 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enables use of the AWALLSTRB signal for AXI port 14. Set to 1 to enable. */
#define DENALI_CTL_197_AXI14_FIXED_PORT_PRIORITY_ENABLE		 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Defines the priority control for AXI port 14 as per-port or per-command. Set to 1 for per-port with priority defined through the AXI.14._R_PRIORITY and AXI.14._W_PRIORITY parameters. Clear to 0 for per-command. */
#define DENALI_CTL_197_AXI14_R_PRIORITY				16 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of read commands from AXI port 14. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI14_FIXED_PORT_PRIORITY_ENABLE parameter is low. */
#define DENALI_CTL_197_AXI14_W_PRIORITY				24 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Priority of write commands from AXI port 14. 0 is the highest priority. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and the AXI14_FIXED_PORT_PRIORITY_ENABLE parameter is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_198
//****************************************************************************************************************
#define DENALI_CTL_198						(MC_BASE + 0x0318), MC_ACCESS, 32  /* Offset: 0x0318 */
#define DENALI_CTL_198_AXI14_FIFO_TYPE_REG			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Clock domain relativity between AXI port 14 and the controller core. Clear to 0 for asynchronous, program to 1 for 2:1 port:core pseudo-sync, program to 2 for 1:2 port:core pseudo-sync, or program to 3 for synchronous. */
#define DENALI_CTL_198_PORT_ADDR_PROTECTION_EN			 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Enable port address range protection logic and interrupt generation. Set to 1 to enable. */

//****************************************************************************************************************
// Register: DENALI_CTL_199
//****************************************************************************************************************
#define DENALI_CTL_199						(MC_BASE + 0x031c), MC_ACCESS, 32  /* Offset: 0x031c */
#define DENALI_CTL_199_AXI0_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_200
//****************************************************************************************************************
#define DENALI_CTL_200						(MC_BASE + 0x0320), MC_ACCESS, 32  /* Offset: 0x0320 */
#define DENALI_CTL_200_AXI0_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_201
//****************************************************************************************************************
#define DENALI_CTL_201						(MC_BASE + 0x0324), MC_ACCESS, 32  /* Offset: 0x0324 */
#define DENALI_CTL_201_AXI0_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_202
//****************************************************************************************************************
#define DENALI_CTL_202						(MC_BASE + 0x0328), MC_ACCESS, 32  /* Offset: 0x0328 */
#define DENALI_CTL_202_AXI0_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_203
//****************************************************************************************************************
#define DENALI_CTL_203						(MC_BASE + 0x032c), MC_ACCESS, 32  /* Offset: 0x032c */
#define DENALI_CTL_203_AXI0_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_204
//****************************************************************************************************************
#define DENALI_CTL_204						(MC_BASE + 0x0330), MC_ACCESS, 32  /* Offset: 0x0330 */
#define DENALI_CTL_204_AXI0_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_205
//****************************************************************************************************************
#define DENALI_CTL_205						(MC_BASE + 0x0334), MC_ACCESS, 32  /* Offset: 0x0334 */
#define DENALI_CTL_205_AXI0_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_206
//****************************************************************************************************************
#define DENALI_CTL_206						(MC_BASE + 0x0338), MC_ACCESS, 32  /* Offset: 0x0338 */
#define DENALI_CTL_206_AXI0_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_207
//****************************************************************************************************************
#define DENALI_CTL_207						(MC_BASE + 0x033c), MC_ACCESS, 32  /* Offset: 0x033c */
#define DENALI_CTL_207_AXI0_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_208
//****************************************************************************************************************
#define DENALI_CTL_208						(MC_BASE + 0x0340), MC_ACCESS, 32  /* Offset: 0x0340 */
#define DENALI_CTL_208_AXI0_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_209
//****************************************************************************************************************
#define DENALI_CTL_209						(MC_BASE + 0x0344), MC_ACCESS, 32  /* Offset: 0x0344 */
#define DENALI_CTL_209_AXI0_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_210
//****************************************************************************************************************
#define DENALI_CTL_210						(MC_BASE + 0x0348), MC_ACCESS, 32  /* Offset: 0x0348 */
#define DENALI_CTL_210_AXI0_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_211
//****************************************************************************************************************
#define DENALI_CTL_211						(MC_BASE + 0x034c), MC_ACCESS, 32  /* Offset: 0x034c */
#define DENALI_CTL_211_AXI0_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_212
//****************************************************************************************************************
#define DENALI_CTL_212						(MC_BASE + 0x0350), MC_ACCESS, 32  /* Offset: 0x0350 */
#define DENALI_CTL_212_AXI0_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_213
//****************************************************************************************************************
#define DENALI_CTL_213						(MC_BASE + 0x0354), MC_ACCESS, 32  /* Offset: 0x0354 */
#define DENALI_CTL_213_AXI0_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_214
//****************************************************************************************************************
#define DENALI_CTL_214						(MC_BASE + 0x0358), MC_ACCESS, 32  /* Offset: 0x0358 */
#define DENALI_CTL_214_AXI0_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_215
//****************************************************************************************************************
#define DENALI_CTL_215						(MC_BASE + 0x035c), MC_ACCESS, 32  /* Offset: 0x035c */
#define DENALI_CTL_215_AXI0_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_216
//****************************************************************************************************************
#define DENALI_CTL_216						(MC_BASE + 0x0360), MC_ACCESS, 32  /* Offset: 0x0360 */
#define DENALI_CTL_216_AXI0_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_217
//****************************************************************************************************************
#define DENALI_CTL_217						(MC_BASE + 0x0364), MC_ACCESS, 32  /* Offset: 0x0364 */
#define DENALI_CTL_217_AXI0_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_218
//****************************************************************************************************************
#define DENALI_CTL_218						(MC_BASE + 0x0368), MC_ACCESS, 32  /* Offset: 0x0368 */
#define DENALI_CTL_218_AXI0_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_219
//****************************************************************************************************************
#define DENALI_CTL_219						(MC_BASE + 0x036c), MC_ACCESS, 32  /* Offset: 0x036c */
#define DENALI_CTL_219_AXI0_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_220
//****************************************************************************************************************
#define DENALI_CTL_220						(MC_BASE + 0x0370), MC_ACCESS, 32  /* Offset: 0x0370 */
#define DENALI_CTL_220_AXI0_END_ADDR_10				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_221
//****************************************************************************************************************
#define DENALI_CTL_221						(MC_BASE + 0x0374), MC_ACCESS, 32  /* Offset: 0x0374 */
#define DENALI_CTL_221_AXI0_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_222
//****************************************************************************************************************
#define DENALI_CTL_222						(MC_BASE + 0x0378), MC_ACCESS, 32  /* Offset: 0x0378 */
#define DENALI_CTL_222_AXI0_END_ADDR_11				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_223
//****************************************************************************************************************
#define DENALI_CTL_223						(MC_BASE + 0x037c), MC_ACCESS, 32  /* Offset: 0x037c */
#define DENALI_CTL_223_AXI0_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_224
//****************************************************************************************************************
#define DENALI_CTL_224						(MC_BASE + 0x0380), MC_ACCESS, 32  /* Offset: 0x0380 */
#define DENALI_CTL_224_AXI0_END_ADDR_12				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_225
//****************************************************************************************************************
#define DENALI_CTL_225						(MC_BASE + 0x0384), MC_ACCESS, 32  /* Offset: 0x0384 */
#define DENALI_CTL_225_AXI0_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_226
//****************************************************************************************************************
#define DENALI_CTL_226						(MC_BASE + 0x0388), MC_ACCESS, 32  /* Offset: 0x0388 */
#define DENALI_CTL_226_AXI0_END_ADDR_13				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_227
//****************************************************************************************************************
#define DENALI_CTL_227						(MC_BASE + 0x038c), MC_ACCESS, 32  /* Offset: 0x038c */
#define DENALI_CTL_227_AXI0_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_228
//****************************************************************************************************************
#define DENALI_CTL_228						(MC_BASE + 0x0390), MC_ACCESS, 32  /* Offset: 0x0390 */
#define DENALI_CTL_228_AXI0_END_ADDR_14				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_229
//****************************************************************************************************************
#define DENALI_CTL_229						(MC_BASE + 0x0394), MC_ACCESS, 32  /* Offset: 0x0394 */
#define DENALI_CTL_229_AXI0_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 0 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_230
//****************************************************************************************************************
#define DENALI_CTL_230						(MC_BASE + 0x0398), MC_ACCESS, 32  /* Offset: 0x0398 */
#define DENALI_CTL_230_AXI0_END_ADDR_15				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 0 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_231
//****************************************************************************************************************
#define DENALI_CTL_231						(MC_BASE + 0x039c), MC_ACCESS, 32  /* Offset: 0x039c */
#define DENALI_CTL_231_AXI1_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_232
//****************************************************************************************************************
#define DENALI_CTL_232						(MC_BASE + 0x03a0), MC_ACCESS, 32  /* Offset: 0x03a0 */
#define DENALI_CTL_232_AXI1_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_233
//****************************************************************************************************************
#define DENALI_CTL_233						(MC_BASE + 0x03a4), MC_ACCESS, 32  /* Offset: 0x03a4 */
#define DENALI_CTL_233_AXI1_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_234
//****************************************************************************************************************
#define DENALI_CTL_234						(MC_BASE + 0x03a8), MC_ACCESS, 32  /* Offset: 0x03a8 */
#define DENALI_CTL_234_AXI1_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_235
//****************************************************************************************************************
#define DENALI_CTL_235						(MC_BASE + 0x03ac), MC_ACCESS, 32  /* Offset: 0x03ac */
#define DENALI_CTL_235_AXI1_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_236
//****************************************************************************************************************
#define DENALI_CTL_236						(MC_BASE + 0x03b0), MC_ACCESS, 32  /* Offset: 0x03b0 */
#define DENALI_CTL_236_AXI1_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_237
//****************************************************************************************************************
#define DENALI_CTL_237						(MC_BASE + 0x03b4), MC_ACCESS, 32  /* Offset: 0x03b4 */
#define DENALI_CTL_237_AXI1_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_238
//****************************************************************************************************************
#define DENALI_CTL_238						(MC_BASE + 0x03b8), MC_ACCESS, 32  /* Offset: 0x03b8 */
#define DENALI_CTL_238_AXI1_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_239
//****************************************************************************************************************
#define DENALI_CTL_239						(MC_BASE + 0x03bc), MC_ACCESS, 32  /* Offset: 0x03bc */
#define DENALI_CTL_239_AXI1_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_240
//****************************************************************************************************************
#define DENALI_CTL_240						(MC_BASE + 0x03c0), MC_ACCESS, 32  /* Offset: 0x03c0 */
#define DENALI_CTL_240_AXI1_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_241
//****************************************************************************************************************
#define DENALI_CTL_241						(MC_BASE + 0x03c4), MC_ACCESS, 32  /* Offset: 0x03c4 */
#define DENALI_CTL_241_AXI1_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_242
//****************************************************************************************************************
#define DENALI_CTL_242						(MC_BASE + 0x03c8), MC_ACCESS, 32  /* Offset: 0x03c8 */
#define DENALI_CTL_242_AXI1_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_243
//****************************************************************************************************************
#define DENALI_CTL_243						(MC_BASE + 0x03cc), MC_ACCESS, 32  /* Offset: 0x03cc */
#define DENALI_CTL_243_AXI1_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_244
//****************************************************************************************************************
#define DENALI_CTL_244						(MC_BASE + 0x03d0), MC_ACCESS, 32  /* Offset: 0x03d0 */
#define DENALI_CTL_244_AXI1_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_245
//****************************************************************************************************************
#define DENALI_CTL_245						(MC_BASE + 0x03d4), MC_ACCESS, 32  /* Offset: 0x03d4 */
#define DENALI_CTL_245_AXI1_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_246
//****************************************************************************************************************
#define DENALI_CTL_246						(MC_BASE + 0x03d8), MC_ACCESS, 32  /* Offset: 0x03d8 */
#define DENALI_CTL_246_AXI1_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_247
//****************************************************************************************************************
#define DENALI_CTL_247						(MC_BASE + 0x03dc), MC_ACCESS, 32  /* Offset: 0x03dc */
#define DENALI_CTL_247_AXI1_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_248
//****************************************************************************************************************
#define DENALI_CTL_248						(MC_BASE + 0x03e0), MC_ACCESS, 32  /* Offset: 0x03e0 */
#define DENALI_CTL_248_AXI1_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_249
//****************************************************************************************************************
#define DENALI_CTL_249						(MC_BASE + 0x03e4), MC_ACCESS, 32  /* Offset: 0x03e4 */
#define DENALI_CTL_249_AXI1_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_250
//****************************************************************************************************************
#define DENALI_CTL_250						(MC_BASE + 0x03e8), MC_ACCESS, 32  /* Offset: 0x03e8 */
#define DENALI_CTL_250_AXI1_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_251
//****************************************************************************************************************
#define DENALI_CTL_251						(MC_BASE + 0x03ec), MC_ACCESS, 32  /* Offset: 0x03ec */
#define DENALI_CTL_251_AXI1_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_252
//****************************************************************************************************************
#define DENALI_CTL_252						(MC_BASE + 0x03f0), MC_ACCESS, 32  /* Offset: 0x03f0 */
#define DENALI_CTL_252_AXI1_END_ADDR_10				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_253
//****************************************************************************************************************
#define DENALI_CTL_253						(MC_BASE + 0x03f4), MC_ACCESS, 32  /* Offset: 0x03f4 */
#define DENALI_CTL_253_AXI1_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_254
//****************************************************************************************************************
#define DENALI_CTL_254						(MC_BASE + 0x03f8), MC_ACCESS, 32  /* Offset: 0x03f8 */
#define DENALI_CTL_254_AXI1_END_ADDR_11				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_255
//****************************************************************************************************************
#define DENALI_CTL_255						(MC_BASE + 0x03fc), MC_ACCESS, 32  /* Offset: 0x03fc */
#define DENALI_CTL_255_AXI1_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_256
//****************************************************************************************************************
#define DENALI_CTL_256						(MC_BASE + 0x0400), MC_ACCESS, 32  /* Offset: 0x0400 */
#define DENALI_CTL_256_AXI1_END_ADDR_12				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_257
//****************************************************************************************************************
#define DENALI_CTL_257						(MC_BASE + 0x0404), MC_ACCESS, 32  /* Offset: 0x0404 */
#define DENALI_CTL_257_AXI1_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_258
//****************************************************************************************************************
#define DENALI_CTL_258						(MC_BASE + 0x0408), MC_ACCESS, 32  /* Offset: 0x0408 */
#define DENALI_CTL_258_AXI1_END_ADDR_13				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_259
//****************************************************************************************************************
#define DENALI_CTL_259						(MC_BASE + 0x040c), MC_ACCESS, 32  /* Offset: 0x040c */
#define DENALI_CTL_259_AXI1_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_260
//****************************************************************************************************************
#define DENALI_CTL_260						(MC_BASE + 0x0410), MC_ACCESS, 32  /* Offset: 0x0410 */
#define DENALI_CTL_260_AXI1_END_ADDR_14				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_261
//****************************************************************************************************************
#define DENALI_CTL_261						(MC_BASE + 0x0414), MC_ACCESS, 32  /* Offset: 0x0414 */
#define DENALI_CTL_261_AXI1_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 1 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_262
//****************************************************************************************************************
#define DENALI_CTL_262						(MC_BASE + 0x0418), MC_ACCESS, 32  /* Offset: 0x0418 */
#define DENALI_CTL_262_AXI1_END_ADDR_15				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 1 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_263
//****************************************************************************************************************
#define DENALI_CTL_263						(MC_BASE + 0x041c), MC_ACCESS, 32  /* Offset: 0x041c */
#define DENALI_CTL_263_AXI2_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_264
//****************************************************************************************************************
#define DENALI_CTL_264						(MC_BASE + 0x0420), MC_ACCESS, 32  /* Offset: 0x0420 */
#define DENALI_CTL_264_AXI2_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_265
//****************************************************************************************************************
#define DENALI_CTL_265						(MC_BASE + 0x0424), MC_ACCESS, 32  /* Offset: 0x0424 */
#define DENALI_CTL_265_AXI2_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_266
//****************************************************************************************************************
#define DENALI_CTL_266						(MC_BASE + 0x0428), MC_ACCESS, 32  /* Offset: 0x0428 */
#define DENALI_CTL_266_AXI2_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_267
//****************************************************************************************************************
#define DENALI_CTL_267						(MC_BASE + 0x042c), MC_ACCESS, 32  /* Offset: 0x042c */
#define DENALI_CTL_267_AXI2_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_268
//****************************************************************************************************************
#define DENALI_CTL_268						(MC_BASE + 0x0430), MC_ACCESS, 32  /* Offset: 0x0430 */
#define DENALI_CTL_268_AXI2_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_269
//****************************************************************************************************************
#define DENALI_CTL_269						(MC_BASE + 0x0434), MC_ACCESS, 32  /* Offset: 0x0434 */
#define DENALI_CTL_269_AXI2_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_270
//****************************************************************************************************************
#define DENALI_CTL_270						(MC_BASE + 0x0438), MC_ACCESS, 32  /* Offset: 0x0438 */
#define DENALI_CTL_270_AXI2_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_271
//****************************************************************************************************************
#define DENALI_CTL_271						(MC_BASE + 0x043c), MC_ACCESS, 32  /* Offset: 0x043c */
#define DENALI_CTL_271_AXI2_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_272
//****************************************************************************************************************
#define DENALI_CTL_272						(MC_BASE + 0x0440), MC_ACCESS, 32  /* Offset: 0x0440 */
#define DENALI_CTL_272_AXI2_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_273
//****************************************************************************************************************
#define DENALI_CTL_273						(MC_BASE + 0x0444), MC_ACCESS, 32  /* Offset: 0x0444 */
#define DENALI_CTL_273_AXI2_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_274
//****************************************************************************************************************
#define DENALI_CTL_274						(MC_BASE + 0x0448), MC_ACCESS, 32  /* Offset: 0x0448 */
#define DENALI_CTL_274_AXI2_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_275
//****************************************************************************************************************
#define DENALI_CTL_275						(MC_BASE + 0x044c), MC_ACCESS, 32  /* Offset: 0x044c */
#define DENALI_CTL_275_AXI2_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_276
//****************************************************************************************************************
#define DENALI_CTL_276						(MC_BASE + 0x0450), MC_ACCESS, 32  /* Offset: 0x0450 */
#define DENALI_CTL_276_AXI2_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_277
//****************************************************************************************************************
#define DENALI_CTL_277						(MC_BASE + 0x0454), MC_ACCESS, 32  /* Offset: 0x0454 */
#define DENALI_CTL_277_AXI2_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_278
//****************************************************************************************************************
#define DENALI_CTL_278						(MC_BASE + 0x0458), MC_ACCESS, 32  /* Offset: 0x0458 */
#define DENALI_CTL_278_AXI2_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_279
//****************************************************************************************************************
#define DENALI_CTL_279						(MC_BASE + 0x045c), MC_ACCESS, 32  /* Offset: 0x045c */
#define DENALI_CTL_279_AXI2_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_280
//****************************************************************************************************************
#define DENALI_CTL_280						(MC_BASE + 0x0460), MC_ACCESS, 32  /* Offset: 0x0460 */
#define DENALI_CTL_280_AXI2_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_281
//****************************************************************************************************************
#define DENALI_CTL_281						(MC_BASE + 0x0464), MC_ACCESS, 32  /* Offset: 0x0464 */
#define DENALI_CTL_281_AXI2_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_282
//****************************************************************************************************************
#define DENALI_CTL_282						(MC_BASE + 0x0468), MC_ACCESS, 32  /* Offset: 0x0468 */
#define DENALI_CTL_282_AXI2_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_283
//****************************************************************************************************************
#define DENALI_CTL_283						(MC_BASE + 0x046c), MC_ACCESS, 32  /* Offset: 0x046c */
#define DENALI_CTL_283_AXI2_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_284
//****************************************************************************************************************
#define DENALI_CTL_284						(MC_BASE + 0x0470), MC_ACCESS, 32  /* Offset: 0x0470 */
#define DENALI_CTL_284_AXI2_END_ADDR_10				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_285
//****************************************************************************************************************
#define DENALI_CTL_285						(MC_BASE + 0x0474), MC_ACCESS, 32  /* Offset: 0x0474 */
#define DENALI_CTL_285_AXI2_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_286
//****************************************************************************************************************
#define DENALI_CTL_286						(MC_BASE + 0x0478), MC_ACCESS, 32  /* Offset: 0x0478 */
#define DENALI_CTL_286_AXI2_END_ADDR_11				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_287
//****************************************************************************************************************
#define DENALI_CTL_287						(MC_BASE + 0x047c), MC_ACCESS, 32  /* Offset: 0x047c */
#define DENALI_CTL_287_AXI2_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_288
//****************************************************************************************************************
#define DENALI_CTL_288						(MC_BASE + 0x0480), MC_ACCESS, 32  /* Offset: 0x0480 */
#define DENALI_CTL_288_AXI2_END_ADDR_12				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_289
//****************************************************************************************************************
#define DENALI_CTL_289						(MC_BASE + 0x0484), MC_ACCESS, 32  /* Offset: 0x0484 */
#define DENALI_CTL_289_AXI2_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_290
//****************************************************************************************************************
#define DENALI_CTL_290						(MC_BASE + 0x0488), MC_ACCESS, 32  /* Offset: 0x0488 */
#define DENALI_CTL_290_AXI2_END_ADDR_13				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_291
//****************************************************************************************************************
#define DENALI_CTL_291						(MC_BASE + 0x048c), MC_ACCESS, 32  /* Offset: 0x048c */
#define DENALI_CTL_291_AXI2_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_292
//****************************************************************************************************************
#define DENALI_CTL_292						(MC_BASE + 0x0490), MC_ACCESS, 32  /* Offset: 0x0490 */
#define DENALI_CTL_292_AXI2_END_ADDR_14				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_293
//****************************************************************************************************************
#define DENALI_CTL_293						(MC_BASE + 0x0494), MC_ACCESS, 32  /* Offset: 0x0494 */
#define DENALI_CTL_293_AXI2_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 2 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_294
//****************************************************************************************************************
#define DENALI_CTL_294						(MC_BASE + 0x0498), MC_ACCESS, 32  /* Offset: 0x0498 */
#define DENALI_CTL_294_AXI2_END_ADDR_15				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 2 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_295
//****************************************************************************************************************
#define DENALI_CTL_295						(MC_BASE + 0x049c), MC_ACCESS, 32  /* Offset: 0x049c */
#define DENALI_CTL_295_AXI3_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_296
//****************************************************************************************************************
#define DENALI_CTL_296						(MC_BASE + 0x04a0), MC_ACCESS, 32  /* Offset: 0x04a0 */
#define DENALI_CTL_296_AXI3_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_297
//****************************************************************************************************************
#define DENALI_CTL_297						(MC_BASE + 0x04a4), MC_ACCESS, 32  /* Offset: 0x04a4 */
#define DENALI_CTL_297_AXI3_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_298
//****************************************************************************************************************
#define DENALI_CTL_298						(MC_BASE + 0x04a8), MC_ACCESS, 32  /* Offset: 0x04a8 */
#define DENALI_CTL_298_AXI3_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_299
//****************************************************************************************************************
#define DENALI_CTL_299						(MC_BASE + 0x04ac), MC_ACCESS, 32  /* Offset: 0x04ac */
#define DENALI_CTL_299_AXI3_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_300
//****************************************************************************************************************
#define DENALI_CTL_300						(MC_BASE + 0x04b0), MC_ACCESS, 32  /* Offset: 0x04b0 */
#define DENALI_CTL_300_AXI3_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_301
//****************************************************************************************************************
#define DENALI_CTL_301						(MC_BASE + 0x04b4), MC_ACCESS, 32  /* Offset: 0x04b4 */
#define DENALI_CTL_301_AXI3_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_302
//****************************************************************************************************************
#define DENALI_CTL_302						(MC_BASE + 0x04b8), MC_ACCESS, 32  /* Offset: 0x04b8 */
#define DENALI_CTL_302_AXI3_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_303
//****************************************************************************************************************
#define DENALI_CTL_303						(MC_BASE + 0x04bc), MC_ACCESS, 32  /* Offset: 0x04bc */
#define DENALI_CTL_303_AXI3_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_304
//****************************************************************************************************************
#define DENALI_CTL_304						(MC_BASE + 0x04c0), MC_ACCESS, 32  /* Offset: 0x04c0 */
#define DENALI_CTL_304_AXI3_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_305
//****************************************************************************************************************
#define DENALI_CTL_305						(MC_BASE + 0x04c4), MC_ACCESS, 32  /* Offset: 0x04c4 */
#define DENALI_CTL_305_AXI3_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_306
//****************************************************************************************************************
#define DENALI_CTL_306						(MC_BASE + 0x04c8), MC_ACCESS, 32  /* Offset: 0x04c8 */
#define DENALI_CTL_306_AXI3_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_307
//****************************************************************************************************************
#define DENALI_CTL_307						(MC_BASE + 0x04cc), MC_ACCESS, 32  /* Offset: 0x04cc */
#define DENALI_CTL_307_AXI3_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_308
//****************************************************************************************************************
#define DENALI_CTL_308						(MC_BASE + 0x04d0), MC_ACCESS, 32  /* Offset: 0x04d0 */
#define DENALI_CTL_308_AXI3_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_309
//****************************************************************************************************************
#define DENALI_CTL_309						(MC_BASE + 0x04d4), MC_ACCESS, 32  /* Offset: 0x04d4 */
#define DENALI_CTL_309_AXI3_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_310
//****************************************************************************************************************
#define DENALI_CTL_310						(MC_BASE + 0x04d8), MC_ACCESS, 32  /* Offset: 0x04d8 */
#define DENALI_CTL_310_AXI3_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_311
//****************************************************************************************************************
#define DENALI_CTL_311						(MC_BASE + 0x04dc), MC_ACCESS, 32  /* Offset: 0x04dc */
#define DENALI_CTL_311_AXI3_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_312
//****************************************************************************************************************
#define DENALI_CTL_312						(MC_BASE + 0x04e0), MC_ACCESS, 32  /* Offset: 0x04e0 */
#define DENALI_CTL_312_AXI3_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_313
//****************************************************************************************************************
#define DENALI_CTL_313						(MC_BASE + 0x04e4), MC_ACCESS, 32  /* Offset: 0x04e4 */
#define DENALI_CTL_313_AXI3_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_314
//****************************************************************************************************************
#define DENALI_CTL_314						(MC_BASE + 0x04e8), MC_ACCESS, 32  /* Offset: 0x04e8 */
#define DENALI_CTL_314_AXI3_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_315
//****************************************************************************************************************
#define DENALI_CTL_315						(MC_BASE + 0x04ec), MC_ACCESS, 32  /* Offset: 0x04ec */
#define DENALI_CTL_315_AXI3_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_316
//****************************************************************************************************************
#define DENALI_CTL_316						(MC_BASE + 0x04f0), MC_ACCESS, 32  /* Offset: 0x04f0 */
#define DENALI_CTL_316_AXI3_END_ADDR_10				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_317
//****************************************************************************************************************
#define DENALI_CTL_317						(MC_BASE + 0x04f4), MC_ACCESS, 32  /* Offset: 0x04f4 */
#define DENALI_CTL_317_AXI3_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_318
//****************************************************************************************************************
#define DENALI_CTL_318						(MC_BASE + 0x04f8), MC_ACCESS, 32  /* Offset: 0x04f8 */
#define DENALI_CTL_318_AXI3_END_ADDR_11				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_319
//****************************************************************************************************************
#define DENALI_CTL_319						(MC_BASE + 0x04fc), MC_ACCESS, 32  /* Offset: 0x04fc */
#define DENALI_CTL_319_AXI3_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_320
//****************************************************************************************************************
#define DENALI_CTL_320						(MC_BASE + 0x0500), MC_ACCESS, 32  /* Offset: 0x0500 */
#define DENALI_CTL_320_AXI3_END_ADDR_12				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_321
//****************************************************************************************************************
#define DENALI_CTL_321						(MC_BASE + 0x0504), MC_ACCESS, 32  /* Offset: 0x0504 */
#define DENALI_CTL_321_AXI3_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_322
//****************************************************************************************************************
#define DENALI_CTL_322						(MC_BASE + 0x0508), MC_ACCESS, 32  /* Offset: 0x0508 */
#define DENALI_CTL_322_AXI3_END_ADDR_13				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_323
//****************************************************************************************************************
#define DENALI_CTL_323						(MC_BASE + 0x050c), MC_ACCESS, 32  /* Offset: 0x050c */
#define DENALI_CTL_323_AXI3_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_324
//****************************************************************************************************************
#define DENALI_CTL_324						(MC_BASE + 0x0510), MC_ACCESS, 32  /* Offset: 0x0510 */
#define DENALI_CTL_324_AXI3_END_ADDR_14				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_325
//****************************************************************************************************************
#define DENALI_CTL_325						(MC_BASE + 0x0514), MC_ACCESS, 32  /* Offset: 0x0514 */
#define DENALI_CTL_325_AXI3_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 3 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_326
//****************************************************************************************************************
#define DENALI_CTL_326						(MC_BASE + 0x0518), MC_ACCESS, 32  /* Offset: 0x0518 */
#define DENALI_CTL_326_AXI3_END_ADDR_15				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 3 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_327
//****************************************************************************************************************
#define DENALI_CTL_327						(MC_BASE + 0x051c), MC_ACCESS, 32  /* Offset: 0x051c */
#define DENALI_CTL_327_AXI4_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_328
//****************************************************************************************************************
#define DENALI_CTL_328						(MC_BASE + 0x0520), MC_ACCESS, 32  /* Offset: 0x0520 */
#define DENALI_CTL_328_AXI4_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_329
//****************************************************************************************************************
#define DENALI_CTL_329						(MC_BASE + 0x0524), MC_ACCESS, 32  /* Offset: 0x0524 */
#define DENALI_CTL_329_AXI4_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_330
//****************************************************************************************************************
#define DENALI_CTL_330						(MC_BASE + 0x0528), MC_ACCESS, 32  /* Offset: 0x0528 */
#define DENALI_CTL_330_AXI4_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_331
//****************************************************************************************************************
#define DENALI_CTL_331						(MC_BASE + 0x052c), MC_ACCESS, 32  /* Offset: 0x052c */
#define DENALI_CTL_331_AXI4_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_332
//****************************************************************************************************************
#define DENALI_CTL_332						(MC_BASE + 0x0530), MC_ACCESS, 32  /* Offset: 0x0530 */
#define DENALI_CTL_332_AXI4_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_333
//****************************************************************************************************************
#define DENALI_CTL_333						(MC_BASE + 0x0534), MC_ACCESS, 32  /* Offset: 0x0534 */
#define DENALI_CTL_333_AXI4_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_334
//****************************************************************************************************************
#define DENALI_CTL_334						(MC_BASE + 0x0538), MC_ACCESS, 32  /* Offset: 0x0538 */
#define DENALI_CTL_334_AXI4_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_335
//****************************************************************************************************************
#define DENALI_CTL_335						(MC_BASE + 0x053c), MC_ACCESS, 32  /* Offset: 0x053c */
#define DENALI_CTL_335_AXI4_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_336
//****************************************************************************************************************
#define DENALI_CTL_336						(MC_BASE + 0x0540), MC_ACCESS, 32  /* Offset: 0x0540 */
#define DENALI_CTL_336_AXI4_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_337
//****************************************************************************************************************
#define DENALI_CTL_337						(MC_BASE + 0x0544), MC_ACCESS, 32  /* Offset: 0x0544 */
#define DENALI_CTL_337_AXI4_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_338
//****************************************************************************************************************
#define DENALI_CTL_338						(MC_BASE + 0x0548), MC_ACCESS, 32  /* Offset: 0x0548 */
#define DENALI_CTL_338_AXI4_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_339
//****************************************************************************************************************
#define DENALI_CTL_339						(MC_BASE + 0x054c), MC_ACCESS, 32  /* Offset: 0x054c */
#define DENALI_CTL_339_AXI4_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_340
//****************************************************************************************************************
#define DENALI_CTL_340						(MC_BASE + 0x0550), MC_ACCESS, 32  /* Offset: 0x0550 */
#define DENALI_CTL_340_AXI4_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_341
//****************************************************************************************************************
#define DENALI_CTL_341						(MC_BASE + 0x0554), MC_ACCESS, 32  /* Offset: 0x0554 */
#define DENALI_CTL_341_AXI4_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_342
//****************************************************************************************************************
#define DENALI_CTL_342						(MC_BASE + 0x0558), MC_ACCESS, 32  /* Offset: 0x0558 */
#define DENALI_CTL_342_AXI4_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_343
//****************************************************************************************************************
#define DENALI_CTL_343						(MC_BASE + 0x055c), MC_ACCESS, 32  /* Offset: 0x055c */
#define DENALI_CTL_343_AXI4_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_344
//****************************************************************************************************************
#define DENALI_CTL_344						(MC_BASE + 0x0560), MC_ACCESS, 32  /* Offset: 0x0560 */
#define DENALI_CTL_344_AXI4_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_345
//****************************************************************************************************************
#define DENALI_CTL_345						(MC_BASE + 0x0564), MC_ACCESS, 32  /* Offset: 0x0564 */
#define DENALI_CTL_345_AXI4_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_346
//****************************************************************************************************************
#define DENALI_CTL_346						(MC_BASE + 0x0568), MC_ACCESS, 32  /* Offset: 0x0568 */
#define DENALI_CTL_346_AXI4_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_347
//****************************************************************************************************************
#define DENALI_CTL_347						(MC_BASE + 0x056c), MC_ACCESS, 32  /* Offset: 0x056c */
#define DENALI_CTL_347_AXI4_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_348
//****************************************************************************************************************
#define DENALI_CTL_348						(MC_BASE + 0x0570), MC_ACCESS, 32  /* Offset: 0x0570 */
#define DENALI_CTL_348_AXI4_END_ADDR_10				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_349
//****************************************************************************************************************
#define DENALI_CTL_349						(MC_BASE + 0x0574), MC_ACCESS, 32  /* Offset: 0x0574 */
#define DENALI_CTL_349_AXI4_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_350
//****************************************************************************************************************
#define DENALI_CTL_350						(MC_BASE + 0x0578), MC_ACCESS, 32  /* Offset: 0x0578 */
#define DENALI_CTL_350_AXI4_END_ADDR_11				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_351
//****************************************************************************************************************
#define DENALI_CTL_351						(MC_BASE + 0x057c), MC_ACCESS, 32  /* Offset: 0x057c */
#define DENALI_CTL_351_AXI4_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_352
//****************************************************************************************************************
#define DENALI_CTL_352						(MC_BASE + 0x0580), MC_ACCESS, 32  /* Offset: 0x0580 */
#define DENALI_CTL_352_AXI4_END_ADDR_12				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_353
//****************************************************************************************************************
#define DENALI_CTL_353						(MC_BASE + 0x0584), MC_ACCESS, 32  /* Offset: 0x0584 */
#define DENALI_CTL_353_AXI4_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_354
//****************************************************************************************************************
#define DENALI_CTL_354						(MC_BASE + 0x0588), MC_ACCESS, 32  /* Offset: 0x0588 */
#define DENALI_CTL_354_AXI4_END_ADDR_13				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_355
//****************************************************************************************************************
#define DENALI_CTL_355						(MC_BASE + 0x058c), MC_ACCESS, 32  /* Offset: 0x058c */
#define DENALI_CTL_355_AXI4_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_356
//****************************************************************************************************************
#define DENALI_CTL_356						(MC_BASE + 0x0590), MC_ACCESS, 32  /* Offset: 0x0590 */
#define DENALI_CTL_356_AXI4_END_ADDR_14				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_357
//****************************************************************************************************************
#define DENALI_CTL_357						(MC_BASE + 0x0594), MC_ACCESS, 32  /* Offset: 0x0594 */
#define DENALI_CTL_357_AXI4_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 4 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_358
//****************************************************************************************************************
#define DENALI_CTL_358						(MC_BASE + 0x0598), MC_ACCESS, 32  /* Offset: 0x0598 */
#define DENALI_CTL_358_AXI4_END_ADDR_15				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 4 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_359
//****************************************************************************************************************
#define DENALI_CTL_359						(MC_BASE + 0x059c), MC_ACCESS, 32  /* Offset: 0x059c */
#define DENALI_CTL_359_AXI5_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_360
//****************************************************************************************************************
#define DENALI_CTL_360						(MC_BASE + 0x05a0), MC_ACCESS, 32  /* Offset: 0x05a0 */
#define DENALI_CTL_360_AXI5_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_361
//****************************************************************************************************************
#define DENALI_CTL_361						(MC_BASE + 0x05a4), MC_ACCESS, 32  /* Offset: 0x05a4 */
#define DENALI_CTL_361_AXI5_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_362
//****************************************************************************************************************
#define DENALI_CTL_362						(MC_BASE + 0x05a8), MC_ACCESS, 32  /* Offset: 0x05a8 */
#define DENALI_CTL_362_AXI5_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_363
//****************************************************************************************************************
#define DENALI_CTL_363						(MC_BASE + 0x05ac), MC_ACCESS, 32  /* Offset: 0x05ac */
#define DENALI_CTL_363_AXI5_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_364
//****************************************************************************************************************
#define DENALI_CTL_364						(MC_BASE + 0x05b0), MC_ACCESS, 32  /* Offset: 0x05b0 */
#define DENALI_CTL_364_AXI5_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_365
//****************************************************************************************************************
#define DENALI_CTL_365						(MC_BASE + 0x05b4), MC_ACCESS, 32  /* Offset: 0x05b4 */
#define DENALI_CTL_365_AXI5_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_366
//****************************************************************************************************************
#define DENALI_CTL_366						(MC_BASE + 0x05b8), MC_ACCESS, 32  /* Offset: 0x05b8 */
#define DENALI_CTL_366_AXI5_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_367
//****************************************************************************************************************
#define DENALI_CTL_367						(MC_BASE + 0x05bc), MC_ACCESS, 32  /* Offset: 0x05bc */
#define DENALI_CTL_367_AXI5_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_368
//****************************************************************************************************************
#define DENALI_CTL_368						(MC_BASE + 0x05c0), MC_ACCESS, 32  /* Offset: 0x05c0 */
#define DENALI_CTL_368_AXI5_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_369
//****************************************************************************************************************
#define DENALI_CTL_369						(MC_BASE + 0x05c4), MC_ACCESS, 32  /* Offset: 0x05c4 */
#define DENALI_CTL_369_AXI5_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_370
//****************************************************************************************************************
#define DENALI_CTL_370						(MC_BASE + 0x05c8), MC_ACCESS, 32  /* Offset: 0x05c8 */
#define DENALI_CTL_370_AXI5_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_371
//****************************************************************************************************************
#define DENALI_CTL_371						(MC_BASE + 0x05cc), MC_ACCESS, 32  /* Offset: 0x05cc */
#define DENALI_CTL_371_AXI5_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_372
//****************************************************************************************************************
#define DENALI_CTL_372						(MC_BASE + 0x05d0), MC_ACCESS, 32  /* Offset: 0x05d0 */
#define DENALI_CTL_372_AXI5_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_373
//****************************************************************************************************************
#define DENALI_CTL_373						(MC_BASE + 0x05d4), MC_ACCESS, 32  /* Offset: 0x05d4 */
#define DENALI_CTL_373_AXI5_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_374
//****************************************************************************************************************
#define DENALI_CTL_374						(MC_BASE + 0x05d8), MC_ACCESS, 32  /* Offset: 0x05d8 */
#define DENALI_CTL_374_AXI5_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_375
//****************************************************************************************************************
#define DENALI_CTL_375						(MC_BASE + 0x05dc), MC_ACCESS, 32  /* Offset: 0x05dc */
#define DENALI_CTL_375_AXI5_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_376
//****************************************************************************************************************
#define DENALI_CTL_376						(MC_BASE + 0x05e0), MC_ACCESS, 32  /* Offset: 0x05e0 */
#define DENALI_CTL_376_AXI5_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_377
//****************************************************************************************************************
#define DENALI_CTL_377						(MC_BASE + 0x05e4), MC_ACCESS, 32  /* Offset: 0x05e4 */
#define DENALI_CTL_377_AXI5_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_378
//****************************************************************************************************************
#define DENALI_CTL_378						(MC_BASE + 0x05e8), MC_ACCESS, 32  /* Offset: 0x05e8 */
#define DENALI_CTL_378_AXI5_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_379
//****************************************************************************************************************
#define DENALI_CTL_379						(MC_BASE + 0x05ec), MC_ACCESS, 32  /* Offset: 0x05ec */
#define DENALI_CTL_379_AXI5_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_380
//****************************************************************************************************************
#define DENALI_CTL_380						(MC_BASE + 0x05f0), MC_ACCESS, 32  /* Offset: 0x05f0 */
#define DENALI_CTL_380_AXI5_END_ADDR_10				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_381
//****************************************************************************************************************
#define DENALI_CTL_381						(MC_BASE + 0x05f4), MC_ACCESS, 32  /* Offset: 0x05f4 */
#define DENALI_CTL_381_AXI5_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_382
//****************************************************************************************************************
#define DENALI_CTL_382						(MC_BASE + 0x05f8), MC_ACCESS, 32  /* Offset: 0x05f8 */
#define DENALI_CTL_382_AXI5_END_ADDR_11				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_383
//****************************************************************************************************************
#define DENALI_CTL_383						(MC_BASE + 0x05fc), MC_ACCESS, 32  /* Offset: 0x05fc */
#define DENALI_CTL_383_AXI5_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_384
//****************************************************************************************************************
#define DENALI_CTL_384						(MC_BASE + 0x0600), MC_ACCESS, 32  /* Offset: 0x0600 */
#define DENALI_CTL_384_AXI5_END_ADDR_12				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_385
//****************************************************************************************************************
#define DENALI_CTL_385						(MC_BASE + 0x0604), MC_ACCESS, 32  /* Offset: 0x0604 */
#define DENALI_CTL_385_AXI5_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_386
//****************************************************************************************************************
#define DENALI_CTL_386						(MC_BASE + 0x0608), MC_ACCESS, 32  /* Offset: 0x0608 */
#define DENALI_CTL_386_AXI5_END_ADDR_13				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_387
//****************************************************************************************************************
#define DENALI_CTL_387						(MC_BASE + 0x060c), MC_ACCESS, 32  /* Offset: 0x060c */
#define DENALI_CTL_387_AXI5_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_388
//****************************************************************************************************************
#define DENALI_CTL_388						(MC_BASE + 0x0610), MC_ACCESS, 32  /* Offset: 0x0610 */
#define DENALI_CTL_388_AXI5_END_ADDR_14				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_389
//****************************************************************************************************************
#define DENALI_CTL_389						(MC_BASE + 0x0614), MC_ACCESS, 32  /* Offset: 0x0614 */
#define DENALI_CTL_389_AXI5_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 5 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_390
//****************************************************************************************************************
#define DENALI_CTL_390						(MC_BASE + 0x0618), MC_ACCESS, 32  /* Offset: 0x0618 */
#define DENALI_CTL_390_AXI5_END_ADDR_15				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 5 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_391
//****************************************************************************************************************
#define DENALI_CTL_391						(MC_BASE + 0x061c), MC_ACCESS, 32  /* Offset: 0x061c */
#define DENALI_CTL_391_AXI6_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_392
//****************************************************************************************************************
#define DENALI_CTL_392						(MC_BASE + 0x0620), MC_ACCESS, 32  /* Offset: 0x0620 */
#define DENALI_CTL_392_AXI6_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_393
//****************************************************************************************************************
#define DENALI_CTL_393						(MC_BASE + 0x0624), MC_ACCESS, 32  /* Offset: 0x0624 */
#define DENALI_CTL_393_AXI6_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_394
//****************************************************************************************************************
#define DENALI_CTL_394						(MC_BASE + 0x0628), MC_ACCESS, 32  /* Offset: 0x0628 */
#define DENALI_CTL_394_AXI6_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_395
//****************************************************************************************************************
#define DENALI_CTL_395						(MC_BASE + 0x062c), MC_ACCESS, 32  /* Offset: 0x062c */
#define DENALI_CTL_395_AXI6_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_396
//****************************************************************************************************************
#define DENALI_CTL_396						(MC_BASE + 0x0630), MC_ACCESS, 32  /* Offset: 0x0630 */
#define DENALI_CTL_396_AXI6_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_397
//****************************************************************************************************************
#define DENALI_CTL_397						(MC_BASE + 0x0634), MC_ACCESS, 32  /* Offset: 0x0634 */
#define DENALI_CTL_397_AXI6_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_398
//****************************************************************************************************************
#define DENALI_CTL_398						(MC_BASE + 0x0638), MC_ACCESS, 32  /* Offset: 0x0638 */
#define DENALI_CTL_398_AXI6_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_399
//****************************************************************************************************************
#define DENALI_CTL_399						(MC_BASE + 0x063c), MC_ACCESS, 32  /* Offset: 0x063c */
#define DENALI_CTL_399_AXI6_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_400
//****************************************************************************************************************
#define DENALI_CTL_400						(MC_BASE + 0x0640), MC_ACCESS, 32  /* Offset: 0x0640 */
#define DENALI_CTL_400_AXI6_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_401
//****************************************************************************************************************
#define DENALI_CTL_401						(MC_BASE + 0x0644), MC_ACCESS, 32  /* Offset: 0x0644 */
#define DENALI_CTL_401_AXI6_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_402
//****************************************************************************************************************
#define DENALI_CTL_402						(MC_BASE + 0x0648), MC_ACCESS, 32  /* Offset: 0x0648 */
#define DENALI_CTL_402_AXI6_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_403
//****************************************************************************************************************
#define DENALI_CTL_403						(MC_BASE + 0x064c), MC_ACCESS, 32  /* Offset: 0x064c */
#define DENALI_CTL_403_AXI6_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_404
//****************************************************************************************************************
#define DENALI_CTL_404						(MC_BASE + 0x0650), MC_ACCESS, 32  /* Offset: 0x0650 */
#define DENALI_CTL_404_AXI6_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_405
//****************************************************************************************************************
#define DENALI_CTL_405						(MC_BASE + 0x0654), MC_ACCESS, 32  /* Offset: 0x0654 */
#define DENALI_CTL_405_AXI6_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_406
//****************************************************************************************************************
#define DENALI_CTL_406						(MC_BASE + 0x0658), MC_ACCESS, 32  /* Offset: 0x0658 */
#define DENALI_CTL_406_AXI6_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_407
//****************************************************************************************************************
#define DENALI_CTL_407						(MC_BASE + 0x065c), MC_ACCESS, 32  /* Offset: 0x065c */
#define DENALI_CTL_407_AXI6_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_408
//****************************************************************************************************************
#define DENALI_CTL_408						(MC_BASE + 0x0660), MC_ACCESS, 32  /* Offset: 0x0660 */
#define DENALI_CTL_408_AXI6_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_409
//****************************************************************************************************************
#define DENALI_CTL_409						(MC_BASE + 0x0664), MC_ACCESS, 32  /* Offset: 0x0664 */
#define DENALI_CTL_409_AXI6_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_410
//****************************************************************************************************************
#define DENALI_CTL_410						(MC_BASE + 0x0668), MC_ACCESS, 32  /* Offset: 0x0668 */
#define DENALI_CTL_410_AXI6_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_411
//****************************************************************************************************************
#define DENALI_CTL_411						(MC_BASE + 0x066c), MC_ACCESS, 32  /* Offset: 0x066c */
#define DENALI_CTL_411_AXI6_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_412
//****************************************************************************************************************
#define DENALI_CTL_412						(MC_BASE + 0x0670), MC_ACCESS, 32  /* Offset: 0x0670 */
#define DENALI_CTL_412_AXI6_END_ADDR_10				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_413
//****************************************************************************************************************
#define DENALI_CTL_413						(MC_BASE + 0x0674), MC_ACCESS, 32  /* Offset: 0x0674 */
#define DENALI_CTL_413_AXI6_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_414
//****************************************************************************************************************
#define DENALI_CTL_414						(MC_BASE + 0x0678), MC_ACCESS, 32  /* Offset: 0x0678 */
#define DENALI_CTL_414_AXI6_END_ADDR_11				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_415
//****************************************************************************************************************
#define DENALI_CTL_415						(MC_BASE + 0x067c), MC_ACCESS, 32  /* Offset: 0x067c */
#define DENALI_CTL_415_AXI6_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_416
//****************************************************************************************************************
#define DENALI_CTL_416						(MC_BASE + 0x0680), MC_ACCESS, 32  /* Offset: 0x0680 */
#define DENALI_CTL_416_AXI6_END_ADDR_12				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_417
//****************************************************************************************************************
#define DENALI_CTL_417						(MC_BASE + 0x0684), MC_ACCESS, 32  /* Offset: 0x0684 */
#define DENALI_CTL_417_AXI6_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_418
//****************************************************************************************************************
#define DENALI_CTL_418						(MC_BASE + 0x0688), MC_ACCESS, 32  /* Offset: 0x0688 */
#define DENALI_CTL_418_AXI6_END_ADDR_13				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_419
//****************************************************************************************************************
#define DENALI_CTL_419						(MC_BASE + 0x068c), MC_ACCESS, 32  /* Offset: 0x068c */
#define DENALI_CTL_419_AXI6_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_420
//****************************************************************************************************************
#define DENALI_CTL_420						(MC_BASE + 0x0690), MC_ACCESS, 32  /* Offset: 0x0690 */
#define DENALI_CTL_420_AXI6_END_ADDR_14				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_421
//****************************************************************************************************************
#define DENALI_CTL_421						(MC_BASE + 0x0694), MC_ACCESS, 32  /* Offset: 0x0694 */
#define DENALI_CTL_421_AXI6_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 6 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_422
//****************************************************************************************************************
#define DENALI_CTL_422						(MC_BASE + 0x0698), MC_ACCESS, 32  /* Offset: 0x0698 */
#define DENALI_CTL_422_AXI6_END_ADDR_15				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 6 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_423
//****************************************************************************************************************
#define DENALI_CTL_423						(MC_BASE + 0x069c), MC_ACCESS, 32  /* Offset: 0x069c */
#define DENALI_CTL_423_AXI7_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_424
//****************************************************************************************************************
#define DENALI_CTL_424						(MC_BASE + 0x06a0), MC_ACCESS, 32  /* Offset: 0x06a0 */
#define DENALI_CTL_424_AXI7_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_425
//****************************************************************************************************************
#define DENALI_CTL_425						(MC_BASE + 0x06a4), MC_ACCESS, 32  /* Offset: 0x06a4 */
#define DENALI_CTL_425_AXI7_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_426
//****************************************************************************************************************
#define DENALI_CTL_426						(MC_BASE + 0x06a8), MC_ACCESS, 32  /* Offset: 0x06a8 */
#define DENALI_CTL_426_AXI7_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_427
//****************************************************************************************************************
#define DENALI_CTL_427						(MC_BASE + 0x06ac), MC_ACCESS, 32  /* Offset: 0x06ac */
#define DENALI_CTL_427_AXI7_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_428
//****************************************************************************************************************
#define DENALI_CTL_428						(MC_BASE + 0x06b0), MC_ACCESS, 32  /* Offset: 0x06b0 */
#define DENALI_CTL_428_AXI7_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_429
//****************************************************************************************************************
#define DENALI_CTL_429						(MC_BASE + 0x06b4), MC_ACCESS, 32  /* Offset: 0x06b4 */
#define DENALI_CTL_429_AXI7_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_430
//****************************************************************************************************************
#define DENALI_CTL_430						(MC_BASE + 0x06b8), MC_ACCESS, 32  /* Offset: 0x06b8 */
#define DENALI_CTL_430_AXI7_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_431
//****************************************************************************************************************
#define DENALI_CTL_431						(MC_BASE + 0x06bc), MC_ACCESS, 32  /* Offset: 0x06bc */
#define DENALI_CTL_431_AXI7_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_432
//****************************************************************************************************************
#define DENALI_CTL_432						(MC_BASE + 0x06c0), MC_ACCESS, 32  /* Offset: 0x06c0 */
#define DENALI_CTL_432_AXI7_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_433
//****************************************************************************************************************
#define DENALI_CTL_433						(MC_BASE + 0x06c4), MC_ACCESS, 32  /* Offset: 0x06c4 */
#define DENALI_CTL_433_AXI7_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_434
//****************************************************************************************************************
#define DENALI_CTL_434						(MC_BASE + 0x06c8), MC_ACCESS, 32  /* Offset: 0x06c8 */
#define DENALI_CTL_434_AXI7_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_435
//****************************************************************************************************************
#define DENALI_CTL_435						(MC_BASE + 0x06cc), MC_ACCESS, 32  /* Offset: 0x06cc */
#define DENALI_CTL_435_AXI7_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_436
//****************************************************************************************************************
#define DENALI_CTL_436						(MC_BASE + 0x06d0), MC_ACCESS, 32  /* Offset: 0x06d0 */
#define DENALI_CTL_436_AXI7_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_437
//****************************************************************************************************************
#define DENALI_CTL_437						(MC_BASE + 0x06d4), MC_ACCESS, 32  /* Offset: 0x06d4 */
#define DENALI_CTL_437_AXI7_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_438
//****************************************************************************************************************
#define DENALI_CTL_438						(MC_BASE + 0x06d8), MC_ACCESS, 32  /* Offset: 0x06d8 */
#define DENALI_CTL_438_AXI7_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_439
//****************************************************************************************************************
#define DENALI_CTL_439						(MC_BASE + 0x06dc), MC_ACCESS, 32  /* Offset: 0x06dc */
#define DENALI_CTL_439_AXI7_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_440
//****************************************************************************************************************
#define DENALI_CTL_440						(MC_BASE + 0x06e0), MC_ACCESS, 32  /* Offset: 0x06e0 */
#define DENALI_CTL_440_AXI7_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_441
//****************************************************************************************************************
#define DENALI_CTL_441						(MC_BASE + 0x06e4), MC_ACCESS, 32  /* Offset: 0x06e4 */
#define DENALI_CTL_441_AXI7_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_442
//****************************************************************************************************************
#define DENALI_CTL_442						(MC_BASE + 0x06e8), MC_ACCESS, 32  /* Offset: 0x06e8 */
#define DENALI_CTL_442_AXI7_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_443
//****************************************************************************************************************
#define DENALI_CTL_443						(MC_BASE + 0x06ec), MC_ACCESS, 32  /* Offset: 0x06ec */
#define DENALI_CTL_443_AXI7_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_444
//****************************************************************************************************************
#define DENALI_CTL_444						(MC_BASE + 0x06f0), MC_ACCESS, 32  /* Offset: 0x06f0 */
#define DENALI_CTL_444_AXI7_END_ADDR_10				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_445
//****************************************************************************************************************
#define DENALI_CTL_445						(MC_BASE + 0x06f4), MC_ACCESS, 32  /* Offset: 0x06f4 */
#define DENALI_CTL_445_AXI7_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_446
//****************************************************************************************************************
#define DENALI_CTL_446						(MC_BASE + 0x06f8), MC_ACCESS, 32  /* Offset: 0x06f8 */
#define DENALI_CTL_446_AXI7_END_ADDR_11				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_447
//****************************************************************************************************************
#define DENALI_CTL_447						(MC_BASE + 0x06fc), MC_ACCESS, 32  /* Offset: 0x06fc */
#define DENALI_CTL_447_AXI7_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_448
//****************************************************************************************************************
#define DENALI_CTL_448						(MC_BASE + 0x0700), MC_ACCESS, 32  /* Offset: 0x0700 */
#define DENALI_CTL_448_AXI7_END_ADDR_12				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_449
//****************************************************************************************************************
#define DENALI_CTL_449						(MC_BASE + 0x0704), MC_ACCESS, 32  /* Offset: 0x0704 */
#define DENALI_CTL_449_AXI7_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_450
//****************************************************************************************************************
#define DENALI_CTL_450						(MC_BASE + 0x0708), MC_ACCESS, 32  /* Offset: 0x0708 */
#define DENALI_CTL_450_AXI7_END_ADDR_13				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_451
//****************************************************************************************************************
#define DENALI_CTL_451						(MC_BASE + 0x070c), MC_ACCESS, 32  /* Offset: 0x070c */
#define DENALI_CTL_451_AXI7_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_452
//****************************************************************************************************************
#define DENALI_CTL_452						(MC_BASE + 0x0710), MC_ACCESS, 32  /* Offset: 0x0710 */
#define DENALI_CTL_452_AXI7_END_ADDR_14				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_453
//****************************************************************************************************************
#define DENALI_CTL_453						(MC_BASE + 0x0714), MC_ACCESS, 32  /* Offset: 0x0714 */
#define DENALI_CTL_453_AXI7_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 7 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_454
//****************************************************************************************************************
#define DENALI_CTL_454						(MC_BASE + 0x0718), MC_ACCESS, 32  /* Offset: 0x0718 */
#define DENALI_CTL_454_AXI7_END_ADDR_15				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 7 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_455
//****************************************************************************************************************
#define DENALI_CTL_455						(MC_BASE + 0x071c), MC_ACCESS, 32  /* Offset: 0x071c */
#define DENALI_CTL_455_AXI8_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_456
//****************************************************************************************************************
#define DENALI_CTL_456						(MC_BASE + 0x0720), MC_ACCESS, 32  /* Offset: 0x0720 */
#define DENALI_CTL_456_AXI8_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_457
//****************************************************************************************************************
#define DENALI_CTL_457						(MC_BASE + 0x0724), MC_ACCESS, 32  /* Offset: 0x0724 */
#define DENALI_CTL_457_AXI8_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_458
//****************************************************************************************************************
#define DENALI_CTL_458						(MC_BASE + 0x0728), MC_ACCESS, 32  /* Offset: 0x0728 */
#define DENALI_CTL_458_AXI8_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_459
//****************************************************************************************************************
#define DENALI_CTL_459						(MC_BASE + 0x072c), MC_ACCESS, 32  /* Offset: 0x072c */
#define DENALI_CTL_459_AXI8_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_460
//****************************************************************************************************************
#define DENALI_CTL_460						(MC_BASE + 0x0730), MC_ACCESS, 32  /* Offset: 0x0730 */
#define DENALI_CTL_460_AXI8_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_461
//****************************************************************************************************************
#define DENALI_CTL_461						(MC_BASE + 0x0734), MC_ACCESS, 32  /* Offset: 0x0734 */
#define DENALI_CTL_461_AXI8_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_462
//****************************************************************************************************************
#define DENALI_CTL_462						(MC_BASE + 0x0738), MC_ACCESS, 32  /* Offset: 0x0738 */
#define DENALI_CTL_462_AXI8_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_463
//****************************************************************************************************************
#define DENALI_CTL_463						(MC_BASE + 0x073c), MC_ACCESS, 32  /* Offset: 0x073c */
#define DENALI_CTL_463_AXI8_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_464
//****************************************************************************************************************
#define DENALI_CTL_464						(MC_BASE + 0x0740), MC_ACCESS, 32  /* Offset: 0x0740 */
#define DENALI_CTL_464_AXI8_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_465
//****************************************************************************************************************
#define DENALI_CTL_465						(MC_BASE + 0x0744), MC_ACCESS, 32  /* Offset: 0x0744 */
#define DENALI_CTL_465_AXI8_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_466
//****************************************************************************************************************
#define DENALI_CTL_466						(MC_BASE + 0x0748), MC_ACCESS, 32  /* Offset: 0x0748 */
#define DENALI_CTL_466_AXI8_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_467
//****************************************************************************************************************
#define DENALI_CTL_467						(MC_BASE + 0x074c), MC_ACCESS, 32  /* Offset: 0x074c */
#define DENALI_CTL_467_AXI8_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_468
//****************************************************************************************************************
#define DENALI_CTL_468						(MC_BASE + 0x0750), MC_ACCESS, 32  /* Offset: 0x0750 */
#define DENALI_CTL_468_AXI8_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_469
//****************************************************************************************************************
#define DENALI_CTL_469						(MC_BASE + 0x0754), MC_ACCESS, 32  /* Offset: 0x0754 */
#define DENALI_CTL_469_AXI8_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_470
//****************************************************************************************************************
#define DENALI_CTL_470						(MC_BASE + 0x0758), MC_ACCESS, 32  /* Offset: 0x0758 */
#define DENALI_CTL_470_AXI8_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_471
//****************************************************************************************************************
#define DENALI_CTL_471						(MC_BASE + 0x075c), MC_ACCESS, 32  /* Offset: 0x075c */
#define DENALI_CTL_471_AXI8_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_472
//****************************************************************************************************************
#define DENALI_CTL_472						(MC_BASE + 0x0760), MC_ACCESS, 32  /* Offset: 0x0760 */
#define DENALI_CTL_472_AXI8_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_473
//****************************************************************************************************************
#define DENALI_CTL_473						(MC_BASE + 0x0764), MC_ACCESS, 32  /* Offset: 0x0764 */
#define DENALI_CTL_473_AXI8_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_474
//****************************************************************************************************************
#define DENALI_CTL_474						(MC_BASE + 0x0768), MC_ACCESS, 32  /* Offset: 0x0768 */
#define DENALI_CTL_474_AXI8_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_475
//****************************************************************************************************************
#define DENALI_CTL_475						(MC_BASE + 0x076c), MC_ACCESS, 32  /* Offset: 0x076c */
#define DENALI_CTL_475_AXI8_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_476
//****************************************************************************************************************
#define DENALI_CTL_476						(MC_BASE + 0x0770), MC_ACCESS, 32  /* Offset: 0x0770 */
#define DENALI_CTL_476_AXI8_END_ADDR_10				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_477
//****************************************************************************************************************
#define DENALI_CTL_477						(MC_BASE + 0x0774), MC_ACCESS, 32  /* Offset: 0x0774 */
#define DENALI_CTL_477_AXI8_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_478
//****************************************************************************************************************
#define DENALI_CTL_478						(MC_BASE + 0x0778), MC_ACCESS, 32  /* Offset: 0x0778 */
#define DENALI_CTL_478_AXI8_END_ADDR_11				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_479
//****************************************************************************************************************
#define DENALI_CTL_479						(MC_BASE + 0x077c), MC_ACCESS, 32  /* Offset: 0x077c */
#define DENALI_CTL_479_AXI8_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_480
//****************************************************************************************************************
#define DENALI_CTL_480						(MC_BASE + 0x0780), MC_ACCESS, 32  /* Offset: 0x0780 */
#define DENALI_CTL_480_AXI8_END_ADDR_12				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_481
//****************************************************************************************************************
#define DENALI_CTL_481						(MC_BASE + 0x0784), MC_ACCESS, 32  /* Offset: 0x0784 */
#define DENALI_CTL_481_AXI8_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_482
//****************************************************************************************************************
#define DENALI_CTL_482						(MC_BASE + 0x0788), MC_ACCESS, 32  /* Offset: 0x0788 */
#define DENALI_CTL_482_AXI8_END_ADDR_13				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_483
//****************************************************************************************************************
#define DENALI_CTL_483						(MC_BASE + 0x078c), MC_ACCESS, 32  /* Offset: 0x078c */
#define DENALI_CTL_483_AXI8_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_484
//****************************************************************************************************************
#define DENALI_CTL_484						(MC_BASE + 0x0790), MC_ACCESS, 32  /* Offset: 0x0790 */
#define DENALI_CTL_484_AXI8_END_ADDR_14				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_485
//****************************************************************************************************************
#define DENALI_CTL_485						(MC_BASE + 0x0794), MC_ACCESS, 32  /* Offset: 0x0794 */
#define DENALI_CTL_485_AXI8_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 8 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_486
//****************************************************************************************************************
#define DENALI_CTL_486						(MC_BASE + 0x0798), MC_ACCESS, 32  /* Offset: 0x0798 */
#define DENALI_CTL_486_AXI8_END_ADDR_15				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 8 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_487
//****************************************************************************************************************
#define DENALI_CTL_487						(MC_BASE + 0x079c), MC_ACCESS, 32  /* Offset: 0x079c */
#define DENALI_CTL_487_AXI9_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_488
//****************************************************************************************************************
#define DENALI_CTL_488						(MC_BASE + 0x07a0), MC_ACCESS, 32  /* Offset: 0x07a0 */
#define DENALI_CTL_488_AXI9_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_489
//****************************************************************************************************************
#define DENALI_CTL_489						(MC_BASE + 0x07a4), MC_ACCESS, 32  /* Offset: 0x07a4 */
#define DENALI_CTL_489_AXI9_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_490
//****************************************************************************************************************
#define DENALI_CTL_490						(MC_BASE + 0x07a8), MC_ACCESS, 32  /* Offset: 0x07a8 */
#define DENALI_CTL_490_AXI9_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_491
//****************************************************************************************************************
#define DENALI_CTL_491						(MC_BASE + 0x07ac), MC_ACCESS, 32  /* Offset: 0x07ac */
#define DENALI_CTL_491_AXI9_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_492
//****************************************************************************************************************
#define DENALI_CTL_492						(MC_BASE + 0x07b0), MC_ACCESS, 32  /* Offset: 0x07b0 */
#define DENALI_CTL_492_AXI9_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_493
//****************************************************************************************************************
#define DENALI_CTL_493						(MC_BASE + 0x07b4), MC_ACCESS, 32  /* Offset: 0x07b4 */
#define DENALI_CTL_493_AXI9_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_494
//****************************************************************************************************************
#define DENALI_CTL_494						(MC_BASE + 0x07b8), MC_ACCESS, 32  /* Offset: 0x07b8 */
#define DENALI_CTL_494_AXI9_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_495
//****************************************************************************************************************
#define DENALI_CTL_495						(MC_BASE + 0x07bc), MC_ACCESS, 32  /* Offset: 0x07bc */
#define DENALI_CTL_495_AXI9_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_496
//****************************************************************************************************************
#define DENALI_CTL_496						(MC_BASE + 0x07c0), MC_ACCESS, 32  /* Offset: 0x07c0 */
#define DENALI_CTL_496_AXI9_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_497
//****************************************************************************************************************
#define DENALI_CTL_497						(MC_BASE + 0x07c4), MC_ACCESS, 32  /* Offset: 0x07c4 */
#define DENALI_CTL_497_AXI9_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_498
//****************************************************************************************************************
#define DENALI_CTL_498						(MC_BASE + 0x07c8), MC_ACCESS, 32  /* Offset: 0x07c8 */
#define DENALI_CTL_498_AXI9_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_499
//****************************************************************************************************************
#define DENALI_CTL_499						(MC_BASE + 0x07cc), MC_ACCESS, 32  /* Offset: 0x07cc */
#define DENALI_CTL_499_AXI9_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_500
//****************************************************************************************************************
#define DENALI_CTL_500						(MC_BASE + 0x07d0), MC_ACCESS, 32  /* Offset: 0x07d0 */
#define DENALI_CTL_500_AXI9_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_501
//****************************************************************************************************************
#define DENALI_CTL_501						(MC_BASE + 0x07d4), MC_ACCESS, 32  /* Offset: 0x07d4 */
#define DENALI_CTL_501_AXI9_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_502
//****************************************************************************************************************
#define DENALI_CTL_502						(MC_BASE + 0x07d8), MC_ACCESS, 32  /* Offset: 0x07d8 */
#define DENALI_CTL_502_AXI9_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_503
//****************************************************************************************************************
#define DENALI_CTL_503						(MC_BASE + 0x07dc), MC_ACCESS, 32  /* Offset: 0x07dc */
#define DENALI_CTL_503_AXI9_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_504
//****************************************************************************************************************
#define DENALI_CTL_504						(MC_BASE + 0x07e0), MC_ACCESS, 32  /* Offset: 0x07e0 */
#define DENALI_CTL_504_AXI9_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_505
//****************************************************************************************************************
#define DENALI_CTL_505						(MC_BASE + 0x07e4), MC_ACCESS, 32  /* Offset: 0x07e4 */
#define DENALI_CTL_505_AXI9_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_506
//****************************************************************************************************************
#define DENALI_CTL_506						(MC_BASE + 0x07e8), MC_ACCESS, 32  /* Offset: 0x07e8 */
#define DENALI_CTL_506_AXI9_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_507
//****************************************************************************************************************
#define DENALI_CTL_507						(MC_BASE + 0x07ec), MC_ACCESS, 32  /* Offset: 0x07ec */
#define DENALI_CTL_507_AXI9_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_508
//****************************************************************************************************************
#define DENALI_CTL_508						(MC_BASE + 0x07f0), MC_ACCESS, 32  /* Offset: 0x07f0 */
#define DENALI_CTL_508_AXI9_END_ADDR_10				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_509
//****************************************************************************************************************
#define DENALI_CTL_509						(MC_BASE + 0x07f4), MC_ACCESS, 32  /* Offset: 0x07f4 */
#define DENALI_CTL_509_AXI9_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_510
//****************************************************************************************************************
#define DENALI_CTL_510						(MC_BASE + 0x07f8), MC_ACCESS, 32  /* Offset: 0x07f8 */
#define DENALI_CTL_510_AXI9_END_ADDR_11				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_511
//****************************************************************************************************************
#define DENALI_CTL_511						(MC_BASE + 0x07fc), MC_ACCESS, 32  /* Offset: 0x07fc */
#define DENALI_CTL_511_AXI9_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_512
//****************************************************************************************************************
#define DENALI_CTL_512						(MC_BASE + 0x0800), MC_ACCESS, 32  /* Offset: 0x0800 */
#define DENALI_CTL_512_AXI9_END_ADDR_12				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_513
//****************************************************************************************************************
#define DENALI_CTL_513						(MC_BASE + 0x0804), MC_ACCESS, 32  /* Offset: 0x0804 */
#define DENALI_CTL_513_AXI9_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_514
//****************************************************************************************************************
#define DENALI_CTL_514						(MC_BASE + 0x0808), MC_ACCESS, 32  /* Offset: 0x0808 */
#define DENALI_CTL_514_AXI9_END_ADDR_13				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_515
//****************************************************************************************************************
#define DENALI_CTL_515						(MC_BASE + 0x080c), MC_ACCESS, 32  /* Offset: 0x080c */
#define DENALI_CTL_515_AXI9_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_516
//****************************************************************************************************************
#define DENALI_CTL_516						(MC_BASE + 0x0810), MC_ACCESS, 32  /* Offset: 0x0810 */
#define DENALI_CTL_516_AXI9_END_ADDR_14				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_517
//****************************************************************************************************************
#define DENALI_CTL_517						(MC_BASE + 0x0814), MC_ACCESS, 32  /* Offset: 0x0814 */
#define DENALI_CTL_517_AXI9_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 9 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_518
//****************************************************************************************************************
#define DENALI_CTL_518						(MC_BASE + 0x0818), MC_ACCESS, 32  /* Offset: 0x0818 */
#define DENALI_CTL_518_AXI9_END_ADDR_15				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 9 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_519
//****************************************************************************************************************
#define DENALI_CTL_519						(MC_BASE + 0x081c), MC_ACCESS, 32  /* Offset: 0x081c */
#define DENALI_CTL_519_AXI10_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_520
//****************************************************************************************************************
#define DENALI_CTL_520						(MC_BASE + 0x0820), MC_ACCESS, 32  /* Offset: 0x0820 */
#define DENALI_CTL_520_AXI10_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_521
//****************************************************************************************************************
#define DENALI_CTL_521						(MC_BASE + 0x0824), MC_ACCESS, 32  /* Offset: 0x0824 */
#define DENALI_CTL_521_AXI10_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_522
//****************************************************************************************************************
#define DENALI_CTL_522						(MC_BASE + 0x0828), MC_ACCESS, 32  /* Offset: 0x0828 */
#define DENALI_CTL_522_AXI10_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_523
//****************************************************************************************************************
#define DENALI_CTL_523						(MC_BASE + 0x082c), MC_ACCESS, 32  /* Offset: 0x082c */
#define DENALI_CTL_523_AXI10_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_524
//****************************************************************************************************************
#define DENALI_CTL_524						(MC_BASE + 0x0830), MC_ACCESS, 32  /* Offset: 0x0830 */
#define DENALI_CTL_524_AXI10_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_525
//****************************************************************************************************************
#define DENALI_CTL_525						(MC_BASE + 0x0834), MC_ACCESS, 32  /* Offset: 0x0834 */
#define DENALI_CTL_525_AXI10_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_526
//****************************************************************************************************************
#define DENALI_CTL_526						(MC_BASE + 0x0838), MC_ACCESS, 32  /* Offset: 0x0838 */
#define DENALI_CTL_526_AXI10_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_527
//****************************************************************************************************************
#define DENALI_CTL_527						(MC_BASE + 0x083c), MC_ACCESS, 32  /* Offset: 0x083c */
#define DENALI_CTL_527_AXI10_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_528
//****************************************************************************************************************
#define DENALI_CTL_528						(MC_BASE + 0x0840), MC_ACCESS, 32  /* Offset: 0x0840 */
#define DENALI_CTL_528_AXI10_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_529
//****************************************************************************************************************
#define DENALI_CTL_529						(MC_BASE + 0x0844), MC_ACCESS, 32  /* Offset: 0x0844 */
#define DENALI_CTL_529_AXI10_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_530
//****************************************************************************************************************
#define DENALI_CTL_530						(MC_BASE + 0x0848), MC_ACCESS, 32  /* Offset: 0x0848 */
#define DENALI_CTL_530_AXI10_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_531
//****************************************************************************************************************
#define DENALI_CTL_531						(MC_BASE + 0x084c), MC_ACCESS, 32  /* Offset: 0x084c */
#define DENALI_CTL_531_AXI10_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_532
//****************************************************************************************************************
#define DENALI_CTL_532						(MC_BASE + 0x0850), MC_ACCESS, 32  /* Offset: 0x0850 */
#define DENALI_CTL_532_AXI10_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_533
//****************************************************************************************************************
#define DENALI_CTL_533						(MC_BASE + 0x0854), MC_ACCESS, 32  /* Offset: 0x0854 */
#define DENALI_CTL_533_AXI10_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_534
//****************************************************************************************************************
#define DENALI_CTL_534						(MC_BASE + 0x0858), MC_ACCESS, 32  /* Offset: 0x0858 */
#define DENALI_CTL_534_AXI10_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_535
//****************************************************************************************************************
#define DENALI_CTL_535						(MC_BASE + 0x085c), MC_ACCESS, 32  /* Offset: 0x085c */
#define DENALI_CTL_535_AXI10_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_536
//****************************************************************************************************************
#define DENALI_CTL_536						(MC_BASE + 0x0860), MC_ACCESS, 32  /* Offset: 0x0860 */
#define DENALI_CTL_536_AXI10_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_537
//****************************************************************************************************************
#define DENALI_CTL_537						(MC_BASE + 0x0864), MC_ACCESS, 32  /* Offset: 0x0864 */
#define DENALI_CTL_537_AXI10_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_538
//****************************************************************************************************************
#define DENALI_CTL_538						(MC_BASE + 0x0868), MC_ACCESS, 32  /* Offset: 0x0868 */
#define DENALI_CTL_538_AXI10_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_539
//****************************************************************************************************************
#define DENALI_CTL_539						(MC_BASE + 0x086c), MC_ACCESS, 32  /* Offset: 0x086c */
#define DENALI_CTL_539_AXI10_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_540
//****************************************************************************************************************
#define DENALI_CTL_540						(MC_BASE + 0x0870), MC_ACCESS, 32  /* Offset: 0x0870 */
#define DENALI_CTL_540_AXI10_END_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_541
//****************************************************************************************************************
#define DENALI_CTL_541						(MC_BASE + 0x0874), MC_ACCESS, 32  /* Offset: 0x0874 */
#define DENALI_CTL_541_AXI10_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_542
//****************************************************************************************************************
#define DENALI_CTL_542						(MC_BASE + 0x0878), MC_ACCESS, 32  /* Offset: 0x0878 */
#define DENALI_CTL_542_AXI10_END_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_543
//****************************************************************************************************************
#define DENALI_CTL_543						(MC_BASE + 0x087c), MC_ACCESS, 32  /* Offset: 0x087c */
#define DENALI_CTL_543_AXI10_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_544
//****************************************************************************************************************
#define DENALI_CTL_544						(MC_BASE + 0x0880), MC_ACCESS, 32  /* Offset: 0x0880 */
#define DENALI_CTL_544_AXI10_END_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_545
//****************************************************************************************************************
#define DENALI_CTL_545						(MC_BASE + 0x0884), MC_ACCESS, 32  /* Offset: 0x0884 */
#define DENALI_CTL_545_AXI10_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_546
//****************************************************************************************************************
#define DENALI_CTL_546						(MC_BASE + 0x0888), MC_ACCESS, 32  /* Offset: 0x0888 */
#define DENALI_CTL_546_AXI10_END_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_547
//****************************************************************************************************************
#define DENALI_CTL_547						(MC_BASE + 0x088c), MC_ACCESS, 32  /* Offset: 0x088c */
#define DENALI_CTL_547_AXI10_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_548
//****************************************************************************************************************
#define DENALI_CTL_548						(MC_BASE + 0x0890), MC_ACCESS, 32  /* Offset: 0x0890 */
#define DENALI_CTL_548_AXI10_END_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_549
//****************************************************************************************************************
#define DENALI_CTL_549						(MC_BASE + 0x0894), MC_ACCESS, 32  /* Offset: 0x0894 */
#define DENALI_CTL_549_AXI10_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 10 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_550
//****************************************************************************************************************
#define DENALI_CTL_550						(MC_BASE + 0x0898), MC_ACCESS, 32  /* Offset: 0x0898 */
#define DENALI_CTL_550_AXI10_END_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 10 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_551
//****************************************************************************************************************
#define DENALI_CTL_551						(MC_BASE + 0x089c), MC_ACCESS, 32  /* Offset: 0x089c */
#define DENALI_CTL_551_AXI11_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_552
//****************************************************************************************************************
#define DENALI_CTL_552						(MC_BASE + 0x08a0), MC_ACCESS, 32  /* Offset: 0x08a0 */
#define DENALI_CTL_552_AXI11_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_553
//****************************************************************************************************************
#define DENALI_CTL_553						(MC_BASE + 0x08a4), MC_ACCESS, 32  /* Offset: 0x08a4 */
#define DENALI_CTL_553_AXI11_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_554
//****************************************************************************************************************
#define DENALI_CTL_554						(MC_BASE + 0x08a8), MC_ACCESS, 32  /* Offset: 0x08a8 */
#define DENALI_CTL_554_AXI11_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_555
//****************************************************************************************************************
#define DENALI_CTL_555						(MC_BASE + 0x08ac), MC_ACCESS, 32  /* Offset: 0x08ac */
#define DENALI_CTL_555_AXI11_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_556
//****************************************************************************************************************
#define DENALI_CTL_556						(MC_BASE + 0x08b0), MC_ACCESS, 32  /* Offset: 0x08b0 */
#define DENALI_CTL_556_AXI11_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_557
//****************************************************************************************************************
#define DENALI_CTL_557						(MC_BASE + 0x08b4), MC_ACCESS, 32  /* Offset: 0x08b4 */
#define DENALI_CTL_557_AXI11_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_558
//****************************************************************************************************************
#define DENALI_CTL_558						(MC_BASE + 0x08b8), MC_ACCESS, 32  /* Offset: 0x08b8 */
#define DENALI_CTL_558_AXI11_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_559
//****************************************************************************************************************
#define DENALI_CTL_559						(MC_BASE + 0x08bc), MC_ACCESS, 32  /* Offset: 0x08bc */
#define DENALI_CTL_559_AXI11_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_560
//****************************************************************************************************************
#define DENALI_CTL_560						(MC_BASE + 0x08c0), MC_ACCESS, 32  /* Offset: 0x08c0 */
#define DENALI_CTL_560_AXI11_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_561
//****************************************************************************************************************
#define DENALI_CTL_561						(MC_BASE + 0x08c4), MC_ACCESS, 32  /* Offset: 0x08c4 */
#define DENALI_CTL_561_AXI11_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_562
//****************************************************************************************************************
#define DENALI_CTL_562						(MC_BASE + 0x08c8), MC_ACCESS, 32  /* Offset: 0x08c8 */
#define DENALI_CTL_562_AXI11_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_563
//****************************************************************************************************************
#define DENALI_CTL_563						(MC_BASE + 0x08cc), MC_ACCESS, 32  /* Offset: 0x08cc */
#define DENALI_CTL_563_AXI11_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_564
//****************************************************************************************************************
#define DENALI_CTL_564						(MC_BASE + 0x08d0), MC_ACCESS, 32  /* Offset: 0x08d0 */
#define DENALI_CTL_564_AXI11_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_565
//****************************************************************************************************************
#define DENALI_CTL_565						(MC_BASE + 0x08d4), MC_ACCESS, 32  /* Offset: 0x08d4 */
#define DENALI_CTL_565_AXI11_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_566
//****************************************************************************************************************
#define DENALI_CTL_566						(MC_BASE + 0x08d8), MC_ACCESS, 32  /* Offset: 0x08d8 */
#define DENALI_CTL_566_AXI11_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_567
//****************************************************************************************************************
#define DENALI_CTL_567						(MC_BASE + 0x08dc), MC_ACCESS, 32  /* Offset: 0x08dc */
#define DENALI_CTL_567_AXI11_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_568
//****************************************************************************************************************
#define DENALI_CTL_568						(MC_BASE + 0x08e0), MC_ACCESS, 32  /* Offset: 0x08e0 */
#define DENALI_CTL_568_AXI11_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_569
//****************************************************************************************************************
#define DENALI_CTL_569						(MC_BASE + 0x08e4), MC_ACCESS, 32  /* Offset: 0x08e4 */
#define DENALI_CTL_569_AXI11_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_570
//****************************************************************************************************************
#define DENALI_CTL_570						(MC_BASE + 0x08e8), MC_ACCESS, 32  /* Offset: 0x08e8 */
#define DENALI_CTL_570_AXI11_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_571
//****************************************************************************************************************
#define DENALI_CTL_571						(MC_BASE + 0x08ec), MC_ACCESS, 32  /* Offset: 0x08ec */
#define DENALI_CTL_571_AXI11_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_572
//****************************************************************************************************************
#define DENALI_CTL_572						(MC_BASE + 0x08f0), MC_ACCESS, 32  /* Offset: 0x08f0 */
#define DENALI_CTL_572_AXI11_END_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_573
//****************************************************************************************************************
#define DENALI_CTL_573						(MC_BASE + 0x08f4), MC_ACCESS, 32  /* Offset: 0x08f4 */
#define DENALI_CTL_573_AXI11_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_574
//****************************************************************************************************************
#define DENALI_CTL_574						(MC_BASE + 0x08f8), MC_ACCESS, 32  /* Offset: 0x08f8 */
#define DENALI_CTL_574_AXI11_END_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_575
//****************************************************************************************************************
#define DENALI_CTL_575						(MC_BASE + 0x08fc), MC_ACCESS, 32  /* Offset: 0x08fc */
#define DENALI_CTL_575_AXI11_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_576
//****************************************************************************************************************
#define DENALI_CTL_576						(MC_BASE + 0x0900), MC_ACCESS, 32  /* Offset: 0x0900 */
#define DENALI_CTL_576_AXI11_END_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_577
//****************************************************************************************************************
#define DENALI_CTL_577						(MC_BASE + 0x0904), MC_ACCESS, 32  /* Offset: 0x0904 */
#define DENALI_CTL_577_AXI11_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_578
//****************************************************************************************************************
#define DENALI_CTL_578						(MC_BASE + 0x0908), MC_ACCESS, 32  /* Offset: 0x0908 */
#define DENALI_CTL_578_AXI11_END_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_579
//****************************************************************************************************************
#define DENALI_CTL_579						(MC_BASE + 0x090c), MC_ACCESS, 32  /* Offset: 0x090c */
#define DENALI_CTL_579_AXI11_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_580
//****************************************************************************************************************
#define DENALI_CTL_580						(MC_BASE + 0x0910), MC_ACCESS, 32  /* Offset: 0x0910 */
#define DENALI_CTL_580_AXI11_END_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_581
//****************************************************************************************************************
#define DENALI_CTL_581						(MC_BASE + 0x0914), MC_ACCESS, 32  /* Offset: 0x0914 */
#define DENALI_CTL_581_AXI11_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 11 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_582
//****************************************************************************************************************
#define DENALI_CTL_582						(MC_BASE + 0x0918), MC_ACCESS, 32  /* Offset: 0x0918 */
#define DENALI_CTL_582_AXI11_END_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 11 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_583
//****************************************************************************************************************
#define DENALI_CTL_583						(MC_BASE + 0x091c), MC_ACCESS, 32  /* Offset: 0x091c */
#define DENALI_CTL_583_AXI12_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_584
//****************************************************************************************************************
#define DENALI_CTL_584						(MC_BASE + 0x0920), MC_ACCESS, 32  /* Offset: 0x0920 */
#define DENALI_CTL_584_AXI12_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_585
//****************************************************************************************************************
#define DENALI_CTL_585						(MC_BASE + 0x0924), MC_ACCESS, 32  /* Offset: 0x0924 */
#define DENALI_CTL_585_AXI12_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_586
//****************************************************************************************************************
#define DENALI_CTL_586						(MC_BASE + 0x0928), MC_ACCESS, 32  /* Offset: 0x0928 */
#define DENALI_CTL_586_AXI12_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_587
//****************************************************************************************************************
#define DENALI_CTL_587						(MC_BASE + 0x092c), MC_ACCESS, 32  /* Offset: 0x092c */
#define DENALI_CTL_587_AXI12_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_588
//****************************************************************************************************************
#define DENALI_CTL_588						(MC_BASE + 0x0930), MC_ACCESS, 32  /* Offset: 0x0930 */
#define DENALI_CTL_588_AXI12_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_589
//****************************************************************************************************************
#define DENALI_CTL_589						(MC_BASE + 0x0934), MC_ACCESS, 32  /* Offset: 0x0934 */
#define DENALI_CTL_589_AXI12_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_590
//****************************************************************************************************************
#define DENALI_CTL_590						(MC_BASE + 0x0938), MC_ACCESS, 32  /* Offset: 0x0938 */
#define DENALI_CTL_590_AXI12_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_591
//****************************************************************************************************************
#define DENALI_CTL_591						(MC_BASE + 0x093c), MC_ACCESS, 32  /* Offset: 0x093c */
#define DENALI_CTL_591_AXI12_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_592
//****************************************************************************************************************
#define DENALI_CTL_592						(MC_BASE + 0x0940), MC_ACCESS, 32  /* Offset: 0x0940 */
#define DENALI_CTL_592_AXI12_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_593
//****************************************************************************************************************
#define DENALI_CTL_593						(MC_BASE + 0x0944), MC_ACCESS, 32  /* Offset: 0x0944 */
#define DENALI_CTL_593_AXI12_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_594
//****************************************************************************************************************
#define DENALI_CTL_594						(MC_BASE + 0x0948), MC_ACCESS, 32  /* Offset: 0x0948 */
#define DENALI_CTL_594_AXI12_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_595
//****************************************************************************************************************
#define DENALI_CTL_595						(MC_BASE + 0x094c), MC_ACCESS, 32  /* Offset: 0x094c */
#define DENALI_CTL_595_AXI12_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_596
//****************************************************************************************************************
#define DENALI_CTL_596						(MC_BASE + 0x0950), MC_ACCESS, 32  /* Offset: 0x0950 */
#define DENALI_CTL_596_AXI12_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_597
//****************************************************************************************************************
#define DENALI_CTL_597						(MC_BASE + 0x0954), MC_ACCESS, 32  /* Offset: 0x0954 */
#define DENALI_CTL_597_AXI12_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_598
//****************************************************************************************************************
#define DENALI_CTL_598						(MC_BASE + 0x0958), MC_ACCESS, 32  /* Offset: 0x0958 */
#define DENALI_CTL_598_AXI12_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_599
//****************************************************************************************************************
#define DENALI_CTL_599						(MC_BASE + 0x095c), MC_ACCESS, 32  /* Offset: 0x095c */
#define DENALI_CTL_599_AXI12_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_600
//****************************************************************************************************************
#define DENALI_CTL_600						(MC_BASE + 0x0960), MC_ACCESS, 32  /* Offset: 0x0960 */
#define DENALI_CTL_600_AXI12_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_601
//****************************************************************************************************************
#define DENALI_CTL_601						(MC_BASE + 0x0964), MC_ACCESS, 32  /* Offset: 0x0964 */
#define DENALI_CTL_601_AXI12_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_602
//****************************************************************************************************************
#define DENALI_CTL_602						(MC_BASE + 0x0968), MC_ACCESS, 32  /* Offset: 0x0968 */
#define DENALI_CTL_602_AXI12_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_603
//****************************************************************************************************************
#define DENALI_CTL_603						(MC_BASE + 0x096c), MC_ACCESS, 32  /* Offset: 0x096c */
#define DENALI_CTL_603_AXI12_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_604
//****************************************************************************************************************
#define DENALI_CTL_604						(MC_BASE + 0x0970), MC_ACCESS, 32  /* Offset: 0x0970 */
#define DENALI_CTL_604_AXI12_END_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_605
//****************************************************************************************************************
#define DENALI_CTL_605						(MC_BASE + 0x0974), MC_ACCESS, 32  /* Offset: 0x0974 */
#define DENALI_CTL_605_AXI12_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_606
//****************************************************************************************************************
#define DENALI_CTL_606						(MC_BASE + 0x0978), MC_ACCESS, 32  /* Offset: 0x0978 */
#define DENALI_CTL_606_AXI12_END_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_607
//****************************************************************************************************************
#define DENALI_CTL_607						(MC_BASE + 0x097c), MC_ACCESS, 32  /* Offset: 0x097c */
#define DENALI_CTL_607_AXI12_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_608
//****************************************************************************************************************
#define DENALI_CTL_608						(MC_BASE + 0x0980), MC_ACCESS, 32  /* Offset: 0x0980 */
#define DENALI_CTL_608_AXI12_END_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_609
//****************************************************************************************************************
#define DENALI_CTL_609						(MC_BASE + 0x0984), MC_ACCESS, 32  /* Offset: 0x0984 */
#define DENALI_CTL_609_AXI12_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_610
//****************************************************************************************************************
#define DENALI_CTL_610						(MC_BASE + 0x0988), MC_ACCESS, 32  /* Offset: 0x0988 */
#define DENALI_CTL_610_AXI12_END_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_611
//****************************************************************************************************************
#define DENALI_CTL_611						(MC_BASE + 0x098c), MC_ACCESS, 32  /* Offset: 0x098c */
#define DENALI_CTL_611_AXI12_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_612
//****************************************************************************************************************
#define DENALI_CTL_612						(MC_BASE + 0x0990), MC_ACCESS, 32  /* Offset: 0x0990 */
#define DENALI_CTL_612_AXI12_END_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_613
//****************************************************************************************************************
#define DENALI_CTL_613						(MC_BASE + 0x0994), MC_ACCESS, 32  /* Offset: 0x0994 */
#define DENALI_CTL_613_AXI12_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 12 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_614
//****************************************************************************************************************
#define DENALI_CTL_614						(MC_BASE + 0x0998), MC_ACCESS, 32  /* Offset: 0x0998 */
#define DENALI_CTL_614_AXI12_END_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 12 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_615
//****************************************************************************************************************
#define DENALI_CTL_615						(MC_BASE + 0x099c), MC_ACCESS, 32  /* Offset: 0x099c */
#define DENALI_CTL_615_AXI13_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_616
//****************************************************************************************************************
#define DENALI_CTL_616						(MC_BASE + 0x09a0), MC_ACCESS, 32  /* Offset: 0x09a0 */
#define DENALI_CTL_616_AXI13_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_617
//****************************************************************************************************************
#define DENALI_CTL_617						(MC_BASE + 0x09a4), MC_ACCESS, 32  /* Offset: 0x09a4 */
#define DENALI_CTL_617_AXI13_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_618
//****************************************************************************************************************
#define DENALI_CTL_618						(MC_BASE + 0x09a8), MC_ACCESS, 32  /* Offset: 0x09a8 */
#define DENALI_CTL_618_AXI13_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_619
//****************************************************************************************************************
#define DENALI_CTL_619						(MC_BASE + 0x09ac), MC_ACCESS, 32  /* Offset: 0x09ac */
#define DENALI_CTL_619_AXI13_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_620
//****************************************************************************************************************
#define DENALI_CTL_620						(MC_BASE + 0x09b0), MC_ACCESS, 32  /* Offset: 0x09b0 */
#define DENALI_CTL_620_AXI13_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_621
//****************************************************************************************************************
#define DENALI_CTL_621						(MC_BASE + 0x09b4), MC_ACCESS, 32  /* Offset: 0x09b4 */
#define DENALI_CTL_621_AXI13_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_622
//****************************************************************************************************************
#define DENALI_CTL_622						(MC_BASE + 0x09b8), MC_ACCESS, 32  /* Offset: 0x09b8 */
#define DENALI_CTL_622_AXI13_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_623
//****************************************************************************************************************
#define DENALI_CTL_623						(MC_BASE + 0x09bc), MC_ACCESS, 32  /* Offset: 0x09bc */
#define DENALI_CTL_623_AXI13_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_624
//****************************************************************************************************************
#define DENALI_CTL_624						(MC_BASE + 0x09c0), MC_ACCESS, 32  /* Offset: 0x09c0 */
#define DENALI_CTL_624_AXI13_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_625
//****************************************************************************************************************
#define DENALI_CTL_625						(MC_BASE + 0x09c4), MC_ACCESS, 32  /* Offset: 0x09c4 */
#define DENALI_CTL_625_AXI13_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_626
//****************************************************************************************************************
#define DENALI_CTL_626						(MC_BASE + 0x09c8), MC_ACCESS, 32  /* Offset: 0x09c8 */
#define DENALI_CTL_626_AXI13_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_627
//****************************************************************************************************************
#define DENALI_CTL_627						(MC_BASE + 0x09cc), MC_ACCESS, 32  /* Offset: 0x09cc */
#define DENALI_CTL_627_AXI13_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_628
//****************************************************************************************************************
#define DENALI_CTL_628						(MC_BASE + 0x09d0), MC_ACCESS, 32  /* Offset: 0x09d0 */
#define DENALI_CTL_628_AXI13_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_629
//****************************************************************************************************************
#define DENALI_CTL_629						(MC_BASE + 0x09d4), MC_ACCESS, 32  /* Offset: 0x09d4 */
#define DENALI_CTL_629_AXI13_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_630
//****************************************************************************************************************
#define DENALI_CTL_630						(MC_BASE + 0x09d8), MC_ACCESS, 32  /* Offset: 0x09d8 */
#define DENALI_CTL_630_AXI13_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_631
//****************************************************************************************************************
#define DENALI_CTL_631						(MC_BASE + 0x09dc), MC_ACCESS, 32  /* Offset: 0x09dc */
#define DENALI_CTL_631_AXI13_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_632
//****************************************************************************************************************
#define DENALI_CTL_632						(MC_BASE + 0x09e0), MC_ACCESS, 32  /* Offset: 0x09e0 */
#define DENALI_CTL_632_AXI13_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_633
//****************************************************************************************************************
#define DENALI_CTL_633						(MC_BASE + 0x09e4), MC_ACCESS, 32  /* Offset: 0x09e4 */
#define DENALI_CTL_633_AXI13_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_634
//****************************************************************************************************************
#define DENALI_CTL_634						(MC_BASE + 0x09e8), MC_ACCESS, 32  /* Offset: 0x09e8 */
#define DENALI_CTL_634_AXI13_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_635
//****************************************************************************************************************
#define DENALI_CTL_635						(MC_BASE + 0x09ec), MC_ACCESS, 32  /* Offset: 0x09ec */
#define DENALI_CTL_635_AXI13_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_636
//****************************************************************************************************************
#define DENALI_CTL_636						(MC_BASE + 0x09f0), MC_ACCESS, 32  /* Offset: 0x09f0 */
#define DENALI_CTL_636_AXI13_END_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_637
//****************************************************************************************************************
#define DENALI_CTL_637						(MC_BASE + 0x09f4), MC_ACCESS, 32  /* Offset: 0x09f4 */
#define DENALI_CTL_637_AXI13_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_638
//****************************************************************************************************************
#define DENALI_CTL_638						(MC_BASE + 0x09f8), MC_ACCESS, 32  /* Offset: 0x09f8 */
#define DENALI_CTL_638_AXI13_END_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_639
//****************************************************************************************************************
#define DENALI_CTL_639						(MC_BASE + 0x09fc), MC_ACCESS, 32  /* Offset: 0x09fc */
#define DENALI_CTL_639_AXI13_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_640
//****************************************************************************************************************
#define DENALI_CTL_640						(MC_BASE + 0x0a00), MC_ACCESS, 32  /* Offset: 0x0a00 */
#define DENALI_CTL_640_AXI13_END_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_641
//****************************************************************************************************************
#define DENALI_CTL_641						(MC_BASE + 0x0a04), MC_ACCESS, 32  /* Offset: 0x0a04 */
#define DENALI_CTL_641_AXI13_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_642
//****************************************************************************************************************
#define DENALI_CTL_642						(MC_BASE + 0x0a08), MC_ACCESS, 32  /* Offset: 0x0a08 */
#define DENALI_CTL_642_AXI13_END_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_643
//****************************************************************************************************************
#define DENALI_CTL_643						(MC_BASE + 0x0a0c), MC_ACCESS, 32  /* Offset: 0x0a0c */
#define DENALI_CTL_643_AXI13_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_644
//****************************************************************************************************************
#define DENALI_CTL_644						(MC_BASE + 0x0a10), MC_ACCESS, 32  /* Offset: 0x0a10 */
#define DENALI_CTL_644_AXI13_END_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_645
//****************************************************************************************************************
#define DENALI_CTL_645						(MC_BASE + 0x0a14), MC_ACCESS, 32  /* Offset: 0x0a14 */
#define DENALI_CTL_645_AXI13_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 13 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_646
//****************************************************************************************************************
#define DENALI_CTL_646						(MC_BASE + 0x0a18), MC_ACCESS, 32  /* Offset: 0x0a18 */
#define DENALI_CTL_646_AXI13_END_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 13 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_647
//****************************************************************************************************************
#define DENALI_CTL_647						(MC_BASE + 0x0a1c), MC_ACCESS, 32  /* Offset: 0x0a1c */
#define DENALI_CTL_647_AXI14_START_ADDR_0			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_648
//****************************************************************************************************************
#define DENALI_CTL_648						(MC_BASE + 0x0a20), MC_ACCESS, 32  /* Offset: 0x0a20 */
#define DENALI_CTL_648_AXI14_END_ADDR_0				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_649
//****************************************************************************************************************
#define DENALI_CTL_649						(MC_BASE + 0x0a24), MC_ACCESS, 32  /* Offset: 0x0a24 */
#define DENALI_CTL_649_AXI14_START_ADDR_1			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_650
//****************************************************************************************************************
#define DENALI_CTL_650						(MC_BASE + 0x0a28), MC_ACCESS, 32  /* Offset: 0x0a28 */
#define DENALI_CTL_650_AXI14_END_ADDR_1				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_651
//****************************************************************************************************************
#define DENALI_CTL_651						(MC_BASE + 0x0a2c), MC_ACCESS, 32  /* Offset: 0x0a2c */
#define DENALI_CTL_651_AXI14_START_ADDR_2			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_652
//****************************************************************************************************************
#define DENALI_CTL_652						(MC_BASE + 0x0a30), MC_ACCESS, 32  /* Offset: 0x0a30 */
#define DENALI_CTL_652_AXI14_END_ADDR_2				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_653
//****************************************************************************************************************
#define DENALI_CTL_653						(MC_BASE + 0x0a34), MC_ACCESS, 32  /* Offset: 0x0a34 */
#define DENALI_CTL_653_AXI14_START_ADDR_3			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_654
//****************************************************************************************************************
#define DENALI_CTL_654						(MC_BASE + 0x0a38), MC_ACCESS, 32  /* Offset: 0x0a38 */
#define DENALI_CTL_654_AXI14_END_ADDR_3				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_655
//****************************************************************************************************************
#define DENALI_CTL_655						(MC_BASE + 0x0a3c), MC_ACCESS, 32  /* Offset: 0x0a3c */
#define DENALI_CTL_655_AXI14_START_ADDR_4			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_656
//****************************************************************************************************************
#define DENALI_CTL_656						(MC_BASE + 0x0a40), MC_ACCESS, 32  /* Offset: 0x0a40 */
#define DENALI_CTL_656_AXI14_END_ADDR_4				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_657
//****************************************************************************************************************
#define DENALI_CTL_657						(MC_BASE + 0x0a44), MC_ACCESS, 32  /* Offset: 0x0a44 */
#define DENALI_CTL_657_AXI14_START_ADDR_5			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_658
//****************************************************************************************************************
#define DENALI_CTL_658						(MC_BASE + 0x0a48), MC_ACCESS, 32  /* Offset: 0x0a48 */
#define DENALI_CTL_658_AXI14_END_ADDR_5				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_659
//****************************************************************************************************************
#define DENALI_CTL_659						(MC_BASE + 0x0a4c), MC_ACCESS, 32  /* Offset: 0x0a4c */
#define DENALI_CTL_659_AXI14_START_ADDR_6			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_660
//****************************************************************************************************************
#define DENALI_CTL_660						(MC_BASE + 0x0a50), MC_ACCESS, 32  /* Offset: 0x0a50 */
#define DENALI_CTL_660_AXI14_END_ADDR_6				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_661
//****************************************************************************************************************
#define DENALI_CTL_661						(MC_BASE + 0x0a54), MC_ACCESS, 32  /* Offset: 0x0a54 */
#define DENALI_CTL_661_AXI14_START_ADDR_7			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_662
//****************************************************************************************************************
#define DENALI_CTL_662						(MC_BASE + 0x0a58), MC_ACCESS, 32  /* Offset: 0x0a58 */
#define DENALI_CTL_662_AXI14_END_ADDR_7				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_663
//****************************************************************************************************************
#define DENALI_CTL_663						(MC_BASE + 0x0a5c), MC_ACCESS, 32  /* Offset: 0x0a5c */
#define DENALI_CTL_663_AXI14_START_ADDR_8			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_664
//****************************************************************************************************************
#define DENALI_CTL_664						(MC_BASE + 0x0a60), MC_ACCESS, 32  /* Offset: 0x0a60 */
#define DENALI_CTL_664_AXI14_END_ADDR_8				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_665
//****************************************************************************************************************
#define DENALI_CTL_665						(MC_BASE + 0x0a64), MC_ACCESS, 32  /* Offset: 0x0a64 */
#define DENALI_CTL_665_AXI14_START_ADDR_9			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_666
//****************************************************************************************************************
#define DENALI_CTL_666						(MC_BASE + 0x0a68), MC_ACCESS, 32  /* Offset: 0x0a68 */
#define DENALI_CTL_666_AXI14_END_ADDR_9				 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_667
//****************************************************************************************************************
#define DENALI_CTL_667						(MC_BASE + 0x0a6c), MC_ACCESS, 32  /* Offset: 0x0a6c */
#define DENALI_CTL_667_AXI14_START_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_668
//****************************************************************************************************************
#define DENALI_CTL_668						(MC_BASE + 0x0a70), MC_ACCESS, 32  /* Offset: 0x0a70 */
#define DENALI_CTL_668_AXI14_END_ADDR_10			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_669
//****************************************************************************************************************
#define DENALI_CTL_669						(MC_BASE + 0x0a74), MC_ACCESS, 32  /* Offset: 0x0a74 */
#define DENALI_CTL_669_AXI14_START_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_670
//****************************************************************************************************************
#define DENALI_CTL_670						(MC_BASE + 0x0a78), MC_ACCESS, 32  /* Offset: 0x0a78 */
#define DENALI_CTL_670_AXI14_END_ADDR_11			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_671
//****************************************************************************************************************
#define DENALI_CTL_671						(MC_BASE + 0x0a7c), MC_ACCESS, 32  /* Offset: 0x0a7c */
#define DENALI_CTL_671_AXI14_START_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_672
//****************************************************************************************************************
#define DENALI_CTL_672						(MC_BASE + 0x0a80), MC_ACCESS, 32  /* Offset: 0x0a80 */
#define DENALI_CTL_672_AXI14_END_ADDR_12			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_673
//****************************************************************************************************************
#define DENALI_CTL_673						(MC_BASE + 0x0a84), MC_ACCESS, 32  /* Offset: 0x0a84 */
#define DENALI_CTL_673_AXI14_START_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_674
//****************************************************************************************************************
#define DENALI_CTL_674						(MC_BASE + 0x0a88), MC_ACCESS, 32  /* Offset: 0x0a88 */
#define DENALI_CTL_674_AXI14_END_ADDR_13			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_675
//****************************************************************************************************************
#define DENALI_CTL_675						(MC_BASE + 0x0a8c), MC_ACCESS, 32  /* Offset: 0x0a8c */
#define DENALI_CTL_675_AXI14_START_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_676
//****************************************************************************************************************
#define DENALI_CTL_676						(MC_BASE + 0x0a90), MC_ACCESS, 32  /* Offset: 0x0a90 */
#define DENALI_CTL_676_AXI14_END_ADDR_14			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_677
//****************************************************************************************************************
#define DENALI_CTL_677						(MC_BASE + 0x0a94), MC_ACCESS, 32  /* Offset: 0x0a94 */
#define DENALI_CTL_677_AXI14_START_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: Start address of port 14 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_678
//****************************************************************************************************************
#define DENALI_CTL_678						(MC_BASE + 0x0a98), MC_ACCESS, 32  /* Offset: 0x0a98 */
#define DENALI_CTL_678_AXI14_END_ADDR_15			 0 , 20  /* Type: RW ; Reset: 0x0 ; Desc: End address of port 14 address range 15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_678_AXI0_RANGE_PROT_BITS_0			24 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_679
//****************************************************************************************************************
#define DENALI_CTL_679						(MC_BASE + 0x0a9c), MC_ACCESS, 32  /* Offset: 0x0a9c */
#define DENALI_CTL_679_AXI0_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_679_AXI0_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_680
//****************************************************************************************************************
#define DENALI_CTL_680						(MC_BASE + 0x0aa0), MC_ACCESS, 32  /* Offset: 0x0aa0 */
#define DENALI_CTL_680_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_680_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_681
//****************************************************************************************************************
#define DENALI_CTL_681						(MC_BASE + 0x0aa4), MC_ACCESS, 32  /* Offset: 0x0aa4 */
#define DENALI_CTL_681_AXI0_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_681_AXI0_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_682
//****************************************************************************************************************
#define DENALI_CTL_682						(MC_BASE + 0x0aa8), MC_ACCESS, 32  /* Offset: 0x0aa8 */
#define DENALI_CTL_682_AXI0_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_682_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_683
//****************************************************************************************************************
#define DENALI_CTL_683						(MC_BASE + 0x0aac), MC_ACCESS, 32  /* Offset: 0x0aac */
#define DENALI_CTL_683_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_683_AXI0_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_684
//****************************************************************************************************************
#define DENALI_CTL_684						(MC_BASE + 0x0ab0), MC_ACCESS, 32  /* Offset: 0x0ab0 */
#define DENALI_CTL_684_AXI0_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_684_AXI0_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_685
//****************************************************************************************************************
#define DENALI_CTL_685						(MC_BASE + 0x0ab4), MC_ACCESS, 32  /* Offset: 0x0ab4 */
#define DENALI_CTL_685_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_685_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_686
//****************************************************************************************************************
#define DENALI_CTL_686						(MC_BASE + 0x0ab8), MC_ACCESS, 32  /* Offset: 0x0ab8 */
#define DENALI_CTL_686_AXI0_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_686_AXI0_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_687
//****************************************************************************************************************
#define DENALI_CTL_687						(MC_BASE + 0x0abc), MC_ACCESS, 32  /* Offset: 0x0abc */
#define DENALI_CTL_687_AXI0_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_687_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_688
//****************************************************************************************************************
#define DENALI_CTL_688						(MC_BASE + 0x0ac0), MC_ACCESS, 32  /* Offset: 0x0ac0 */
#define DENALI_CTL_688_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_688_AXI0_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_689
//****************************************************************************************************************
#define DENALI_CTL_689						(MC_BASE + 0x0ac4), MC_ACCESS, 32  /* Offset: 0x0ac4 */
#define DENALI_CTL_689_AXI0_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_689_AXI0_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_690
//****************************************************************************************************************
#define DENALI_CTL_690						(MC_BASE + 0x0ac8), MC_ACCESS, 32  /* Offset: 0x0ac8 */
#define DENALI_CTL_690_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_690_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_691
//****************************************************************************************************************
#define DENALI_CTL_691						(MC_BASE + 0x0acc), MC_ACCESS, 32  /* Offset: 0x0acc */
#define DENALI_CTL_691_AXI0_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_691_AXI0_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_692
//****************************************************************************************************************
#define DENALI_CTL_692						(MC_BASE + 0x0ad0), MC_ACCESS, 32  /* Offset: 0x0ad0 */
#define DENALI_CTL_692_AXI0_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_692_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_693
//****************************************************************************************************************
#define DENALI_CTL_693						(MC_BASE + 0x0ad4), MC_ACCESS, 32  /* Offset: 0x0ad4 */
#define DENALI_CTL_693_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_693_AXI0_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_694
//****************************************************************************************************************
#define DENALI_CTL_694						(MC_BASE + 0x0ad8), MC_ACCESS, 32  /* Offset: 0x0ad8 */
#define DENALI_CTL_694_AXI0_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_694_AXI0_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_695
//****************************************************************************************************************
#define DENALI_CTL_695						(MC_BASE + 0x0adc), MC_ACCESS, 32  /* Offset: 0x0adc */
#define DENALI_CTL_695_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_695_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_696
//****************************************************************************************************************
#define DENALI_CTL_696						(MC_BASE + 0x0ae0), MC_ACCESS, 32  /* Offset: 0x0ae0 */
#define DENALI_CTL_696_AXI0_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_696_AXI0_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_697
//****************************************************************************************************************
#define DENALI_CTL_697						(MC_BASE + 0x0ae4), MC_ACCESS, 32  /* Offset: 0x0ae4 */
#define DENALI_CTL_697_AXI0_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_697_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_698
//****************************************************************************************************************
#define DENALI_CTL_698						(MC_BASE + 0x0ae8), MC_ACCESS, 32  /* Offset: 0x0ae8 */
#define DENALI_CTL_698_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_698_AXI0_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_699
//****************************************************************************************************************
#define DENALI_CTL_699						(MC_BASE + 0x0aec), MC_ACCESS, 32  /* Offset: 0x0aec */
#define DENALI_CTL_699_AXI0_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_699_AXI0_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_700
//****************************************************************************************************************
#define DENALI_CTL_700						(MC_BASE + 0x0af0), MC_ACCESS, 32  /* Offset: 0x0af0 */
#define DENALI_CTL_700_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_700_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_701
//****************************************************************************************************************
#define DENALI_CTL_701						(MC_BASE + 0x0af4), MC_ACCESS, 32  /* Offset: 0x0af4 */
#define DENALI_CTL_701_AXI0_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_701_AXI0_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_702
//****************************************************************************************************************
#define DENALI_CTL_702						(MC_BASE + 0x0af8), MC_ACCESS, 32  /* Offset: 0x0af8 */
#define DENALI_CTL_702_AXI0_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_702_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_703
//****************************************************************************************************************
#define DENALI_CTL_703						(MC_BASE + 0x0afc), MC_ACCESS, 32  /* Offset: 0x0afc */
#define DENALI_CTL_703_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_703_AXI0_RANGE_PROT_BITS_10			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_704
//****************************************************************************************************************
#define DENALI_CTL_704						(MC_BASE + 0x0b00), MC_ACCESS, 32  /* Offset: 0x0b00 */
#define DENALI_CTL_704_AXI0_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_704_AXI0_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_705
//****************************************************************************************************************
#define DENALI_CTL_705						(MC_BASE + 0x0b04), MC_ACCESS, 32  /* Offset: 0x0b04 */
#define DENALI_CTL_705_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_705_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_706
//****************************************************************************************************************
#define DENALI_CTL_706						(MC_BASE + 0x0b08), MC_ACCESS, 32  /* Offset: 0x0b08 */
#define DENALI_CTL_706_AXI0_RANGE_PROT_BITS_11			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_706_AXI0_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_707
//****************************************************************************************************************
#define DENALI_CTL_707						(MC_BASE + 0x0b0c), MC_ACCESS, 32  /* Offset: 0x0b0c */
#define DENALI_CTL_707_AXI0_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_707_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_708
//****************************************************************************************************************
#define DENALI_CTL_708						(MC_BASE + 0x0b10), MC_ACCESS, 32  /* Offset: 0x0b10 */
#define DENALI_CTL_708_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_708_AXI0_RANGE_PROT_BITS_12			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_709
//****************************************************************************************************************
#define DENALI_CTL_709						(MC_BASE + 0x0b14), MC_ACCESS, 32  /* Offset: 0x0b14 */
#define DENALI_CTL_709_AXI0_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_709_AXI0_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_710
//****************************************************************************************************************
#define DENALI_CTL_710						(MC_BASE + 0x0b18), MC_ACCESS, 32  /* Offset: 0x0b18 */
#define DENALI_CTL_710_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_710_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_711
//****************************************************************************************************************
#define DENALI_CTL_711						(MC_BASE + 0x0b1c), MC_ACCESS, 32  /* Offset: 0x0b1c */
#define DENALI_CTL_711_AXI0_RANGE_PROT_BITS_13			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_711_AXI0_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_712
//****************************************************************************************************************
#define DENALI_CTL_712						(MC_BASE + 0x0b20), MC_ACCESS, 32  /* Offset: 0x0b20 */
#define DENALI_CTL_712_AXI0_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_712_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_713
//****************************************************************************************************************
#define DENALI_CTL_713						(MC_BASE + 0x0b24), MC_ACCESS, 32  /* Offset: 0x0b24 */
#define DENALI_CTL_713_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_713_AXI0_RANGE_PROT_BITS_14			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_714
//****************************************************************************************************************
#define DENALI_CTL_714						(MC_BASE + 0x0b28), MC_ACCESS, 32  /* Offset: 0x0b28 */
#define DENALI_CTL_714_AXI0_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_714_AXI0_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_715
//****************************************************************************************************************
#define DENALI_CTL_715						(MC_BASE + 0x0b2c), MC_ACCESS, 32  /* Offset: 0x0b2c */
#define DENALI_CTL_715_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_715_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_716
//****************************************************************************************************************
#define DENALI_CTL_716						(MC_BASE + 0x0b30), MC_ACCESS, 32  /* Offset: 0x0b30 */
#define DENALI_CTL_716_AXI0_RANGE_PROT_BITS_15			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 0 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_716_AXI0_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 0 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_717
//****************************************************************************************************************
#define DENALI_CTL_717						(MC_BASE + 0x0b34), MC_ACCESS, 32  /* Offset: 0x0b34 */
#define DENALI_CTL_717_AXI0_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 0 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_717_AXI0_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_718
//****************************************************************************************************************
#define DENALI_CTL_718						(MC_BASE + 0x0b38), MC_ACCESS, 32  /* Offset: 0x0b38 */
#define DENALI_CTL_718_AXI0_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.0._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_718_AXI1_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_719
//****************************************************************************************************************
#define DENALI_CTL_719						(MC_BASE + 0x0b3c), MC_ACCESS, 32  /* Offset: 0x0b3c */
#define DENALI_CTL_719_AXI1_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_719_AXI1_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_720
//****************************************************************************************************************
#define DENALI_CTL_720						(MC_BASE + 0x0b40), MC_ACCESS, 32  /* Offset: 0x0b40 */
#define DENALI_CTL_720_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_720_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_721
//****************************************************************************************************************
#define DENALI_CTL_721						(MC_BASE + 0x0b44), MC_ACCESS, 32  /* Offset: 0x0b44 */
#define DENALI_CTL_721_AXI1_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_721_AXI1_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_722
//****************************************************************************************************************
#define DENALI_CTL_722						(MC_BASE + 0x0b48), MC_ACCESS, 32  /* Offset: 0x0b48 */
#define DENALI_CTL_722_AXI1_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_722_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_723
//****************************************************************************************************************
#define DENALI_CTL_723						(MC_BASE + 0x0b4c), MC_ACCESS, 32  /* Offset: 0x0b4c */
#define DENALI_CTL_723_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_723_AXI1_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_724
//****************************************************************************************************************
#define DENALI_CTL_724						(MC_BASE + 0x0b50), MC_ACCESS, 32  /* Offset: 0x0b50 */
#define DENALI_CTL_724_AXI1_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_724_AXI1_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_725
//****************************************************************************************************************
#define DENALI_CTL_725						(MC_BASE + 0x0b54), MC_ACCESS, 32  /* Offset: 0x0b54 */
#define DENALI_CTL_725_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_725_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_726
//****************************************************************************************************************
#define DENALI_CTL_726						(MC_BASE + 0x0b58), MC_ACCESS, 32  /* Offset: 0x0b58 */
#define DENALI_CTL_726_AXI1_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_726_AXI1_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_727
//****************************************************************************************************************
#define DENALI_CTL_727						(MC_BASE + 0x0b5c), MC_ACCESS, 32  /* Offset: 0x0b5c */
#define DENALI_CTL_727_AXI1_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_727_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_728
//****************************************************************************************************************
#define DENALI_CTL_728						(MC_BASE + 0x0b60), MC_ACCESS, 32  /* Offset: 0x0b60 */
#define DENALI_CTL_728_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_728_AXI1_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_729
//****************************************************************************************************************
#define DENALI_CTL_729						(MC_BASE + 0x0b64), MC_ACCESS, 32  /* Offset: 0x0b64 */
#define DENALI_CTL_729_AXI1_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_729_AXI1_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_730
//****************************************************************************************************************
#define DENALI_CTL_730						(MC_BASE + 0x0b68), MC_ACCESS, 32  /* Offset: 0x0b68 */
#define DENALI_CTL_730_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_730_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_731
//****************************************************************************************************************
#define DENALI_CTL_731						(MC_BASE + 0x0b6c), MC_ACCESS, 32  /* Offset: 0x0b6c */
#define DENALI_CTL_731_AXI1_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_731_AXI1_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_732
//****************************************************************************************************************
#define DENALI_CTL_732						(MC_BASE + 0x0b70), MC_ACCESS, 32  /* Offset: 0x0b70 */
#define DENALI_CTL_732_AXI1_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_732_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_733
//****************************************************************************************************************
#define DENALI_CTL_733						(MC_BASE + 0x0b74), MC_ACCESS, 32  /* Offset: 0x0b74 */
#define DENALI_CTL_733_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_733_AXI1_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_734
//****************************************************************************************************************
#define DENALI_CTL_734						(MC_BASE + 0x0b78), MC_ACCESS, 32  /* Offset: 0x0b78 */
#define DENALI_CTL_734_AXI1_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_734_AXI1_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_735
//****************************************************************************************************************
#define DENALI_CTL_735						(MC_BASE + 0x0b7c), MC_ACCESS, 32  /* Offset: 0x0b7c */
#define DENALI_CTL_735_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_735_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_736
//****************************************************************************************************************
#define DENALI_CTL_736						(MC_BASE + 0x0b80), MC_ACCESS, 32  /* Offset: 0x0b80 */
#define DENALI_CTL_736_AXI1_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_736_AXI1_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_737
//****************************************************************************************************************
#define DENALI_CTL_737						(MC_BASE + 0x0b84), MC_ACCESS, 32  /* Offset: 0x0b84 */
#define DENALI_CTL_737_AXI1_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_737_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_738
//****************************************************************************************************************
#define DENALI_CTL_738						(MC_BASE + 0x0b88), MC_ACCESS, 32  /* Offset: 0x0b88 */
#define DENALI_CTL_738_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_738_AXI1_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_739
//****************************************************************************************************************
#define DENALI_CTL_739						(MC_BASE + 0x0b8c), MC_ACCESS, 32  /* Offset: 0x0b8c */
#define DENALI_CTL_739_AXI1_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_739_AXI1_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_740
//****************************************************************************************************************
#define DENALI_CTL_740						(MC_BASE + 0x0b90), MC_ACCESS, 32  /* Offset: 0x0b90 */
#define DENALI_CTL_740_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_740_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_741
//****************************************************************************************************************
#define DENALI_CTL_741						(MC_BASE + 0x0b94), MC_ACCESS, 32  /* Offset: 0x0b94 */
#define DENALI_CTL_741_AXI1_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_741_AXI1_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_742
//****************************************************************************************************************
#define DENALI_CTL_742						(MC_BASE + 0x0b98), MC_ACCESS, 32  /* Offset: 0x0b98 */
#define DENALI_CTL_742_AXI1_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_742_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_743
//****************************************************************************************************************
#define DENALI_CTL_743						(MC_BASE + 0x0b9c), MC_ACCESS, 32  /* Offset: 0x0b9c */
#define DENALI_CTL_743_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_743_AXI1_RANGE_PROT_BITS_10			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_744
//****************************************************************************************************************
#define DENALI_CTL_744						(MC_BASE + 0x0ba0), MC_ACCESS, 32  /* Offset: 0x0ba0 */
#define DENALI_CTL_744_AXI1_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_744_AXI1_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_745
//****************************************************************************************************************
#define DENALI_CTL_745						(MC_BASE + 0x0ba4), MC_ACCESS, 32  /* Offset: 0x0ba4 */
#define DENALI_CTL_745_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_745_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_746
//****************************************************************************************************************
#define DENALI_CTL_746						(MC_BASE + 0x0ba8), MC_ACCESS, 32  /* Offset: 0x0ba8 */
#define DENALI_CTL_746_AXI1_RANGE_PROT_BITS_11			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_746_AXI1_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_747
//****************************************************************************************************************
#define DENALI_CTL_747						(MC_BASE + 0x0bac), MC_ACCESS, 32  /* Offset: 0x0bac */
#define DENALI_CTL_747_AXI1_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_747_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_748
//****************************************************************************************************************
#define DENALI_CTL_748						(MC_BASE + 0x0bb0), MC_ACCESS, 32  /* Offset: 0x0bb0 */
#define DENALI_CTL_748_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_748_AXI1_RANGE_PROT_BITS_12			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_749
//****************************************************************************************************************
#define DENALI_CTL_749						(MC_BASE + 0x0bb4), MC_ACCESS, 32  /* Offset: 0x0bb4 */
#define DENALI_CTL_749_AXI1_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_749_AXI1_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_750
//****************************************************************************************************************
#define DENALI_CTL_750						(MC_BASE + 0x0bb8), MC_ACCESS, 32  /* Offset: 0x0bb8 */
#define DENALI_CTL_750_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_750_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_751
//****************************************************************************************************************
#define DENALI_CTL_751						(MC_BASE + 0x0bbc), MC_ACCESS, 32  /* Offset: 0x0bbc */
#define DENALI_CTL_751_AXI1_RANGE_PROT_BITS_13			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_751_AXI1_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_752
//****************************************************************************************************************
#define DENALI_CTL_752						(MC_BASE + 0x0bc0), MC_ACCESS, 32  /* Offset: 0x0bc0 */
#define DENALI_CTL_752_AXI1_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_752_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_753
//****************************************************************************************************************
#define DENALI_CTL_753						(MC_BASE + 0x0bc4), MC_ACCESS, 32  /* Offset: 0x0bc4 */
#define DENALI_CTL_753_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_753_AXI1_RANGE_PROT_BITS_14			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_754
//****************************************************************************************************************
#define DENALI_CTL_754						(MC_BASE + 0x0bc8), MC_ACCESS, 32  /* Offset: 0x0bc8 */
#define DENALI_CTL_754_AXI1_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_754_AXI1_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_755
//****************************************************************************************************************
#define DENALI_CTL_755						(MC_BASE + 0x0bcc), MC_ACCESS, 32  /* Offset: 0x0bcc */
#define DENALI_CTL_755_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_755_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_756
//****************************************************************************************************************
#define DENALI_CTL_756						(MC_BASE + 0x0bd0), MC_ACCESS, 32  /* Offset: 0x0bd0 */
#define DENALI_CTL_756_AXI1_RANGE_PROT_BITS_15			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 1 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_756_AXI1_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 1 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_757
//****************************************************************************************************************
#define DENALI_CTL_757						(MC_BASE + 0x0bd4), MC_ACCESS, 32  /* Offset: 0x0bd4 */
#define DENALI_CTL_757_AXI1_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 1 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_757_AXI1_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_758
//****************************************************************************************************************
#define DENALI_CTL_758						(MC_BASE + 0x0bd8), MC_ACCESS, 32  /* Offset: 0x0bd8 */
#define DENALI_CTL_758_AXI1_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.1._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_758_AXI2_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_759
//****************************************************************************************************************
#define DENALI_CTL_759						(MC_BASE + 0x0bdc), MC_ACCESS, 32  /* Offset: 0x0bdc */
#define DENALI_CTL_759_AXI2_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_759_AXI2_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_760
//****************************************************************************************************************
#define DENALI_CTL_760						(MC_BASE + 0x0be0), MC_ACCESS, 32  /* Offset: 0x0be0 */
#define DENALI_CTL_760_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_760_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_761
//****************************************************************************************************************
#define DENALI_CTL_761						(MC_BASE + 0x0be4), MC_ACCESS, 32  /* Offset: 0x0be4 */
#define DENALI_CTL_761_AXI2_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_761_AXI2_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_762
//****************************************************************************************************************
#define DENALI_CTL_762						(MC_BASE + 0x0be8), MC_ACCESS, 32  /* Offset: 0x0be8 */
#define DENALI_CTL_762_AXI2_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_762_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_763
//****************************************************************************************************************
#define DENALI_CTL_763						(MC_BASE + 0x0bec), MC_ACCESS, 32  /* Offset: 0x0bec */
#define DENALI_CTL_763_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_763_AXI2_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_764
//****************************************************************************************************************
#define DENALI_CTL_764						(MC_BASE + 0x0bf0), MC_ACCESS, 32  /* Offset: 0x0bf0 */
#define DENALI_CTL_764_AXI2_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_764_AXI2_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_765
//****************************************************************************************************************
#define DENALI_CTL_765						(MC_BASE + 0x0bf4), MC_ACCESS, 32  /* Offset: 0x0bf4 */
#define DENALI_CTL_765_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_765_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_766
//****************************************************************************************************************
#define DENALI_CTL_766						(MC_BASE + 0x0bf8), MC_ACCESS, 32  /* Offset: 0x0bf8 */
#define DENALI_CTL_766_AXI2_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_766_AXI2_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_767
//****************************************************************************************************************
#define DENALI_CTL_767						(MC_BASE + 0x0bfc), MC_ACCESS, 32  /* Offset: 0x0bfc */
#define DENALI_CTL_767_AXI2_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_767_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_768
//****************************************************************************************************************
#define DENALI_CTL_768						(MC_BASE + 0x0c00), MC_ACCESS, 32  /* Offset: 0x0c00 */
#define DENALI_CTL_768_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_768_AXI2_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_769
//****************************************************************************************************************
#define DENALI_CTL_769						(MC_BASE + 0x0c04), MC_ACCESS, 32  /* Offset: 0x0c04 */
#define DENALI_CTL_769_AXI2_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_769_AXI2_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_770
//****************************************************************************************************************
#define DENALI_CTL_770						(MC_BASE + 0x0c08), MC_ACCESS, 32  /* Offset: 0x0c08 */
#define DENALI_CTL_770_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_770_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_771
//****************************************************************************************************************
#define DENALI_CTL_771						(MC_BASE + 0x0c0c), MC_ACCESS, 32  /* Offset: 0x0c0c */
#define DENALI_CTL_771_AXI2_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_771_AXI2_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_772
//****************************************************************************************************************
#define DENALI_CTL_772						(MC_BASE + 0x0c10), MC_ACCESS, 32  /* Offset: 0x0c10 */
#define DENALI_CTL_772_AXI2_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_772_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_773
//****************************************************************************************************************
#define DENALI_CTL_773						(MC_BASE + 0x0c14), MC_ACCESS, 32  /* Offset: 0x0c14 */
#define DENALI_CTL_773_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_773_AXI2_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_774
//****************************************************************************************************************
#define DENALI_CTL_774						(MC_BASE + 0x0c18), MC_ACCESS, 32  /* Offset: 0x0c18 */
#define DENALI_CTL_774_AXI2_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_774_AXI2_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_775
//****************************************************************************************************************
#define DENALI_CTL_775						(MC_BASE + 0x0c1c), MC_ACCESS, 32  /* Offset: 0x0c1c */
#define DENALI_CTL_775_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_775_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_776
//****************************************************************************************************************
#define DENALI_CTL_776						(MC_BASE + 0x0c20), MC_ACCESS, 32  /* Offset: 0x0c20 */
#define DENALI_CTL_776_AXI2_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_776_AXI2_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_777
//****************************************************************************************************************
#define DENALI_CTL_777						(MC_BASE + 0x0c24), MC_ACCESS, 32  /* Offset: 0x0c24 */
#define DENALI_CTL_777_AXI2_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_777_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_778
//****************************************************************************************************************
#define DENALI_CTL_778						(MC_BASE + 0x0c28), MC_ACCESS, 32  /* Offset: 0x0c28 */
#define DENALI_CTL_778_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_778_AXI2_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_779
//****************************************************************************************************************
#define DENALI_CTL_779						(MC_BASE + 0x0c2c), MC_ACCESS, 32  /* Offset: 0x0c2c */
#define DENALI_CTL_779_AXI2_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_779_AXI2_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_780
//****************************************************************************************************************
#define DENALI_CTL_780						(MC_BASE + 0x0c30), MC_ACCESS, 32  /* Offset: 0x0c30 */
#define DENALI_CTL_780_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_780_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_781
//****************************************************************************************************************
#define DENALI_CTL_781						(MC_BASE + 0x0c34), MC_ACCESS, 32  /* Offset: 0x0c34 */
#define DENALI_CTL_781_AXI2_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_781_AXI2_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_782
//****************************************************************************************************************
#define DENALI_CTL_782						(MC_BASE + 0x0c38), MC_ACCESS, 32  /* Offset: 0x0c38 */
#define DENALI_CTL_782_AXI2_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_782_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_783
//****************************************************************************************************************
#define DENALI_CTL_783						(MC_BASE + 0x0c3c), MC_ACCESS, 32  /* Offset: 0x0c3c */
#define DENALI_CTL_783_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_783_AXI2_RANGE_PROT_BITS_10			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_784
//****************************************************************************************************************
#define DENALI_CTL_784						(MC_BASE + 0x0c40), MC_ACCESS, 32  /* Offset: 0x0c40 */
#define DENALI_CTL_784_AXI2_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_784_AXI2_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_785
//****************************************************************************************************************
#define DENALI_CTL_785						(MC_BASE + 0x0c44), MC_ACCESS, 32  /* Offset: 0x0c44 */
#define DENALI_CTL_785_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_785_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_786
//****************************************************************************************************************
#define DENALI_CTL_786						(MC_BASE + 0x0c48), MC_ACCESS, 32  /* Offset: 0x0c48 */
#define DENALI_CTL_786_AXI2_RANGE_PROT_BITS_11			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_786_AXI2_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_787
//****************************************************************************************************************
#define DENALI_CTL_787						(MC_BASE + 0x0c4c), MC_ACCESS, 32  /* Offset: 0x0c4c */
#define DENALI_CTL_787_AXI2_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_787_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_788
//****************************************************************************************************************
#define DENALI_CTL_788						(MC_BASE + 0x0c50), MC_ACCESS, 32  /* Offset: 0x0c50 */
#define DENALI_CTL_788_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_788_AXI2_RANGE_PROT_BITS_12			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_789
//****************************************************************************************************************
#define DENALI_CTL_789						(MC_BASE + 0x0c54), MC_ACCESS, 32  /* Offset: 0x0c54 */
#define DENALI_CTL_789_AXI2_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_789_AXI2_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_790
//****************************************************************************************************************
#define DENALI_CTL_790						(MC_BASE + 0x0c58), MC_ACCESS, 32  /* Offset: 0x0c58 */
#define DENALI_CTL_790_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_790_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_791
//****************************************************************************************************************
#define DENALI_CTL_791						(MC_BASE + 0x0c5c), MC_ACCESS, 32  /* Offset: 0x0c5c */
#define DENALI_CTL_791_AXI2_RANGE_PROT_BITS_13			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_791_AXI2_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_792
//****************************************************************************************************************
#define DENALI_CTL_792						(MC_BASE + 0x0c60), MC_ACCESS, 32  /* Offset: 0x0c60 */
#define DENALI_CTL_792_AXI2_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_792_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_793
//****************************************************************************************************************
#define DENALI_CTL_793						(MC_BASE + 0x0c64), MC_ACCESS, 32  /* Offset: 0x0c64 */
#define DENALI_CTL_793_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_793_AXI2_RANGE_PROT_BITS_14			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_794
//****************************************************************************************************************
#define DENALI_CTL_794						(MC_BASE + 0x0c68), MC_ACCESS, 32  /* Offset: 0x0c68 */
#define DENALI_CTL_794_AXI2_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_794_AXI2_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_795
//****************************************************************************************************************
#define DENALI_CTL_795						(MC_BASE + 0x0c6c), MC_ACCESS, 32  /* Offset: 0x0c6c */
#define DENALI_CTL_795_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_795_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_796
//****************************************************************************************************************
#define DENALI_CTL_796						(MC_BASE + 0x0c70), MC_ACCESS, 32  /* Offset: 0x0c70 */
#define DENALI_CTL_796_AXI2_RANGE_PROT_BITS_15			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 2 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_796_AXI2_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 2 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_797
//****************************************************************************************************************
#define DENALI_CTL_797						(MC_BASE + 0x0c74), MC_ACCESS, 32  /* Offset: 0x0c74 */
#define DENALI_CTL_797_AXI2_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 2 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_797_AXI2_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_798
//****************************************************************************************************************
#define DENALI_CTL_798						(MC_BASE + 0x0c78), MC_ACCESS, 32  /* Offset: 0x0c78 */
#define DENALI_CTL_798_AXI2_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.2._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_798_AXI3_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_799
//****************************************************************************************************************
#define DENALI_CTL_799						(MC_BASE + 0x0c7c), MC_ACCESS, 32  /* Offset: 0x0c7c */
#define DENALI_CTL_799_AXI3_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_799_AXI3_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_800
//****************************************************************************************************************
#define DENALI_CTL_800						(MC_BASE + 0x0c80), MC_ACCESS, 32  /* Offset: 0x0c80 */
#define DENALI_CTL_800_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_800_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_801
//****************************************************************************************************************
#define DENALI_CTL_801						(MC_BASE + 0x0c84), MC_ACCESS, 32  /* Offset: 0x0c84 */
#define DENALI_CTL_801_AXI3_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_801_AXI3_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_802
//****************************************************************************************************************
#define DENALI_CTL_802						(MC_BASE + 0x0c88), MC_ACCESS, 32  /* Offset: 0x0c88 */
#define DENALI_CTL_802_AXI3_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_802_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_803
//****************************************************************************************************************
#define DENALI_CTL_803						(MC_BASE + 0x0c8c), MC_ACCESS, 32  /* Offset: 0x0c8c */
#define DENALI_CTL_803_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_803_AXI3_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_804
//****************************************************************************************************************
#define DENALI_CTL_804						(MC_BASE + 0x0c90), MC_ACCESS, 32  /* Offset: 0x0c90 */
#define DENALI_CTL_804_AXI3_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_804_AXI3_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_805
//****************************************************************************************************************
#define DENALI_CTL_805						(MC_BASE + 0x0c94), MC_ACCESS, 32  /* Offset: 0x0c94 */
#define DENALI_CTL_805_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_805_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_806
//****************************************************************************************************************
#define DENALI_CTL_806						(MC_BASE + 0x0c98), MC_ACCESS, 32  /* Offset: 0x0c98 */
#define DENALI_CTL_806_AXI3_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_806_AXI3_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_807
//****************************************************************************************************************
#define DENALI_CTL_807						(MC_BASE + 0x0c9c), MC_ACCESS, 32  /* Offset: 0x0c9c */
#define DENALI_CTL_807_AXI3_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_807_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_808
//****************************************************************************************************************
#define DENALI_CTL_808						(MC_BASE + 0x0ca0), MC_ACCESS, 32  /* Offset: 0x0ca0 */
#define DENALI_CTL_808_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_808_AXI3_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_809
//****************************************************************************************************************
#define DENALI_CTL_809						(MC_BASE + 0x0ca4), MC_ACCESS, 32  /* Offset: 0x0ca4 */
#define DENALI_CTL_809_AXI3_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_809_AXI3_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_810
//****************************************************************************************************************
#define DENALI_CTL_810						(MC_BASE + 0x0ca8), MC_ACCESS, 32  /* Offset: 0x0ca8 */
#define DENALI_CTL_810_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_810_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_811
//****************************************************************************************************************
#define DENALI_CTL_811						(MC_BASE + 0x0cac), MC_ACCESS, 32  /* Offset: 0x0cac */
#define DENALI_CTL_811_AXI3_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_811_AXI3_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_812
//****************************************************************************************************************
#define DENALI_CTL_812						(MC_BASE + 0x0cb0), MC_ACCESS, 32  /* Offset: 0x0cb0 */
#define DENALI_CTL_812_AXI3_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_812_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_813
//****************************************************************************************************************
#define DENALI_CTL_813						(MC_BASE + 0x0cb4), MC_ACCESS, 32  /* Offset: 0x0cb4 */
#define DENALI_CTL_813_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_813_AXI3_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_814
//****************************************************************************************************************
#define DENALI_CTL_814						(MC_BASE + 0x0cb8), MC_ACCESS, 32  /* Offset: 0x0cb8 */
#define DENALI_CTL_814_AXI3_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_814_AXI3_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_815
//****************************************************************************************************************
#define DENALI_CTL_815						(MC_BASE + 0x0cbc), MC_ACCESS, 32  /* Offset: 0x0cbc */
#define DENALI_CTL_815_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_815_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_816
//****************************************************************************************************************
#define DENALI_CTL_816						(MC_BASE + 0x0cc0), MC_ACCESS, 32  /* Offset: 0x0cc0 */
#define DENALI_CTL_816_AXI3_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_816_AXI3_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_817
//****************************************************************************************************************
#define DENALI_CTL_817						(MC_BASE + 0x0cc4), MC_ACCESS, 32  /* Offset: 0x0cc4 */
#define DENALI_CTL_817_AXI3_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_817_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_818
//****************************************************************************************************************
#define DENALI_CTL_818						(MC_BASE + 0x0cc8), MC_ACCESS, 32  /* Offset: 0x0cc8 */
#define DENALI_CTL_818_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_818_AXI3_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_819
//****************************************************************************************************************
#define DENALI_CTL_819						(MC_BASE + 0x0ccc), MC_ACCESS, 32  /* Offset: 0x0ccc */
#define DENALI_CTL_819_AXI3_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_819_AXI3_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_820
//****************************************************************************************************************
#define DENALI_CTL_820						(MC_BASE + 0x0cd0), MC_ACCESS, 32  /* Offset: 0x0cd0 */
#define DENALI_CTL_820_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_820_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_821
//****************************************************************************************************************
#define DENALI_CTL_821						(MC_BASE + 0x0cd4), MC_ACCESS, 32  /* Offset: 0x0cd4 */
#define DENALI_CTL_821_AXI3_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_821_AXI3_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_822
//****************************************************************************************************************
#define DENALI_CTL_822						(MC_BASE + 0x0cd8), MC_ACCESS, 32  /* Offset: 0x0cd8 */
#define DENALI_CTL_822_AXI3_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_822_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_823
//****************************************************************************************************************
#define DENALI_CTL_823						(MC_BASE + 0x0cdc), MC_ACCESS, 32  /* Offset: 0x0cdc */
#define DENALI_CTL_823_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_823_AXI3_RANGE_PROT_BITS_10			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_824
//****************************************************************************************************************
#define DENALI_CTL_824						(MC_BASE + 0x0ce0), MC_ACCESS, 32  /* Offset: 0x0ce0 */
#define DENALI_CTL_824_AXI3_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_824_AXI3_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_825
//****************************************************************************************************************
#define DENALI_CTL_825						(MC_BASE + 0x0ce4), MC_ACCESS, 32  /* Offset: 0x0ce4 */
#define DENALI_CTL_825_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_825_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_826
//****************************************************************************************************************
#define DENALI_CTL_826						(MC_BASE + 0x0ce8), MC_ACCESS, 32  /* Offset: 0x0ce8 */
#define DENALI_CTL_826_AXI3_RANGE_PROT_BITS_11			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_826_AXI3_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_827
//****************************************************************************************************************
#define DENALI_CTL_827						(MC_BASE + 0x0cec), MC_ACCESS, 32  /* Offset: 0x0cec */
#define DENALI_CTL_827_AXI3_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_827_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_828
//****************************************************************************************************************
#define DENALI_CTL_828						(MC_BASE + 0x0cf0), MC_ACCESS, 32  /* Offset: 0x0cf0 */
#define DENALI_CTL_828_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_828_AXI3_RANGE_PROT_BITS_12			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_829
//****************************************************************************************************************
#define DENALI_CTL_829						(MC_BASE + 0x0cf4), MC_ACCESS, 32  /* Offset: 0x0cf4 */
#define DENALI_CTL_829_AXI3_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_829_AXI3_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_830
//****************************************************************************************************************
#define DENALI_CTL_830						(MC_BASE + 0x0cf8), MC_ACCESS, 32  /* Offset: 0x0cf8 */
#define DENALI_CTL_830_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_830_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_831
//****************************************************************************************************************
#define DENALI_CTL_831						(MC_BASE + 0x0cfc), MC_ACCESS, 32  /* Offset: 0x0cfc */
#define DENALI_CTL_831_AXI3_RANGE_PROT_BITS_13			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_831_AXI3_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_832
//****************************************************************************************************************
#define DENALI_CTL_832						(MC_BASE + 0x0d00), MC_ACCESS, 32  /* Offset: 0x0d00 */
#define DENALI_CTL_832_AXI3_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_832_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_833
//****************************************************************************************************************
#define DENALI_CTL_833						(MC_BASE + 0x0d04), MC_ACCESS, 32  /* Offset: 0x0d04 */
#define DENALI_CTL_833_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_833_AXI3_RANGE_PROT_BITS_14			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_834
//****************************************************************************************************************
#define DENALI_CTL_834						(MC_BASE + 0x0d08), MC_ACCESS, 32  /* Offset: 0x0d08 */
#define DENALI_CTL_834_AXI3_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_834_AXI3_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_835
//****************************************************************************************************************
#define DENALI_CTL_835						(MC_BASE + 0x0d0c), MC_ACCESS, 32  /* Offset: 0x0d0c */
#define DENALI_CTL_835_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_835_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_836
//****************************************************************************************************************
#define DENALI_CTL_836						(MC_BASE + 0x0d10), MC_ACCESS, 32  /* Offset: 0x0d10 */
#define DENALI_CTL_836_AXI3_RANGE_PROT_BITS_15			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 3 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_836_AXI3_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 3 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_837
//****************************************************************************************************************
#define DENALI_CTL_837						(MC_BASE + 0x0d14), MC_ACCESS, 32  /* Offset: 0x0d14 */
#define DENALI_CTL_837_AXI3_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 3 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_837_AXI3_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_838
//****************************************************************************************************************
#define DENALI_CTL_838						(MC_BASE + 0x0d18), MC_ACCESS, 32  /* Offset: 0x0d18 */
#define DENALI_CTL_838_AXI3_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.3._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_838_AXI4_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_839
//****************************************************************************************************************
#define DENALI_CTL_839						(MC_BASE + 0x0d1c), MC_ACCESS, 32  /* Offset: 0x0d1c */
#define DENALI_CTL_839_AXI4_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_839_AXI4_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_840
//****************************************************************************************************************
#define DENALI_CTL_840						(MC_BASE + 0x0d20), MC_ACCESS, 32  /* Offset: 0x0d20 */
#define DENALI_CTL_840_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_840_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_841
//****************************************************************************************************************
#define DENALI_CTL_841						(MC_BASE + 0x0d24), MC_ACCESS, 32  /* Offset: 0x0d24 */
#define DENALI_CTL_841_AXI4_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_841_AXI4_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_842
//****************************************************************************************************************
#define DENALI_CTL_842						(MC_BASE + 0x0d28), MC_ACCESS, 32  /* Offset: 0x0d28 */
#define DENALI_CTL_842_AXI4_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_842_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_843
//****************************************************************************************************************
#define DENALI_CTL_843						(MC_BASE + 0x0d2c), MC_ACCESS, 32  /* Offset: 0x0d2c */
#define DENALI_CTL_843_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_843_AXI4_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_844
//****************************************************************************************************************
#define DENALI_CTL_844						(MC_BASE + 0x0d30), MC_ACCESS, 32  /* Offset: 0x0d30 */
#define DENALI_CTL_844_AXI4_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_844_AXI4_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_845
//****************************************************************************************************************
#define DENALI_CTL_845						(MC_BASE + 0x0d34), MC_ACCESS, 32  /* Offset: 0x0d34 */
#define DENALI_CTL_845_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_845_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_846
//****************************************************************************************************************
#define DENALI_CTL_846						(MC_BASE + 0x0d38), MC_ACCESS, 32  /* Offset: 0x0d38 */
#define DENALI_CTL_846_AXI4_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_846_AXI4_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_847
//****************************************************************************************************************
#define DENALI_CTL_847						(MC_BASE + 0x0d3c), MC_ACCESS, 32  /* Offset: 0x0d3c */
#define DENALI_CTL_847_AXI4_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_847_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_848
//****************************************************************************************************************
#define DENALI_CTL_848						(MC_BASE + 0x0d40), MC_ACCESS, 32  /* Offset: 0x0d40 */
#define DENALI_CTL_848_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_848_AXI4_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_849
//****************************************************************************************************************
#define DENALI_CTL_849						(MC_BASE + 0x0d44), MC_ACCESS, 32  /* Offset: 0x0d44 */
#define DENALI_CTL_849_AXI4_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_849_AXI4_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_850
//****************************************************************************************************************
#define DENALI_CTL_850						(MC_BASE + 0x0d48), MC_ACCESS, 32  /* Offset: 0x0d48 */
#define DENALI_CTL_850_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_850_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_851
//****************************************************************************************************************
#define DENALI_CTL_851						(MC_BASE + 0x0d4c), MC_ACCESS, 32  /* Offset: 0x0d4c */
#define DENALI_CTL_851_AXI4_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_851_AXI4_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_852
//****************************************************************************************************************
#define DENALI_CTL_852						(MC_BASE + 0x0d50), MC_ACCESS, 32  /* Offset: 0x0d50 */
#define DENALI_CTL_852_AXI4_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_852_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_853
//****************************************************************************************************************
#define DENALI_CTL_853						(MC_BASE + 0x0d54), MC_ACCESS, 32  /* Offset: 0x0d54 */
#define DENALI_CTL_853_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_853_AXI4_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_854
//****************************************************************************************************************
#define DENALI_CTL_854						(MC_BASE + 0x0d58), MC_ACCESS, 32  /* Offset: 0x0d58 */
#define DENALI_CTL_854_AXI4_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_854_AXI4_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_855
//****************************************************************************************************************
#define DENALI_CTL_855						(MC_BASE + 0x0d5c), MC_ACCESS, 32  /* Offset: 0x0d5c */
#define DENALI_CTL_855_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_855_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_856
//****************************************************************************************************************
#define DENALI_CTL_856						(MC_BASE + 0x0d60), MC_ACCESS, 32  /* Offset: 0x0d60 */
#define DENALI_CTL_856_AXI4_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_856_AXI4_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_857
//****************************************************************************************************************
#define DENALI_CTL_857						(MC_BASE + 0x0d64), MC_ACCESS, 32  /* Offset: 0x0d64 */
#define DENALI_CTL_857_AXI4_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_857_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_858
//****************************************************************************************************************
#define DENALI_CTL_858						(MC_BASE + 0x0d68), MC_ACCESS, 32  /* Offset: 0x0d68 */
#define DENALI_CTL_858_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_858_AXI4_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_859
//****************************************************************************************************************
#define DENALI_CTL_859						(MC_BASE + 0x0d6c), MC_ACCESS, 32  /* Offset: 0x0d6c */
#define DENALI_CTL_859_AXI4_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_859_AXI4_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_860
//****************************************************************************************************************
#define DENALI_CTL_860						(MC_BASE + 0x0d70), MC_ACCESS, 32  /* Offset: 0x0d70 */
#define DENALI_CTL_860_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_860_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_861
//****************************************************************************************************************
#define DENALI_CTL_861						(MC_BASE + 0x0d74), MC_ACCESS, 32  /* Offset: 0x0d74 */
#define DENALI_CTL_861_AXI4_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_861_AXI4_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_862
//****************************************************************************************************************
#define DENALI_CTL_862						(MC_BASE + 0x0d78), MC_ACCESS, 32  /* Offset: 0x0d78 */
#define DENALI_CTL_862_AXI4_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_862_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_863
//****************************************************************************************************************
#define DENALI_CTL_863						(MC_BASE + 0x0d7c), MC_ACCESS, 32  /* Offset: 0x0d7c */
#define DENALI_CTL_863_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_863_AXI4_RANGE_PROT_BITS_10			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_864
//****************************************************************************************************************
#define DENALI_CTL_864						(MC_BASE + 0x0d80), MC_ACCESS, 32  /* Offset: 0x0d80 */
#define DENALI_CTL_864_AXI4_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_864_AXI4_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_865
//****************************************************************************************************************
#define DENALI_CTL_865						(MC_BASE + 0x0d84), MC_ACCESS, 32  /* Offset: 0x0d84 */
#define DENALI_CTL_865_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_865_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_866
//****************************************************************************************************************
#define DENALI_CTL_866						(MC_BASE + 0x0d88), MC_ACCESS, 32  /* Offset: 0x0d88 */
#define DENALI_CTL_866_AXI4_RANGE_PROT_BITS_11			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_866_AXI4_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_867
//****************************************************************************************************************
#define DENALI_CTL_867						(MC_BASE + 0x0d8c), MC_ACCESS, 32  /* Offset: 0x0d8c */
#define DENALI_CTL_867_AXI4_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_867_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_868
//****************************************************************************************************************
#define DENALI_CTL_868						(MC_BASE + 0x0d90), MC_ACCESS, 32  /* Offset: 0x0d90 */
#define DENALI_CTL_868_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_868_AXI4_RANGE_PROT_BITS_12			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_869
//****************************************************************************************************************
#define DENALI_CTL_869						(MC_BASE + 0x0d94), MC_ACCESS, 32  /* Offset: 0x0d94 */
#define DENALI_CTL_869_AXI4_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_869_AXI4_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_870
//****************************************************************************************************************
#define DENALI_CTL_870						(MC_BASE + 0x0d98), MC_ACCESS, 32  /* Offset: 0x0d98 */
#define DENALI_CTL_870_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_870_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_871
//****************************************************************************************************************
#define DENALI_CTL_871						(MC_BASE + 0x0d9c), MC_ACCESS, 32  /* Offset: 0x0d9c */
#define DENALI_CTL_871_AXI4_RANGE_PROT_BITS_13			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_871_AXI4_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_872
//****************************************************************************************************************
#define DENALI_CTL_872						(MC_BASE + 0x0da0), MC_ACCESS, 32  /* Offset: 0x0da0 */
#define DENALI_CTL_872_AXI4_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_872_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_873
//****************************************************************************************************************
#define DENALI_CTL_873						(MC_BASE + 0x0da4), MC_ACCESS, 32  /* Offset: 0x0da4 */
#define DENALI_CTL_873_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_873_AXI4_RANGE_PROT_BITS_14			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_874
//****************************************************************************************************************
#define DENALI_CTL_874						(MC_BASE + 0x0da8), MC_ACCESS, 32  /* Offset: 0x0da8 */
#define DENALI_CTL_874_AXI4_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_874_AXI4_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_875
//****************************************************************************************************************
#define DENALI_CTL_875						(MC_BASE + 0x0dac), MC_ACCESS, 32  /* Offset: 0x0dac */
#define DENALI_CTL_875_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_875_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_876
//****************************************************************************************************************
#define DENALI_CTL_876						(MC_BASE + 0x0db0), MC_ACCESS, 32  /* Offset: 0x0db0 */
#define DENALI_CTL_876_AXI4_RANGE_PROT_BITS_15			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 4 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_876_AXI4_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 4 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_877
//****************************************************************************************************************
#define DENALI_CTL_877						(MC_BASE + 0x0db4), MC_ACCESS, 32  /* Offset: 0x0db4 */
#define DENALI_CTL_877_AXI4_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 4 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_877_AXI4_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_878
//****************************************************************************************************************
#define DENALI_CTL_878						(MC_BASE + 0x0db8), MC_ACCESS, 32  /* Offset: 0x0db8 */
#define DENALI_CTL_878_AXI4_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.4._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_878_AXI5_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_879
//****************************************************************************************************************
#define DENALI_CTL_879						(MC_BASE + 0x0dbc), MC_ACCESS, 32  /* Offset: 0x0dbc */
#define DENALI_CTL_879_AXI5_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_879_AXI5_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_880
//****************************************************************************************************************
#define DENALI_CTL_880						(MC_BASE + 0x0dc0), MC_ACCESS, 32  /* Offset: 0x0dc0 */
#define DENALI_CTL_880_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_880_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_881
//****************************************************************************************************************
#define DENALI_CTL_881						(MC_BASE + 0x0dc4), MC_ACCESS, 32  /* Offset: 0x0dc4 */
#define DENALI_CTL_881_AXI5_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_881_AXI5_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_882
//****************************************************************************************************************
#define DENALI_CTL_882						(MC_BASE + 0x0dc8), MC_ACCESS, 32  /* Offset: 0x0dc8 */
#define DENALI_CTL_882_AXI5_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_882_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_883
//****************************************************************************************************************
#define DENALI_CTL_883						(MC_BASE + 0x0dcc), MC_ACCESS, 32  /* Offset: 0x0dcc */
#define DENALI_CTL_883_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_883_AXI5_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_884
//****************************************************************************************************************
#define DENALI_CTL_884						(MC_BASE + 0x0dd0), MC_ACCESS, 32  /* Offset: 0x0dd0 */
#define DENALI_CTL_884_AXI5_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_884_AXI5_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_885
//****************************************************************************************************************
#define DENALI_CTL_885						(MC_BASE + 0x0dd4), MC_ACCESS, 32  /* Offset: 0x0dd4 */
#define DENALI_CTL_885_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_885_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_886
//****************************************************************************************************************
#define DENALI_CTL_886						(MC_BASE + 0x0dd8), MC_ACCESS, 32  /* Offset: 0x0dd8 */
#define DENALI_CTL_886_AXI5_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_886_AXI5_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_887
//****************************************************************************************************************
#define DENALI_CTL_887						(MC_BASE + 0x0ddc), MC_ACCESS, 32  /* Offset: 0x0ddc */
#define DENALI_CTL_887_AXI5_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_887_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_888
//****************************************************************************************************************
#define DENALI_CTL_888						(MC_BASE + 0x0de0), MC_ACCESS, 32  /* Offset: 0x0de0 */
#define DENALI_CTL_888_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_888_AXI5_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_889
//****************************************************************************************************************
#define DENALI_CTL_889						(MC_BASE + 0x0de4), MC_ACCESS, 32  /* Offset: 0x0de4 */
#define DENALI_CTL_889_AXI5_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_889_AXI5_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_890
//****************************************************************************************************************
#define DENALI_CTL_890						(MC_BASE + 0x0de8), MC_ACCESS, 32  /* Offset: 0x0de8 */
#define DENALI_CTL_890_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_890_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_891
//****************************************************************************************************************
#define DENALI_CTL_891						(MC_BASE + 0x0dec), MC_ACCESS, 32  /* Offset: 0x0dec */
#define DENALI_CTL_891_AXI5_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_891_AXI5_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_892
//****************************************************************************************************************
#define DENALI_CTL_892						(MC_BASE + 0x0df0), MC_ACCESS, 32  /* Offset: 0x0df0 */
#define DENALI_CTL_892_AXI5_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_892_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_893
//****************************************************************************************************************
#define DENALI_CTL_893						(MC_BASE + 0x0df4), MC_ACCESS, 32  /* Offset: 0x0df4 */
#define DENALI_CTL_893_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_893_AXI5_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_894
//****************************************************************************************************************
#define DENALI_CTL_894						(MC_BASE + 0x0df8), MC_ACCESS, 32  /* Offset: 0x0df8 */
#define DENALI_CTL_894_AXI5_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_894_AXI5_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_895
//****************************************************************************************************************
#define DENALI_CTL_895						(MC_BASE + 0x0dfc), MC_ACCESS, 32  /* Offset: 0x0dfc */
#define DENALI_CTL_895_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_895_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_896
//****************************************************************************************************************
#define DENALI_CTL_896						(MC_BASE + 0x0e00), MC_ACCESS, 32  /* Offset: 0x0e00 */
#define DENALI_CTL_896_AXI5_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_896_AXI5_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_897
//****************************************************************************************************************
#define DENALI_CTL_897						(MC_BASE + 0x0e04), MC_ACCESS, 32  /* Offset: 0x0e04 */
#define DENALI_CTL_897_AXI5_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_897_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_898
//****************************************************************************************************************
#define DENALI_CTL_898						(MC_BASE + 0x0e08), MC_ACCESS, 32  /* Offset: 0x0e08 */
#define DENALI_CTL_898_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_898_AXI5_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_899
//****************************************************************************************************************
#define DENALI_CTL_899						(MC_BASE + 0x0e0c), MC_ACCESS, 32  /* Offset: 0x0e0c */
#define DENALI_CTL_899_AXI5_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_899_AXI5_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_900
//****************************************************************************************************************
#define DENALI_CTL_900						(MC_BASE + 0x0e10), MC_ACCESS, 32  /* Offset: 0x0e10 */
#define DENALI_CTL_900_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_900_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_901
//****************************************************************************************************************
#define DENALI_CTL_901						(MC_BASE + 0x0e14), MC_ACCESS, 32  /* Offset: 0x0e14 */
#define DENALI_CTL_901_AXI5_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_901_AXI5_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_902
//****************************************************************************************************************
#define DENALI_CTL_902						(MC_BASE + 0x0e18), MC_ACCESS, 32  /* Offset: 0x0e18 */
#define DENALI_CTL_902_AXI5_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_902_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_903
//****************************************************************************************************************
#define DENALI_CTL_903						(MC_BASE + 0x0e1c), MC_ACCESS, 32  /* Offset: 0x0e1c */
#define DENALI_CTL_903_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_903_AXI5_RANGE_PROT_BITS_10			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_904
//****************************************************************************************************************
#define DENALI_CTL_904						(MC_BASE + 0x0e20), MC_ACCESS, 32  /* Offset: 0x0e20 */
#define DENALI_CTL_904_AXI5_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_904_AXI5_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_905
//****************************************************************************************************************
#define DENALI_CTL_905						(MC_BASE + 0x0e24), MC_ACCESS, 32  /* Offset: 0x0e24 */
#define DENALI_CTL_905_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_905_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_906
//****************************************************************************************************************
#define DENALI_CTL_906						(MC_BASE + 0x0e28), MC_ACCESS, 32  /* Offset: 0x0e28 */
#define DENALI_CTL_906_AXI5_RANGE_PROT_BITS_11			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_906_AXI5_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_907
//****************************************************************************************************************
#define DENALI_CTL_907						(MC_BASE + 0x0e2c), MC_ACCESS, 32  /* Offset: 0x0e2c */
#define DENALI_CTL_907_AXI5_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_907_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_908
//****************************************************************************************************************
#define DENALI_CTL_908						(MC_BASE + 0x0e30), MC_ACCESS, 32  /* Offset: 0x0e30 */
#define DENALI_CTL_908_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_908_AXI5_RANGE_PROT_BITS_12			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_909
//****************************************************************************************************************
#define DENALI_CTL_909						(MC_BASE + 0x0e34), MC_ACCESS, 32  /* Offset: 0x0e34 */
#define DENALI_CTL_909_AXI5_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_909_AXI5_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_910
//****************************************************************************************************************
#define DENALI_CTL_910						(MC_BASE + 0x0e38), MC_ACCESS, 32  /* Offset: 0x0e38 */
#define DENALI_CTL_910_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_910_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_911
//****************************************************************************************************************
#define DENALI_CTL_911						(MC_BASE + 0x0e3c), MC_ACCESS, 32  /* Offset: 0x0e3c */
#define DENALI_CTL_911_AXI5_RANGE_PROT_BITS_13			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_911_AXI5_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_912
//****************************************************************************************************************
#define DENALI_CTL_912						(MC_BASE + 0x0e40), MC_ACCESS, 32  /* Offset: 0x0e40 */
#define DENALI_CTL_912_AXI5_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_912_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_913
//****************************************************************************************************************
#define DENALI_CTL_913						(MC_BASE + 0x0e44), MC_ACCESS, 32  /* Offset: 0x0e44 */
#define DENALI_CTL_913_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_913_AXI5_RANGE_PROT_BITS_14			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_914
//****************************************************************************************************************
#define DENALI_CTL_914						(MC_BASE + 0x0e48), MC_ACCESS, 32  /* Offset: 0x0e48 */
#define DENALI_CTL_914_AXI5_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_914_AXI5_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_915
//****************************************************************************************************************
#define DENALI_CTL_915						(MC_BASE + 0x0e4c), MC_ACCESS, 32  /* Offset: 0x0e4c */
#define DENALI_CTL_915_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_915_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_916
//****************************************************************************************************************
#define DENALI_CTL_916						(MC_BASE + 0x0e50), MC_ACCESS, 32  /* Offset: 0x0e50 */
#define DENALI_CTL_916_AXI5_RANGE_PROT_BITS_15			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 5 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_916_AXI5_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 5 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_917
//****************************************************************************************************************
#define DENALI_CTL_917						(MC_BASE + 0x0e54), MC_ACCESS, 32  /* Offset: 0x0e54 */
#define DENALI_CTL_917_AXI5_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 5 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_917_AXI5_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_918
//****************************************************************************************************************
#define DENALI_CTL_918						(MC_BASE + 0x0e58), MC_ACCESS, 32  /* Offset: 0x0e58 */
#define DENALI_CTL_918_AXI5_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.5._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_918_AXI6_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_919
//****************************************************************************************************************
#define DENALI_CTL_919						(MC_BASE + 0x0e5c), MC_ACCESS, 32  /* Offset: 0x0e5c */
#define DENALI_CTL_919_AXI6_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_919_AXI6_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_920
//****************************************************************************************************************
#define DENALI_CTL_920						(MC_BASE + 0x0e60), MC_ACCESS, 32  /* Offset: 0x0e60 */
#define DENALI_CTL_920_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_920_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_921
//****************************************************************************************************************
#define DENALI_CTL_921						(MC_BASE + 0x0e64), MC_ACCESS, 32  /* Offset: 0x0e64 */
#define DENALI_CTL_921_AXI6_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_921_AXI6_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_922
//****************************************************************************************************************
#define DENALI_CTL_922						(MC_BASE + 0x0e68), MC_ACCESS, 32  /* Offset: 0x0e68 */
#define DENALI_CTL_922_AXI6_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_922_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_923
//****************************************************************************************************************
#define DENALI_CTL_923						(MC_BASE + 0x0e6c), MC_ACCESS, 32  /* Offset: 0x0e6c */
#define DENALI_CTL_923_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_923_AXI6_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_924
//****************************************************************************************************************
#define DENALI_CTL_924						(MC_BASE + 0x0e70), MC_ACCESS, 32  /* Offset: 0x0e70 */
#define DENALI_CTL_924_AXI6_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_924_AXI6_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_925
//****************************************************************************************************************
#define DENALI_CTL_925						(MC_BASE + 0x0e74), MC_ACCESS, 32  /* Offset: 0x0e74 */
#define DENALI_CTL_925_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_925_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_926
//****************************************************************************************************************
#define DENALI_CTL_926						(MC_BASE + 0x0e78), MC_ACCESS, 32  /* Offset: 0x0e78 */
#define DENALI_CTL_926_AXI6_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_926_AXI6_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_927
//****************************************************************************************************************
#define DENALI_CTL_927						(MC_BASE + 0x0e7c), MC_ACCESS, 32  /* Offset: 0x0e7c */
#define DENALI_CTL_927_AXI6_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_927_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_928
//****************************************************************************************************************
#define DENALI_CTL_928						(MC_BASE + 0x0e80), MC_ACCESS, 32  /* Offset: 0x0e80 */
#define DENALI_CTL_928_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_928_AXI6_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_929
//****************************************************************************************************************
#define DENALI_CTL_929						(MC_BASE + 0x0e84), MC_ACCESS, 32  /* Offset: 0x0e84 */
#define DENALI_CTL_929_AXI6_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_929_AXI6_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_930
//****************************************************************************************************************
#define DENALI_CTL_930						(MC_BASE + 0x0e88), MC_ACCESS, 32  /* Offset: 0x0e88 */
#define DENALI_CTL_930_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_930_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_931
//****************************************************************************************************************
#define DENALI_CTL_931						(MC_BASE + 0x0e8c), MC_ACCESS, 32  /* Offset: 0x0e8c */
#define DENALI_CTL_931_AXI6_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_931_AXI6_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_932
//****************************************************************************************************************
#define DENALI_CTL_932						(MC_BASE + 0x0e90), MC_ACCESS, 32  /* Offset: 0x0e90 */
#define DENALI_CTL_932_AXI6_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_932_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_933
//****************************************************************************************************************
#define DENALI_CTL_933						(MC_BASE + 0x0e94), MC_ACCESS, 32  /* Offset: 0x0e94 */
#define DENALI_CTL_933_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_933_AXI6_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_934
//****************************************************************************************************************
#define DENALI_CTL_934						(MC_BASE + 0x0e98), MC_ACCESS, 32  /* Offset: 0x0e98 */
#define DENALI_CTL_934_AXI6_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_934_AXI6_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_935
//****************************************************************************************************************
#define DENALI_CTL_935						(MC_BASE + 0x0e9c), MC_ACCESS, 32  /* Offset: 0x0e9c */
#define DENALI_CTL_935_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_935_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_936
//****************************************************************************************************************
#define DENALI_CTL_936						(MC_BASE + 0x0ea0), MC_ACCESS, 32  /* Offset: 0x0ea0 */
#define DENALI_CTL_936_AXI6_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_936_AXI6_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_937
//****************************************************************************************************************
#define DENALI_CTL_937						(MC_BASE + 0x0ea4), MC_ACCESS, 32  /* Offset: 0x0ea4 */
#define DENALI_CTL_937_AXI6_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_937_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_938
//****************************************************************************************************************
#define DENALI_CTL_938						(MC_BASE + 0x0ea8), MC_ACCESS, 32  /* Offset: 0x0ea8 */
#define DENALI_CTL_938_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_938_AXI6_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_939
//****************************************************************************************************************
#define DENALI_CTL_939						(MC_BASE + 0x0eac), MC_ACCESS, 32  /* Offset: 0x0eac */
#define DENALI_CTL_939_AXI6_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_939_AXI6_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_940
//****************************************************************************************************************
#define DENALI_CTL_940						(MC_BASE + 0x0eb0), MC_ACCESS, 32  /* Offset: 0x0eb0 */
#define DENALI_CTL_940_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_940_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_941
//****************************************************************************************************************
#define DENALI_CTL_941						(MC_BASE + 0x0eb4), MC_ACCESS, 32  /* Offset: 0x0eb4 */
#define DENALI_CTL_941_AXI6_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_941_AXI6_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_942
//****************************************************************************************************************
#define DENALI_CTL_942						(MC_BASE + 0x0eb8), MC_ACCESS, 32  /* Offset: 0x0eb8 */
#define DENALI_CTL_942_AXI6_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_942_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_943
//****************************************************************************************************************
#define DENALI_CTL_943						(MC_BASE + 0x0ebc), MC_ACCESS, 32  /* Offset: 0x0ebc */
#define DENALI_CTL_943_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_943_AXI6_RANGE_PROT_BITS_10			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_944
//****************************************************************************************************************
#define DENALI_CTL_944						(MC_BASE + 0x0ec0), MC_ACCESS, 32  /* Offset: 0x0ec0 */
#define DENALI_CTL_944_AXI6_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_944_AXI6_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_945
//****************************************************************************************************************
#define DENALI_CTL_945						(MC_BASE + 0x0ec4), MC_ACCESS, 32  /* Offset: 0x0ec4 */
#define DENALI_CTL_945_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_945_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_946
//****************************************************************************************************************
#define DENALI_CTL_946						(MC_BASE + 0x0ec8), MC_ACCESS, 32  /* Offset: 0x0ec8 */
#define DENALI_CTL_946_AXI6_RANGE_PROT_BITS_11			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_946_AXI6_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_947
//****************************************************************************************************************
#define DENALI_CTL_947						(MC_BASE + 0x0ecc), MC_ACCESS, 32  /* Offset: 0x0ecc */
#define DENALI_CTL_947_AXI6_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_947_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_948
//****************************************************************************************************************
#define DENALI_CTL_948						(MC_BASE + 0x0ed0), MC_ACCESS, 32  /* Offset: 0x0ed0 */
#define DENALI_CTL_948_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_948_AXI6_RANGE_PROT_BITS_12			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_949
//****************************************************************************************************************
#define DENALI_CTL_949						(MC_BASE + 0x0ed4), MC_ACCESS, 32  /* Offset: 0x0ed4 */
#define DENALI_CTL_949_AXI6_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_949_AXI6_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_950
//****************************************************************************************************************
#define DENALI_CTL_950						(MC_BASE + 0x0ed8), MC_ACCESS, 32  /* Offset: 0x0ed8 */
#define DENALI_CTL_950_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_950_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_951
//****************************************************************************************************************
#define DENALI_CTL_951						(MC_BASE + 0x0edc), MC_ACCESS, 32  /* Offset: 0x0edc */
#define DENALI_CTL_951_AXI6_RANGE_PROT_BITS_13			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_951_AXI6_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_952
//****************************************************************************************************************
#define DENALI_CTL_952						(MC_BASE + 0x0ee0), MC_ACCESS, 32  /* Offset: 0x0ee0 */
#define DENALI_CTL_952_AXI6_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_952_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_953
//****************************************************************************************************************
#define DENALI_CTL_953						(MC_BASE + 0x0ee4), MC_ACCESS, 32  /* Offset: 0x0ee4 */
#define DENALI_CTL_953_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_953_AXI6_RANGE_PROT_BITS_14			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_954
//****************************************************************************************************************
#define DENALI_CTL_954						(MC_BASE + 0x0ee8), MC_ACCESS, 32  /* Offset: 0x0ee8 */
#define DENALI_CTL_954_AXI6_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_954_AXI6_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_955
//****************************************************************************************************************
#define DENALI_CTL_955						(MC_BASE + 0x0eec), MC_ACCESS, 32  /* Offset: 0x0eec */
#define DENALI_CTL_955_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_955_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_956
//****************************************************************************************************************
#define DENALI_CTL_956						(MC_BASE + 0x0ef0), MC_ACCESS, 32  /* Offset: 0x0ef0 */
#define DENALI_CTL_956_AXI6_RANGE_PROT_BITS_15			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 6 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_956_AXI6_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 6 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_957
//****************************************************************************************************************
#define DENALI_CTL_957						(MC_BASE + 0x0ef4), MC_ACCESS, 32  /* Offset: 0x0ef4 */
#define DENALI_CTL_957_AXI6_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 6 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_957_AXI6_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_958
//****************************************************************************************************************
#define DENALI_CTL_958						(MC_BASE + 0x0ef8), MC_ACCESS, 32  /* Offset: 0x0ef8 */
#define DENALI_CTL_958_AXI6_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.6._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_958_AXI7_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_959
//****************************************************************************************************************
#define DENALI_CTL_959						(MC_BASE + 0x0efc), MC_ACCESS, 32  /* Offset: 0x0efc */
#define DENALI_CTL_959_AXI7_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_959_AXI7_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_960
//****************************************************************************************************************
#define DENALI_CTL_960						(MC_BASE + 0x0f00), MC_ACCESS, 32  /* Offset: 0x0f00 */
#define DENALI_CTL_960_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_960_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_961
//****************************************************************************************************************
#define DENALI_CTL_961						(MC_BASE + 0x0f04), MC_ACCESS, 32  /* Offset: 0x0f04 */
#define DENALI_CTL_961_AXI7_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_961_AXI7_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_962
//****************************************************************************************************************
#define DENALI_CTL_962						(MC_BASE + 0x0f08), MC_ACCESS, 32  /* Offset: 0x0f08 */
#define DENALI_CTL_962_AXI7_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_962_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_963
//****************************************************************************************************************
#define DENALI_CTL_963						(MC_BASE + 0x0f0c), MC_ACCESS, 32  /* Offset: 0x0f0c */
#define DENALI_CTL_963_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_963_AXI7_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_964
//****************************************************************************************************************
#define DENALI_CTL_964						(MC_BASE + 0x0f10), MC_ACCESS, 32  /* Offset: 0x0f10 */
#define DENALI_CTL_964_AXI7_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_964_AXI7_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_965
//****************************************************************************************************************
#define DENALI_CTL_965						(MC_BASE + 0x0f14), MC_ACCESS, 32  /* Offset: 0x0f14 */
#define DENALI_CTL_965_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_965_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_966
//****************************************************************************************************************
#define DENALI_CTL_966						(MC_BASE + 0x0f18), MC_ACCESS, 32  /* Offset: 0x0f18 */
#define DENALI_CTL_966_AXI7_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_966_AXI7_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_967
//****************************************************************************************************************
#define DENALI_CTL_967						(MC_BASE + 0x0f1c), MC_ACCESS, 32  /* Offset: 0x0f1c */
#define DENALI_CTL_967_AXI7_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_967_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_968
//****************************************************************************************************************
#define DENALI_CTL_968						(MC_BASE + 0x0f20), MC_ACCESS, 32  /* Offset: 0x0f20 */
#define DENALI_CTL_968_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_968_AXI7_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_969
//****************************************************************************************************************
#define DENALI_CTL_969						(MC_BASE + 0x0f24), MC_ACCESS, 32  /* Offset: 0x0f24 */
#define DENALI_CTL_969_AXI7_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_969_AXI7_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_970
//****************************************************************************************************************
#define DENALI_CTL_970						(MC_BASE + 0x0f28), MC_ACCESS, 32  /* Offset: 0x0f28 */
#define DENALI_CTL_970_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_970_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_971
//****************************************************************************************************************
#define DENALI_CTL_971						(MC_BASE + 0x0f2c), MC_ACCESS, 32  /* Offset: 0x0f2c */
#define DENALI_CTL_971_AXI7_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_971_AXI7_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_972
//****************************************************************************************************************
#define DENALI_CTL_972						(MC_BASE + 0x0f30), MC_ACCESS, 32  /* Offset: 0x0f30 */
#define DENALI_CTL_972_AXI7_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_972_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_973
//****************************************************************************************************************
#define DENALI_CTL_973						(MC_BASE + 0x0f34), MC_ACCESS, 32  /* Offset: 0x0f34 */
#define DENALI_CTL_973_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_973_AXI7_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_974
//****************************************************************************************************************
#define DENALI_CTL_974						(MC_BASE + 0x0f38), MC_ACCESS, 32  /* Offset: 0x0f38 */
#define DENALI_CTL_974_AXI7_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_974_AXI7_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_975
//****************************************************************************************************************
#define DENALI_CTL_975						(MC_BASE + 0x0f3c), MC_ACCESS, 32  /* Offset: 0x0f3c */
#define DENALI_CTL_975_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_975_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_976
//****************************************************************************************************************
#define DENALI_CTL_976						(MC_BASE + 0x0f40), MC_ACCESS, 32  /* Offset: 0x0f40 */
#define DENALI_CTL_976_AXI7_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_976_AXI7_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_977
//****************************************************************************************************************
#define DENALI_CTL_977						(MC_BASE + 0x0f44), MC_ACCESS, 32  /* Offset: 0x0f44 */
#define DENALI_CTL_977_AXI7_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_977_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_978
//****************************************************************************************************************
#define DENALI_CTL_978						(MC_BASE + 0x0f48), MC_ACCESS, 32  /* Offset: 0x0f48 */
#define DENALI_CTL_978_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_978_AXI7_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_979
//****************************************************************************************************************
#define DENALI_CTL_979						(MC_BASE + 0x0f4c), MC_ACCESS, 32  /* Offset: 0x0f4c */
#define DENALI_CTL_979_AXI7_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_979_AXI7_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_980
//****************************************************************************************************************
#define DENALI_CTL_980						(MC_BASE + 0x0f50), MC_ACCESS, 32  /* Offset: 0x0f50 */
#define DENALI_CTL_980_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_980_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_981
//****************************************************************************************************************
#define DENALI_CTL_981						(MC_BASE + 0x0f54), MC_ACCESS, 32  /* Offset: 0x0f54 */
#define DENALI_CTL_981_AXI7_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_981_AXI7_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_982
//****************************************************************************************************************
#define DENALI_CTL_982						(MC_BASE + 0x0f58), MC_ACCESS, 32  /* Offset: 0x0f58 */
#define DENALI_CTL_982_AXI7_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_982_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_983
//****************************************************************************************************************
#define DENALI_CTL_983						(MC_BASE + 0x0f5c), MC_ACCESS, 32  /* Offset: 0x0f5c */
#define DENALI_CTL_983_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_983_AXI7_RANGE_PROT_BITS_10			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_984
//****************************************************************************************************************
#define DENALI_CTL_984						(MC_BASE + 0x0f60), MC_ACCESS, 32  /* Offset: 0x0f60 */
#define DENALI_CTL_984_AXI7_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_984_AXI7_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_985
//****************************************************************************************************************
#define DENALI_CTL_985						(MC_BASE + 0x0f64), MC_ACCESS, 32  /* Offset: 0x0f64 */
#define DENALI_CTL_985_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_985_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_986
//****************************************************************************************************************
#define DENALI_CTL_986						(MC_BASE + 0x0f68), MC_ACCESS, 32  /* Offset: 0x0f68 */
#define DENALI_CTL_986_AXI7_RANGE_PROT_BITS_11			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_986_AXI7_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_987
//****************************************************************************************************************
#define DENALI_CTL_987						(MC_BASE + 0x0f6c), MC_ACCESS, 32  /* Offset: 0x0f6c */
#define DENALI_CTL_987_AXI7_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_987_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_988
//****************************************************************************************************************
#define DENALI_CTL_988						(MC_BASE + 0x0f70), MC_ACCESS, 32  /* Offset: 0x0f70 */
#define DENALI_CTL_988_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_988_AXI7_RANGE_PROT_BITS_12			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_989
//****************************************************************************************************************
#define DENALI_CTL_989						(MC_BASE + 0x0f74), MC_ACCESS, 32  /* Offset: 0x0f74 */
#define DENALI_CTL_989_AXI7_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_989_AXI7_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_990
//****************************************************************************************************************
#define DENALI_CTL_990						(MC_BASE + 0x0f78), MC_ACCESS, 32  /* Offset: 0x0f78 */
#define DENALI_CTL_990_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_990_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_991
//****************************************************************************************************************
#define DENALI_CTL_991						(MC_BASE + 0x0f7c), MC_ACCESS, 32  /* Offset: 0x0f7c */
#define DENALI_CTL_991_AXI7_RANGE_PROT_BITS_13			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_991_AXI7_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_992
//****************************************************************************************************************
#define DENALI_CTL_992						(MC_BASE + 0x0f80), MC_ACCESS, 32  /* Offset: 0x0f80 */
#define DENALI_CTL_992_AXI7_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_992_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_993
//****************************************************************************************************************
#define DENALI_CTL_993						(MC_BASE + 0x0f84), MC_ACCESS, 32  /* Offset: 0x0f84 */
#define DENALI_CTL_993_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_993_AXI7_RANGE_PROT_BITS_14			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_994
//****************************************************************************************************************
#define DENALI_CTL_994						(MC_BASE + 0x0f88), MC_ACCESS, 32  /* Offset: 0x0f88 */
#define DENALI_CTL_994_AXI7_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_994_AXI7_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_995
//****************************************************************************************************************
#define DENALI_CTL_995						(MC_BASE + 0x0f8c), MC_ACCESS, 32  /* Offset: 0x0f8c */
#define DENALI_CTL_995_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_995_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_996
//****************************************************************************************************************
#define DENALI_CTL_996						(MC_BASE + 0x0f90), MC_ACCESS, 32  /* Offset: 0x0f90 */
#define DENALI_CTL_996_AXI7_RANGE_PROT_BITS_15			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 7 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_996_AXI7_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 7 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_997
//****************************************************************************************************************
#define DENALI_CTL_997						(MC_BASE + 0x0f94), MC_ACCESS, 32  /* Offset: 0x0f94 */
#define DENALI_CTL_997_AXI7_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 7 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_997_AXI7_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_998
//****************************************************************************************************************
#define DENALI_CTL_998						(MC_BASE + 0x0f98), MC_ACCESS, 32  /* Offset: 0x0f98 */
#define DENALI_CTL_998_AXI7_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.7._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_998_AXI8_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_999
//****************************************************************************************************************
#define DENALI_CTL_999						(MC_BASE + 0x0f9c), MC_ACCESS, 32  /* Offset: 0x0f9c */
#define DENALI_CTL_999_AXI8_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_999_AXI8_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1000
//****************************************************************************************************************
#define DENALI_CTL_1000						(MC_BASE + 0x0fa0), MC_ACCESS, 32  /* Offset: 0x0fa0 */
#define DENALI_CTL_1000_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1000_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1001
//****************************************************************************************************************
#define DENALI_CTL_1001						(MC_BASE + 0x0fa4), MC_ACCESS, 32  /* Offset: 0x0fa4 */
#define DENALI_CTL_1001_AXI8_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1001_AXI8_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1002
//****************************************************************************************************************
#define DENALI_CTL_1002						(MC_BASE + 0x0fa8), MC_ACCESS, 32  /* Offset: 0x0fa8 */
#define DENALI_CTL_1002_AXI8_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1002_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1003
//****************************************************************************************************************
#define DENALI_CTL_1003						(MC_BASE + 0x0fac), MC_ACCESS, 32  /* Offset: 0x0fac */
#define DENALI_CTL_1003_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1003_AXI8_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1004
//****************************************************************************************************************
#define DENALI_CTL_1004						(MC_BASE + 0x0fb0), MC_ACCESS, 32  /* Offset: 0x0fb0 */
#define DENALI_CTL_1004_AXI8_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1004_AXI8_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1005
//****************************************************************************************************************
#define DENALI_CTL_1005						(MC_BASE + 0x0fb4), MC_ACCESS, 32  /* Offset: 0x0fb4 */
#define DENALI_CTL_1005_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1005_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1006
//****************************************************************************************************************
#define DENALI_CTL_1006						(MC_BASE + 0x0fb8), MC_ACCESS, 32  /* Offset: 0x0fb8 */
#define DENALI_CTL_1006_AXI8_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1006_AXI8_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1007
//****************************************************************************************************************
#define DENALI_CTL_1007						(MC_BASE + 0x0fbc), MC_ACCESS, 32  /* Offset: 0x0fbc */
#define DENALI_CTL_1007_AXI8_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1007_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1008
//****************************************************************************************************************
#define DENALI_CTL_1008						(MC_BASE + 0x0fc0), MC_ACCESS, 32  /* Offset: 0x0fc0 */
#define DENALI_CTL_1008_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1008_AXI8_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1009
//****************************************************************************************************************
#define DENALI_CTL_1009						(MC_BASE + 0x0fc4), MC_ACCESS, 32  /* Offset: 0x0fc4 */
#define DENALI_CTL_1009_AXI8_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1009_AXI8_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1010
//****************************************************************************************************************
#define DENALI_CTL_1010						(MC_BASE + 0x0fc8), MC_ACCESS, 32  /* Offset: 0x0fc8 */
#define DENALI_CTL_1010_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1010_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1011
//****************************************************************************************************************
#define DENALI_CTL_1011						(MC_BASE + 0x0fcc), MC_ACCESS, 32  /* Offset: 0x0fcc */
#define DENALI_CTL_1011_AXI8_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1011_AXI8_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1012
//****************************************************************************************************************
#define DENALI_CTL_1012						(MC_BASE + 0x0fd0), MC_ACCESS, 32  /* Offset: 0x0fd0 */
#define DENALI_CTL_1012_AXI8_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1012_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1013
//****************************************************************************************************************
#define DENALI_CTL_1013						(MC_BASE + 0x0fd4), MC_ACCESS, 32  /* Offset: 0x0fd4 */
#define DENALI_CTL_1013_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1013_AXI8_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1014
//****************************************************************************************************************
#define DENALI_CTL_1014						(MC_BASE + 0x0fd8), MC_ACCESS, 32  /* Offset: 0x0fd8 */
#define DENALI_CTL_1014_AXI8_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1014_AXI8_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1015
//****************************************************************************************************************
#define DENALI_CTL_1015						(MC_BASE + 0x0fdc), MC_ACCESS, 32  /* Offset: 0x0fdc */
#define DENALI_CTL_1015_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1015_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1016
//****************************************************************************************************************
#define DENALI_CTL_1016						(MC_BASE + 0x0fe0), MC_ACCESS, 32  /* Offset: 0x0fe0 */
#define DENALI_CTL_1016_AXI8_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1016_AXI8_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1017
//****************************************************************************************************************
#define DENALI_CTL_1017						(MC_BASE + 0x0fe4), MC_ACCESS, 32  /* Offset: 0x0fe4 */
#define DENALI_CTL_1017_AXI8_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1017_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1018
//****************************************************************************************************************
#define DENALI_CTL_1018						(MC_BASE + 0x0fe8), MC_ACCESS, 32  /* Offset: 0x0fe8 */
#define DENALI_CTL_1018_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1018_AXI8_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1019
//****************************************************************************************************************
#define DENALI_CTL_1019						(MC_BASE + 0x0fec), MC_ACCESS, 32  /* Offset: 0x0fec */
#define DENALI_CTL_1019_AXI8_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1019_AXI8_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1020
//****************************************************************************************************************
#define DENALI_CTL_1020						(MC_BASE + 0x0ff0), MC_ACCESS, 32  /* Offset: 0x0ff0 */
#define DENALI_CTL_1020_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1020_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1021
//****************************************************************************************************************
#define DENALI_CTL_1021						(MC_BASE + 0x0ff4), MC_ACCESS, 32  /* Offset: 0x0ff4 */
#define DENALI_CTL_1021_AXI8_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1021_AXI8_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1022
//****************************************************************************************************************
#define DENALI_CTL_1022						(MC_BASE + 0x0ff8), MC_ACCESS, 32  /* Offset: 0x0ff8 */
#define DENALI_CTL_1022_AXI8_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1022_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1023
//****************************************************************************************************************
#define DENALI_CTL_1023						(MC_BASE + 0x0ffc), MC_ACCESS, 32  /* Offset: 0x0ffc */
#define DENALI_CTL_1023_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1023_AXI8_RANGE_PROT_BITS_10			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1024
//****************************************************************************************************************
#define DENALI_CTL_1024						(MC_BASE + 0x1000), MC_ACCESS, 32  /* Offset: 0x1000 */
#define DENALI_CTL_1024_AXI8_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1024_AXI8_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1025
//****************************************************************************************************************
#define DENALI_CTL_1025						(MC_BASE + 0x1004), MC_ACCESS, 32  /* Offset: 0x1004 */
#define DENALI_CTL_1025_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1025_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1026
//****************************************************************************************************************
#define DENALI_CTL_1026						(MC_BASE + 0x1008), MC_ACCESS, 32  /* Offset: 0x1008 */
#define DENALI_CTL_1026_AXI8_RANGE_PROT_BITS_11			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1026_AXI8_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1027
//****************************************************************************************************************
#define DENALI_CTL_1027						(MC_BASE + 0x100c), MC_ACCESS, 32  /* Offset: 0x100c */
#define DENALI_CTL_1027_AXI8_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1027_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1028
//****************************************************************************************************************
#define DENALI_CTL_1028						(MC_BASE + 0x1010), MC_ACCESS, 32  /* Offset: 0x1010 */
#define DENALI_CTL_1028_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1028_AXI8_RANGE_PROT_BITS_12			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1029
//****************************************************************************************************************
#define DENALI_CTL_1029						(MC_BASE + 0x1014), MC_ACCESS, 32  /* Offset: 0x1014 */
#define DENALI_CTL_1029_AXI8_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1029_AXI8_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1030
//****************************************************************************************************************
#define DENALI_CTL_1030						(MC_BASE + 0x1018), MC_ACCESS, 32  /* Offset: 0x1018 */
#define DENALI_CTL_1030_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1030_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1031
//****************************************************************************************************************
#define DENALI_CTL_1031						(MC_BASE + 0x101c), MC_ACCESS, 32  /* Offset: 0x101c */
#define DENALI_CTL_1031_AXI8_RANGE_PROT_BITS_13			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1031_AXI8_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1032
//****************************************************************************************************************
#define DENALI_CTL_1032						(MC_BASE + 0x1020), MC_ACCESS, 32  /* Offset: 0x1020 */
#define DENALI_CTL_1032_AXI8_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1032_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1033
//****************************************************************************************************************
#define DENALI_CTL_1033						(MC_BASE + 0x1024), MC_ACCESS, 32  /* Offset: 0x1024 */
#define DENALI_CTL_1033_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1033_AXI8_RANGE_PROT_BITS_14			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1034
//****************************************************************************************************************
#define DENALI_CTL_1034						(MC_BASE + 0x1028), MC_ACCESS, 32  /* Offset: 0x1028 */
#define DENALI_CTL_1034_AXI8_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1034_AXI8_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1035
//****************************************************************************************************************
#define DENALI_CTL_1035						(MC_BASE + 0x102c), MC_ACCESS, 32  /* Offset: 0x102c */
#define DENALI_CTL_1035_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1035_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1036
//****************************************************************************************************************
#define DENALI_CTL_1036						(MC_BASE + 0x1030), MC_ACCESS, 32  /* Offset: 0x1030 */
#define DENALI_CTL_1036_AXI8_RANGE_PROT_BITS_15			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 8 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1036_AXI8_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 8 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1037
//****************************************************************************************************************
#define DENALI_CTL_1037						(MC_BASE + 0x1034), MC_ACCESS, 32  /* Offset: 0x1034 */
#define DENALI_CTL_1037_AXI8_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 8 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1037_AXI8_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1038
//****************************************************************************************************************
#define DENALI_CTL_1038						(MC_BASE + 0x1038), MC_ACCESS, 32  /* Offset: 0x1038 */
#define DENALI_CTL_1038_AXI8_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.8._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1038_AXI9_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1039
//****************************************************************************************************************
#define DENALI_CTL_1039						(MC_BASE + 0x103c), MC_ACCESS, 32  /* Offset: 0x103c */
#define DENALI_CTL_1039_AXI9_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1039_AXI9_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1040
//****************************************************************************************************************
#define DENALI_CTL_1040						(MC_BASE + 0x1040), MC_ACCESS, 32  /* Offset: 0x1040 */
#define DENALI_CTL_1040_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1040_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1041
//****************************************************************************************************************
#define DENALI_CTL_1041						(MC_BASE + 0x1044), MC_ACCESS, 32  /* Offset: 0x1044 */
#define DENALI_CTL_1041_AXI9_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1041_AXI9_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1042
//****************************************************************************************************************
#define DENALI_CTL_1042						(MC_BASE + 0x1048), MC_ACCESS, 32  /* Offset: 0x1048 */
#define DENALI_CTL_1042_AXI9_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1042_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1043
//****************************************************************************************************************
#define DENALI_CTL_1043						(MC_BASE + 0x104c), MC_ACCESS, 32  /* Offset: 0x104c */
#define DENALI_CTL_1043_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1043_AXI9_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1044
//****************************************************************************************************************
#define DENALI_CTL_1044						(MC_BASE + 0x1050), MC_ACCESS, 32  /* Offset: 0x1050 */
#define DENALI_CTL_1044_AXI9_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1044_AXI9_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1045
//****************************************************************************************************************
#define DENALI_CTL_1045						(MC_BASE + 0x1054), MC_ACCESS, 32  /* Offset: 0x1054 */
#define DENALI_CTL_1045_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1045_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1046
//****************************************************************************************************************
#define DENALI_CTL_1046						(MC_BASE + 0x1058), MC_ACCESS, 32  /* Offset: 0x1058 */
#define DENALI_CTL_1046_AXI9_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1046_AXI9_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1047
//****************************************************************************************************************
#define DENALI_CTL_1047						(MC_BASE + 0x105c), MC_ACCESS, 32  /* Offset: 0x105c */
#define DENALI_CTL_1047_AXI9_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1047_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1048
//****************************************************************************************************************
#define DENALI_CTL_1048						(MC_BASE + 0x1060), MC_ACCESS, 32  /* Offset: 0x1060 */
#define DENALI_CTL_1048_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1048_AXI9_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1049
//****************************************************************************************************************
#define DENALI_CTL_1049						(MC_BASE + 0x1064), MC_ACCESS, 32  /* Offset: 0x1064 */
#define DENALI_CTL_1049_AXI9_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1049_AXI9_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1050
//****************************************************************************************************************
#define DENALI_CTL_1050						(MC_BASE + 0x1068), MC_ACCESS, 32  /* Offset: 0x1068 */
#define DENALI_CTL_1050_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1050_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1051
//****************************************************************************************************************
#define DENALI_CTL_1051						(MC_BASE + 0x106c), MC_ACCESS, 32  /* Offset: 0x106c */
#define DENALI_CTL_1051_AXI9_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1051_AXI9_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1052
//****************************************************************************************************************
#define DENALI_CTL_1052						(MC_BASE + 0x1070), MC_ACCESS, 32  /* Offset: 0x1070 */
#define DENALI_CTL_1052_AXI9_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1052_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1053
//****************************************************************************************************************
#define DENALI_CTL_1053						(MC_BASE + 0x1074), MC_ACCESS, 32  /* Offset: 0x1074 */
#define DENALI_CTL_1053_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1053_AXI9_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1054
//****************************************************************************************************************
#define DENALI_CTL_1054						(MC_BASE + 0x1078), MC_ACCESS, 32  /* Offset: 0x1078 */
#define DENALI_CTL_1054_AXI9_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1054_AXI9_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1055
//****************************************************************************************************************
#define DENALI_CTL_1055						(MC_BASE + 0x107c), MC_ACCESS, 32  /* Offset: 0x107c */
#define DENALI_CTL_1055_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1055_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1056
//****************************************************************************************************************
#define DENALI_CTL_1056						(MC_BASE + 0x1080), MC_ACCESS, 32  /* Offset: 0x1080 */
#define DENALI_CTL_1056_AXI9_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1056_AXI9_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1057
//****************************************************************************************************************
#define DENALI_CTL_1057						(MC_BASE + 0x1084), MC_ACCESS, 32  /* Offset: 0x1084 */
#define DENALI_CTL_1057_AXI9_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1057_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1058
//****************************************************************************************************************
#define DENALI_CTL_1058						(MC_BASE + 0x1088), MC_ACCESS, 32  /* Offset: 0x1088 */
#define DENALI_CTL_1058_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1058_AXI9_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1059
//****************************************************************************************************************
#define DENALI_CTL_1059						(MC_BASE + 0x108c), MC_ACCESS, 32  /* Offset: 0x108c */
#define DENALI_CTL_1059_AXI9_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1059_AXI9_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1060
//****************************************************************************************************************
#define DENALI_CTL_1060						(MC_BASE + 0x1090), MC_ACCESS, 32  /* Offset: 0x1090 */
#define DENALI_CTL_1060_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1060_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1061
//****************************************************************************************************************
#define DENALI_CTL_1061						(MC_BASE + 0x1094), MC_ACCESS, 32  /* Offset: 0x1094 */
#define DENALI_CTL_1061_AXI9_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1061_AXI9_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1062
//****************************************************************************************************************
#define DENALI_CTL_1062						(MC_BASE + 0x1098), MC_ACCESS, 32  /* Offset: 0x1098 */
#define DENALI_CTL_1062_AXI9_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1062_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1063
//****************************************************************************************************************
#define DENALI_CTL_1063						(MC_BASE + 0x109c), MC_ACCESS, 32  /* Offset: 0x109c */
#define DENALI_CTL_1063_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1063_AXI9_RANGE_PROT_BITS_10			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1064
//****************************************************************************************************************
#define DENALI_CTL_1064						(MC_BASE + 0x10a0), MC_ACCESS, 32  /* Offset: 0x10a0 */
#define DENALI_CTL_1064_AXI9_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1064_AXI9_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1065
//****************************************************************************************************************
#define DENALI_CTL_1065						(MC_BASE + 0x10a4), MC_ACCESS, 32  /* Offset: 0x10a4 */
#define DENALI_CTL_1065_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1065_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1066
//****************************************************************************************************************
#define DENALI_CTL_1066						(MC_BASE + 0x10a8), MC_ACCESS, 32  /* Offset: 0x10a8 */
#define DENALI_CTL_1066_AXI9_RANGE_PROT_BITS_11			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1066_AXI9_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1067
//****************************************************************************************************************
#define DENALI_CTL_1067						(MC_BASE + 0x10ac), MC_ACCESS, 32  /* Offset: 0x10ac */
#define DENALI_CTL_1067_AXI9_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1067_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1068
//****************************************************************************************************************
#define DENALI_CTL_1068						(MC_BASE + 0x10b0), MC_ACCESS, 32  /* Offset: 0x10b0 */
#define DENALI_CTL_1068_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1068_AXI9_RANGE_PROT_BITS_12			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1069
//****************************************************************************************************************
#define DENALI_CTL_1069						(MC_BASE + 0x10b4), MC_ACCESS, 32  /* Offset: 0x10b4 */
#define DENALI_CTL_1069_AXI9_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1069_AXI9_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1070
//****************************************************************************************************************
#define DENALI_CTL_1070						(MC_BASE + 0x10b8), MC_ACCESS, 32  /* Offset: 0x10b8 */
#define DENALI_CTL_1070_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1070_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1071
//****************************************************************************************************************
#define DENALI_CTL_1071						(MC_BASE + 0x10bc), MC_ACCESS, 32  /* Offset: 0x10bc */
#define DENALI_CTL_1071_AXI9_RANGE_PROT_BITS_13			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1071_AXI9_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1072
//****************************************************************************************************************
#define DENALI_CTL_1072						(MC_BASE + 0x10c0), MC_ACCESS, 32  /* Offset: 0x10c0 */
#define DENALI_CTL_1072_AXI9_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1072_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1073
//****************************************************************************************************************
#define DENALI_CTL_1073						(MC_BASE + 0x10c4), MC_ACCESS, 32  /* Offset: 0x10c4 */
#define DENALI_CTL_1073_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1073_AXI9_RANGE_PROT_BITS_14			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1074
//****************************************************************************************************************
#define DENALI_CTL_1074						(MC_BASE + 0x10c8), MC_ACCESS, 32  /* Offset: 0x10c8 */
#define DENALI_CTL_1074_AXI9_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1074_AXI9_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1075
//****************************************************************************************************************
#define DENALI_CTL_1075						(MC_BASE + 0x10cc), MC_ACCESS, 32  /* Offset: 0x10cc */
#define DENALI_CTL_1075_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1075_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1076
//****************************************************************************************************************
#define DENALI_CTL_1076						(MC_BASE + 0x10d0), MC_ACCESS, 32  /* Offset: 0x10d0 */
#define DENALI_CTL_1076_AXI9_RANGE_PROT_BITS_15			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 9 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1076_AXI9_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 9 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1077
//****************************************************************************************************************
#define DENALI_CTL_1077						(MC_BASE + 0x10d4), MC_ACCESS, 32  /* Offset: 0x10d4 */
#define DENALI_CTL_1077_AXI9_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 9 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1077_AXI9_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1078
//****************************************************************************************************************
#define DENALI_CTL_1078						(MC_BASE + 0x10d8), MC_ACCESS, 32  /* Offset: 0x10d8 */
#define DENALI_CTL_1078_AXI9_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.9._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1078_AXI10_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1079
//****************************************************************************************************************
#define DENALI_CTL_1079						(MC_BASE + 0x10dc), MC_ACCESS, 32  /* Offset: 0x10dc */
#define DENALI_CTL_1079_AXI10_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1079_AXI10_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1080
//****************************************************************************************************************
#define DENALI_CTL_1080						(MC_BASE + 0x10e0), MC_ACCESS, 32  /* Offset: 0x10e0 */
#define DENALI_CTL_1080_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1080_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1081
//****************************************************************************************************************
#define DENALI_CTL_1081						(MC_BASE + 0x10e4), MC_ACCESS, 32  /* Offset: 0x10e4 */
#define DENALI_CTL_1081_AXI10_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1081_AXI10_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1082
//****************************************************************************************************************
#define DENALI_CTL_1082						(MC_BASE + 0x10e8), MC_ACCESS, 32  /* Offset: 0x10e8 */
#define DENALI_CTL_1082_AXI10_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1082_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1083
//****************************************************************************************************************
#define DENALI_CTL_1083						(MC_BASE + 0x10ec), MC_ACCESS, 32  /* Offset: 0x10ec */
#define DENALI_CTL_1083_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1083_AXI10_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1084
//****************************************************************************************************************
#define DENALI_CTL_1084						(MC_BASE + 0x10f0), MC_ACCESS, 32  /* Offset: 0x10f0 */
#define DENALI_CTL_1084_AXI10_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1084_AXI10_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1085
//****************************************************************************************************************
#define DENALI_CTL_1085						(MC_BASE + 0x10f4), MC_ACCESS, 32  /* Offset: 0x10f4 */
#define DENALI_CTL_1085_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1085_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1086
//****************************************************************************************************************
#define DENALI_CTL_1086						(MC_BASE + 0x10f8), MC_ACCESS, 32  /* Offset: 0x10f8 */
#define DENALI_CTL_1086_AXI10_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1086_AXI10_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1087
//****************************************************************************************************************
#define DENALI_CTL_1087						(MC_BASE + 0x10fc), MC_ACCESS, 32  /* Offset: 0x10fc */
#define DENALI_CTL_1087_AXI10_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1087_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1088
//****************************************************************************************************************
#define DENALI_CTL_1088						(MC_BASE + 0x1100), MC_ACCESS, 32  /* Offset: 0x1100 */
#define DENALI_CTL_1088_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1088_AXI10_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1089
//****************************************************************************************************************
#define DENALI_CTL_1089						(MC_BASE + 0x1104), MC_ACCESS, 32  /* Offset: 0x1104 */
#define DENALI_CTL_1089_AXI10_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1089_AXI10_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1090
//****************************************************************************************************************
#define DENALI_CTL_1090						(MC_BASE + 0x1108), MC_ACCESS, 32  /* Offset: 0x1108 */
#define DENALI_CTL_1090_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1090_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1091
//****************************************************************************************************************
#define DENALI_CTL_1091						(MC_BASE + 0x110c), MC_ACCESS, 32  /* Offset: 0x110c */
#define DENALI_CTL_1091_AXI10_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1091_AXI10_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1092
//****************************************************************************************************************
#define DENALI_CTL_1092						(MC_BASE + 0x1110), MC_ACCESS, 32  /* Offset: 0x1110 */
#define DENALI_CTL_1092_AXI10_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1092_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1093
//****************************************************************************************************************
#define DENALI_CTL_1093						(MC_BASE + 0x1114), MC_ACCESS, 32  /* Offset: 0x1114 */
#define DENALI_CTL_1093_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1093_AXI10_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1094
//****************************************************************************************************************
#define DENALI_CTL_1094						(MC_BASE + 0x1118), MC_ACCESS, 32  /* Offset: 0x1118 */
#define DENALI_CTL_1094_AXI10_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1094_AXI10_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1095
//****************************************************************************************************************
#define DENALI_CTL_1095						(MC_BASE + 0x111c), MC_ACCESS, 32  /* Offset: 0x111c */
#define DENALI_CTL_1095_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1095_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1096
//****************************************************************************************************************
#define DENALI_CTL_1096						(MC_BASE + 0x1120), MC_ACCESS, 32  /* Offset: 0x1120 */
#define DENALI_CTL_1096_AXI10_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1096_AXI10_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1097
//****************************************************************************************************************
#define DENALI_CTL_1097						(MC_BASE + 0x1124), MC_ACCESS, 32  /* Offset: 0x1124 */
#define DENALI_CTL_1097_AXI10_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1097_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1098
//****************************************************************************************************************
#define DENALI_CTL_1098						(MC_BASE + 0x1128), MC_ACCESS, 32  /* Offset: 0x1128 */
#define DENALI_CTL_1098_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1098_AXI10_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1099
//****************************************************************************************************************
#define DENALI_CTL_1099						(MC_BASE + 0x112c), MC_ACCESS, 32  /* Offset: 0x112c */
#define DENALI_CTL_1099_AXI10_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1099_AXI10_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1100
//****************************************************************************************************************
#define DENALI_CTL_1100						(MC_BASE + 0x1130), MC_ACCESS, 32  /* Offset: 0x1130 */
#define DENALI_CTL_1100_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1100_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1101
//****************************************************************************************************************
#define DENALI_CTL_1101						(MC_BASE + 0x1134), MC_ACCESS, 32  /* Offset: 0x1134 */
#define DENALI_CTL_1101_AXI10_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1101_AXI10_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1102
//****************************************************************************************************************
#define DENALI_CTL_1102						(MC_BASE + 0x1138), MC_ACCESS, 32  /* Offset: 0x1138 */
#define DENALI_CTL_1102_AXI10_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1102_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1103
//****************************************************************************************************************
#define DENALI_CTL_1103						(MC_BASE + 0x113c), MC_ACCESS, 32  /* Offset: 0x113c */
#define DENALI_CTL_1103_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1103_AXI10_RANGE_PROT_BITS_10		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1104
//****************************************************************************************************************
#define DENALI_CTL_1104						(MC_BASE + 0x1140), MC_ACCESS, 32  /* Offset: 0x1140 */
#define DENALI_CTL_1104_AXI10_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1104_AXI10_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1105
//****************************************************************************************************************
#define DENALI_CTL_1105						(MC_BASE + 0x1144), MC_ACCESS, 32  /* Offset: 0x1144 */
#define DENALI_CTL_1105_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1105_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1106
//****************************************************************************************************************
#define DENALI_CTL_1106						(MC_BASE + 0x1148), MC_ACCESS, 32  /* Offset: 0x1148 */
#define DENALI_CTL_1106_AXI10_RANGE_PROT_BITS_11		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1106_AXI10_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1107
//****************************************************************************************************************
#define DENALI_CTL_1107						(MC_BASE + 0x114c), MC_ACCESS, 32  /* Offset: 0x114c */
#define DENALI_CTL_1107_AXI10_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1107_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1108
//****************************************************************************************************************
#define DENALI_CTL_1108						(MC_BASE + 0x1150), MC_ACCESS, 32  /* Offset: 0x1150 */
#define DENALI_CTL_1108_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1108_AXI10_RANGE_PROT_BITS_12		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1109
//****************************************************************************************************************
#define DENALI_CTL_1109						(MC_BASE + 0x1154), MC_ACCESS, 32  /* Offset: 0x1154 */
#define DENALI_CTL_1109_AXI10_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1109_AXI10_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1110
//****************************************************************************************************************
#define DENALI_CTL_1110						(MC_BASE + 0x1158), MC_ACCESS, 32  /* Offset: 0x1158 */
#define DENALI_CTL_1110_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1110_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1111
//****************************************************************************************************************
#define DENALI_CTL_1111						(MC_BASE + 0x115c), MC_ACCESS, 32  /* Offset: 0x115c */
#define DENALI_CTL_1111_AXI10_RANGE_PROT_BITS_13		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1111_AXI10_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1112
//****************************************************************************************************************
#define DENALI_CTL_1112						(MC_BASE + 0x1160), MC_ACCESS, 32  /* Offset: 0x1160 */
#define DENALI_CTL_1112_AXI10_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1112_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1113
//****************************************************************************************************************
#define DENALI_CTL_1113						(MC_BASE + 0x1164), MC_ACCESS, 32  /* Offset: 0x1164 */
#define DENALI_CTL_1113_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1113_AXI10_RANGE_PROT_BITS_14		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1114
//****************************************************************************************************************
#define DENALI_CTL_1114						(MC_BASE + 0x1168), MC_ACCESS, 32  /* Offset: 0x1168 */
#define DENALI_CTL_1114_AXI10_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1114_AXI10_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1115
//****************************************************************************************************************
#define DENALI_CTL_1115						(MC_BASE + 0x116c), MC_ACCESS, 32  /* Offset: 0x116c */
#define DENALI_CTL_1115_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1115_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1116
//****************************************************************************************************************
#define DENALI_CTL_1116						(MC_BASE + 0x1170), MC_ACCESS, 32  /* Offset: 0x1170 */
#define DENALI_CTL_1116_AXI10_RANGE_PROT_BITS_15		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 10 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1116_AXI10_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 10 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1117
//****************************************************************************************************************
#define DENALI_CTL_1117						(MC_BASE + 0x1174), MC_ACCESS, 32  /* Offset: 0x1174 */
#define DENALI_CTL_1117_AXI10_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 10 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1117_AXI10_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1118
//****************************************************************************************************************
#define DENALI_CTL_1118						(MC_BASE + 0x1178), MC_ACCESS, 32  /* Offset: 0x1178 */
#define DENALI_CTL_1118_AXI10_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.10._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1118_AXI11_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1119
//****************************************************************************************************************
#define DENALI_CTL_1119						(MC_BASE + 0x117c), MC_ACCESS, 32  /* Offset: 0x117c */
#define DENALI_CTL_1119_AXI11_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1119_AXI11_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1120
//****************************************************************************************************************
#define DENALI_CTL_1120						(MC_BASE + 0x1180), MC_ACCESS, 32  /* Offset: 0x1180 */
#define DENALI_CTL_1120_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1120_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1121
//****************************************************************************************************************
#define DENALI_CTL_1121						(MC_BASE + 0x1184), MC_ACCESS, 32  /* Offset: 0x1184 */
#define DENALI_CTL_1121_AXI11_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1121_AXI11_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1122
//****************************************************************************************************************
#define DENALI_CTL_1122						(MC_BASE + 0x1188), MC_ACCESS, 32  /* Offset: 0x1188 */
#define DENALI_CTL_1122_AXI11_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1122_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1123
//****************************************************************************************************************
#define DENALI_CTL_1123						(MC_BASE + 0x118c), MC_ACCESS, 32  /* Offset: 0x118c */
#define DENALI_CTL_1123_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1123_AXI11_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1124
//****************************************************************************************************************
#define DENALI_CTL_1124						(MC_BASE + 0x1190), MC_ACCESS, 32  /* Offset: 0x1190 */
#define DENALI_CTL_1124_AXI11_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1124_AXI11_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1125
//****************************************************************************************************************
#define DENALI_CTL_1125						(MC_BASE + 0x1194), MC_ACCESS, 32  /* Offset: 0x1194 */
#define DENALI_CTL_1125_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1125_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1126
//****************************************************************************************************************
#define DENALI_CTL_1126						(MC_BASE + 0x1198), MC_ACCESS, 32  /* Offset: 0x1198 */
#define DENALI_CTL_1126_AXI11_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1126_AXI11_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1127
//****************************************************************************************************************
#define DENALI_CTL_1127						(MC_BASE + 0x119c), MC_ACCESS, 32  /* Offset: 0x119c */
#define DENALI_CTL_1127_AXI11_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1127_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1128
//****************************************************************************************************************
#define DENALI_CTL_1128						(MC_BASE + 0x11a0), MC_ACCESS, 32  /* Offset: 0x11a0 */
#define DENALI_CTL_1128_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1128_AXI11_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1129
//****************************************************************************************************************
#define DENALI_CTL_1129						(MC_BASE + 0x11a4), MC_ACCESS, 32  /* Offset: 0x11a4 */
#define DENALI_CTL_1129_AXI11_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1129_AXI11_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1130
//****************************************************************************************************************
#define DENALI_CTL_1130						(MC_BASE + 0x11a8), MC_ACCESS, 32  /* Offset: 0x11a8 */
#define DENALI_CTL_1130_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1130_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1131
//****************************************************************************************************************
#define DENALI_CTL_1131						(MC_BASE + 0x11ac), MC_ACCESS, 32  /* Offset: 0x11ac */
#define DENALI_CTL_1131_AXI11_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1131_AXI11_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1132
//****************************************************************************************************************
#define DENALI_CTL_1132						(MC_BASE + 0x11b0), MC_ACCESS, 32  /* Offset: 0x11b0 */
#define DENALI_CTL_1132_AXI11_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1132_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1133
//****************************************************************************************************************
#define DENALI_CTL_1133						(MC_BASE + 0x11b4), MC_ACCESS, 32  /* Offset: 0x11b4 */
#define DENALI_CTL_1133_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1133_AXI11_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1134
//****************************************************************************************************************
#define DENALI_CTL_1134						(MC_BASE + 0x11b8), MC_ACCESS, 32  /* Offset: 0x11b8 */
#define DENALI_CTL_1134_AXI11_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1134_AXI11_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1135
//****************************************************************************************************************
#define DENALI_CTL_1135						(MC_BASE + 0x11bc), MC_ACCESS, 32  /* Offset: 0x11bc */
#define DENALI_CTL_1135_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1135_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1136
//****************************************************************************************************************
#define DENALI_CTL_1136						(MC_BASE + 0x11c0), MC_ACCESS, 32  /* Offset: 0x11c0 */
#define DENALI_CTL_1136_AXI11_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1136_AXI11_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1137
//****************************************************************************************************************
#define DENALI_CTL_1137						(MC_BASE + 0x11c4), MC_ACCESS, 32  /* Offset: 0x11c4 */
#define DENALI_CTL_1137_AXI11_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1137_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1138
//****************************************************************************************************************
#define DENALI_CTL_1138						(MC_BASE + 0x11c8), MC_ACCESS, 32  /* Offset: 0x11c8 */
#define DENALI_CTL_1138_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1138_AXI11_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1139
//****************************************************************************************************************
#define DENALI_CTL_1139						(MC_BASE + 0x11cc), MC_ACCESS, 32  /* Offset: 0x11cc */
#define DENALI_CTL_1139_AXI11_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1139_AXI11_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1140
//****************************************************************************************************************
#define DENALI_CTL_1140						(MC_BASE + 0x11d0), MC_ACCESS, 32  /* Offset: 0x11d0 */
#define DENALI_CTL_1140_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1140_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1141
//****************************************************************************************************************
#define DENALI_CTL_1141						(MC_BASE + 0x11d4), MC_ACCESS, 32  /* Offset: 0x11d4 */
#define DENALI_CTL_1141_AXI11_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1141_AXI11_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1142
//****************************************************************************************************************
#define DENALI_CTL_1142						(MC_BASE + 0x11d8), MC_ACCESS, 32  /* Offset: 0x11d8 */
#define DENALI_CTL_1142_AXI11_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1142_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1143
//****************************************************************************************************************
#define DENALI_CTL_1143						(MC_BASE + 0x11dc), MC_ACCESS, 32  /* Offset: 0x11dc */
#define DENALI_CTL_1143_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1143_AXI11_RANGE_PROT_BITS_10		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1144
//****************************************************************************************************************
#define DENALI_CTL_1144						(MC_BASE + 0x11e0), MC_ACCESS, 32  /* Offset: 0x11e0 */
#define DENALI_CTL_1144_AXI11_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1144_AXI11_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1145
//****************************************************************************************************************
#define DENALI_CTL_1145						(MC_BASE + 0x11e4), MC_ACCESS, 32  /* Offset: 0x11e4 */
#define DENALI_CTL_1145_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1145_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1146
//****************************************************************************************************************
#define DENALI_CTL_1146						(MC_BASE + 0x11e8), MC_ACCESS, 32  /* Offset: 0x11e8 */
#define DENALI_CTL_1146_AXI11_RANGE_PROT_BITS_11		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1146_AXI11_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1147
//****************************************************************************************************************
#define DENALI_CTL_1147						(MC_BASE + 0x11ec), MC_ACCESS, 32  /* Offset: 0x11ec */
#define DENALI_CTL_1147_AXI11_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1147_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1148
//****************************************************************************************************************
#define DENALI_CTL_1148						(MC_BASE + 0x11f0), MC_ACCESS, 32  /* Offset: 0x11f0 */
#define DENALI_CTL_1148_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1148_AXI11_RANGE_PROT_BITS_12		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1149
//****************************************************************************************************************
#define DENALI_CTL_1149						(MC_BASE + 0x11f4), MC_ACCESS, 32  /* Offset: 0x11f4 */
#define DENALI_CTL_1149_AXI11_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1149_AXI11_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1150
//****************************************************************************************************************
#define DENALI_CTL_1150						(MC_BASE + 0x11f8), MC_ACCESS, 32  /* Offset: 0x11f8 */
#define DENALI_CTL_1150_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1150_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1151
//****************************************************************************************************************
#define DENALI_CTL_1151						(MC_BASE + 0x11fc), MC_ACCESS, 32  /* Offset: 0x11fc */
#define DENALI_CTL_1151_AXI11_RANGE_PROT_BITS_13		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1151_AXI11_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1152
//****************************************************************************************************************
#define DENALI_CTL_1152						(MC_BASE + 0x1200), MC_ACCESS, 32  /* Offset: 0x1200 */
#define DENALI_CTL_1152_AXI11_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1152_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1153
//****************************************************************************************************************
#define DENALI_CTL_1153						(MC_BASE + 0x1204), MC_ACCESS, 32  /* Offset: 0x1204 */
#define DENALI_CTL_1153_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1153_AXI11_RANGE_PROT_BITS_14		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1154
//****************************************************************************************************************
#define DENALI_CTL_1154						(MC_BASE + 0x1208), MC_ACCESS, 32  /* Offset: 0x1208 */
#define DENALI_CTL_1154_AXI11_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1154_AXI11_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1155
//****************************************************************************************************************
#define DENALI_CTL_1155						(MC_BASE + 0x120c), MC_ACCESS, 32  /* Offset: 0x120c */
#define DENALI_CTL_1155_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1155_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1156
//****************************************************************************************************************
#define DENALI_CTL_1156						(MC_BASE + 0x1210), MC_ACCESS, 32  /* Offset: 0x1210 */
#define DENALI_CTL_1156_AXI11_RANGE_PROT_BITS_15		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 11 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1156_AXI11_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 11 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1157
//****************************************************************************************************************
#define DENALI_CTL_1157						(MC_BASE + 0x1214), MC_ACCESS, 32  /* Offset: 0x1214 */
#define DENALI_CTL_1157_AXI11_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 11 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1157_AXI11_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1158
//****************************************************************************************************************
#define DENALI_CTL_1158						(MC_BASE + 0x1218), MC_ACCESS, 32  /* Offset: 0x1218 */
#define DENALI_CTL_1158_AXI11_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.11._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1158_AXI12_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1159
//****************************************************************************************************************
#define DENALI_CTL_1159						(MC_BASE + 0x121c), MC_ACCESS, 32  /* Offset: 0x121c */
#define DENALI_CTL_1159_AXI12_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1159_AXI12_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1160
//****************************************************************************************************************
#define DENALI_CTL_1160						(MC_BASE + 0x1220), MC_ACCESS, 32  /* Offset: 0x1220 */
#define DENALI_CTL_1160_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1160_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1161
//****************************************************************************************************************
#define DENALI_CTL_1161						(MC_BASE + 0x1224), MC_ACCESS, 32  /* Offset: 0x1224 */
#define DENALI_CTL_1161_AXI12_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1161_AXI12_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1162
//****************************************************************************************************************
#define DENALI_CTL_1162						(MC_BASE + 0x1228), MC_ACCESS, 32  /* Offset: 0x1228 */
#define DENALI_CTL_1162_AXI12_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1162_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1163
//****************************************************************************************************************
#define DENALI_CTL_1163						(MC_BASE + 0x122c), MC_ACCESS, 32  /* Offset: 0x122c */
#define DENALI_CTL_1163_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1163_AXI12_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1164
//****************************************************************************************************************
#define DENALI_CTL_1164						(MC_BASE + 0x1230), MC_ACCESS, 32  /* Offset: 0x1230 */
#define DENALI_CTL_1164_AXI12_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1164_AXI12_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1165
//****************************************************************************************************************
#define DENALI_CTL_1165						(MC_BASE + 0x1234), MC_ACCESS, 32  /* Offset: 0x1234 */
#define DENALI_CTL_1165_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1165_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1166
//****************************************************************************************************************
#define DENALI_CTL_1166						(MC_BASE + 0x1238), MC_ACCESS, 32  /* Offset: 0x1238 */
#define DENALI_CTL_1166_AXI12_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1166_AXI12_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1167
//****************************************************************************************************************
#define DENALI_CTL_1167						(MC_BASE + 0x123c), MC_ACCESS, 32  /* Offset: 0x123c */
#define DENALI_CTL_1167_AXI12_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1167_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1168
//****************************************************************************************************************
#define DENALI_CTL_1168						(MC_BASE + 0x1240), MC_ACCESS, 32  /* Offset: 0x1240 */
#define DENALI_CTL_1168_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1168_AXI12_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1169
//****************************************************************************************************************
#define DENALI_CTL_1169						(MC_BASE + 0x1244), MC_ACCESS, 32  /* Offset: 0x1244 */
#define DENALI_CTL_1169_AXI12_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1169_AXI12_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1170
//****************************************************************************************************************
#define DENALI_CTL_1170						(MC_BASE + 0x1248), MC_ACCESS, 32  /* Offset: 0x1248 */
#define DENALI_CTL_1170_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1170_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1171
//****************************************************************************************************************
#define DENALI_CTL_1171						(MC_BASE + 0x124c), MC_ACCESS, 32  /* Offset: 0x124c */
#define DENALI_CTL_1171_AXI12_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1171_AXI12_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1172
//****************************************************************************************************************
#define DENALI_CTL_1172						(MC_BASE + 0x1250), MC_ACCESS, 32  /* Offset: 0x1250 */
#define DENALI_CTL_1172_AXI12_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1172_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1173
//****************************************************************************************************************
#define DENALI_CTL_1173						(MC_BASE + 0x1254), MC_ACCESS, 32  /* Offset: 0x1254 */
#define DENALI_CTL_1173_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1173_AXI12_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1174
//****************************************************************************************************************
#define DENALI_CTL_1174						(MC_BASE + 0x1258), MC_ACCESS, 32  /* Offset: 0x1258 */
#define DENALI_CTL_1174_AXI12_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1174_AXI12_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1175
//****************************************************************************************************************
#define DENALI_CTL_1175						(MC_BASE + 0x125c), MC_ACCESS, 32  /* Offset: 0x125c */
#define DENALI_CTL_1175_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1175_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1176
//****************************************************************************************************************
#define DENALI_CTL_1176						(MC_BASE + 0x1260), MC_ACCESS, 32  /* Offset: 0x1260 */
#define DENALI_CTL_1176_AXI12_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1176_AXI12_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1177
//****************************************************************************************************************
#define DENALI_CTL_1177						(MC_BASE + 0x1264), MC_ACCESS, 32  /* Offset: 0x1264 */
#define DENALI_CTL_1177_AXI12_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1177_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1178
//****************************************************************************************************************
#define DENALI_CTL_1178						(MC_BASE + 0x1268), MC_ACCESS, 32  /* Offset: 0x1268 */
#define DENALI_CTL_1178_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1178_AXI12_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1179
//****************************************************************************************************************
#define DENALI_CTL_1179						(MC_BASE + 0x126c), MC_ACCESS, 32  /* Offset: 0x126c */
#define DENALI_CTL_1179_AXI12_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1179_AXI12_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1180
//****************************************************************************************************************
#define DENALI_CTL_1180						(MC_BASE + 0x1270), MC_ACCESS, 32  /* Offset: 0x1270 */
#define DENALI_CTL_1180_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1180_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1181
//****************************************************************************************************************
#define DENALI_CTL_1181						(MC_BASE + 0x1274), MC_ACCESS, 32  /* Offset: 0x1274 */
#define DENALI_CTL_1181_AXI12_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1181_AXI12_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1182
//****************************************************************************************************************
#define DENALI_CTL_1182						(MC_BASE + 0x1278), MC_ACCESS, 32  /* Offset: 0x1278 */
#define DENALI_CTL_1182_AXI12_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1182_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1183
//****************************************************************************************************************
#define DENALI_CTL_1183						(MC_BASE + 0x127c), MC_ACCESS, 32  /* Offset: 0x127c */
#define DENALI_CTL_1183_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1183_AXI12_RANGE_PROT_BITS_10		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1184
//****************************************************************************************************************
#define DENALI_CTL_1184						(MC_BASE + 0x1280), MC_ACCESS, 32  /* Offset: 0x1280 */
#define DENALI_CTL_1184_AXI12_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1184_AXI12_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1185
//****************************************************************************************************************
#define DENALI_CTL_1185						(MC_BASE + 0x1284), MC_ACCESS, 32  /* Offset: 0x1284 */
#define DENALI_CTL_1185_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1185_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1186
//****************************************************************************************************************
#define DENALI_CTL_1186						(MC_BASE + 0x1288), MC_ACCESS, 32  /* Offset: 0x1288 */
#define DENALI_CTL_1186_AXI12_RANGE_PROT_BITS_11		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1186_AXI12_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1187
//****************************************************************************************************************
#define DENALI_CTL_1187						(MC_BASE + 0x128c), MC_ACCESS, 32  /* Offset: 0x128c */
#define DENALI_CTL_1187_AXI12_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1187_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1188
//****************************************************************************************************************
#define DENALI_CTL_1188						(MC_BASE + 0x1290), MC_ACCESS, 32  /* Offset: 0x1290 */
#define DENALI_CTL_1188_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1188_AXI12_RANGE_PROT_BITS_12		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1189
//****************************************************************************************************************
#define DENALI_CTL_1189						(MC_BASE + 0x1294), MC_ACCESS, 32  /* Offset: 0x1294 */
#define DENALI_CTL_1189_AXI12_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1189_AXI12_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1190
//****************************************************************************************************************
#define DENALI_CTL_1190						(MC_BASE + 0x1298), MC_ACCESS, 32  /* Offset: 0x1298 */
#define DENALI_CTL_1190_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1190_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1191
//****************************************************************************************************************
#define DENALI_CTL_1191						(MC_BASE + 0x129c), MC_ACCESS, 32  /* Offset: 0x129c */
#define DENALI_CTL_1191_AXI12_RANGE_PROT_BITS_13		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1191_AXI12_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1192
//****************************************************************************************************************
#define DENALI_CTL_1192						(MC_BASE + 0x12a0), MC_ACCESS, 32  /* Offset: 0x12a0 */
#define DENALI_CTL_1192_AXI12_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1192_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1193
//****************************************************************************************************************
#define DENALI_CTL_1193						(MC_BASE + 0x12a4), MC_ACCESS, 32  /* Offset: 0x12a4 */
#define DENALI_CTL_1193_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1193_AXI12_RANGE_PROT_BITS_14		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1194
//****************************************************************************************************************
#define DENALI_CTL_1194						(MC_BASE + 0x12a8), MC_ACCESS, 32  /* Offset: 0x12a8 */
#define DENALI_CTL_1194_AXI12_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1194_AXI12_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1195
//****************************************************************************************************************
#define DENALI_CTL_1195						(MC_BASE + 0x12ac), MC_ACCESS, 32  /* Offset: 0x12ac */
#define DENALI_CTL_1195_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1195_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1196
//****************************************************************************************************************
#define DENALI_CTL_1196						(MC_BASE + 0x12b0), MC_ACCESS, 32  /* Offset: 0x12b0 */
#define DENALI_CTL_1196_AXI12_RANGE_PROT_BITS_15		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 12 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1196_AXI12_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 12 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1197
//****************************************************************************************************************
#define DENALI_CTL_1197						(MC_BASE + 0x12b4), MC_ACCESS, 32  /* Offset: 0x12b4 */
#define DENALI_CTL_1197_AXI12_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 12 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1197_AXI12_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1198
//****************************************************************************************************************
#define DENALI_CTL_1198						(MC_BASE + 0x12b8), MC_ACCESS, 32  /* Offset: 0x12b8 */
#define DENALI_CTL_1198_AXI12_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.12._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1198_AXI13_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1199
//****************************************************************************************************************
#define DENALI_CTL_1199						(MC_BASE + 0x12bc), MC_ACCESS, 32  /* Offset: 0x12bc */
#define DENALI_CTL_1199_AXI13_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1199_AXI13_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1200
//****************************************************************************************************************
#define DENALI_CTL_1200						(MC_BASE + 0x12c0), MC_ACCESS, 32  /* Offset: 0x12c0 */
#define DENALI_CTL_1200_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1200_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1201
//****************************************************************************************************************
#define DENALI_CTL_1201						(MC_BASE + 0x12c4), MC_ACCESS, 32  /* Offset: 0x12c4 */
#define DENALI_CTL_1201_AXI13_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1201_AXI13_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1202
//****************************************************************************************************************
#define DENALI_CTL_1202						(MC_BASE + 0x12c8), MC_ACCESS, 32  /* Offset: 0x12c8 */
#define DENALI_CTL_1202_AXI13_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1202_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1203
//****************************************************************************************************************
#define DENALI_CTL_1203						(MC_BASE + 0x12cc), MC_ACCESS, 32  /* Offset: 0x12cc */
#define DENALI_CTL_1203_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1203_AXI13_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1204
//****************************************************************************************************************
#define DENALI_CTL_1204						(MC_BASE + 0x12d0), MC_ACCESS, 32  /* Offset: 0x12d0 */
#define DENALI_CTL_1204_AXI13_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1204_AXI13_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1205
//****************************************************************************************************************
#define DENALI_CTL_1205						(MC_BASE + 0x12d4), MC_ACCESS, 32  /* Offset: 0x12d4 */
#define DENALI_CTL_1205_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1205_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1206
//****************************************************************************************************************
#define DENALI_CTL_1206						(MC_BASE + 0x12d8), MC_ACCESS, 32  /* Offset: 0x12d8 */
#define DENALI_CTL_1206_AXI13_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1206_AXI13_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1207
//****************************************************************************************************************
#define DENALI_CTL_1207						(MC_BASE + 0x12dc), MC_ACCESS, 32  /* Offset: 0x12dc */
#define DENALI_CTL_1207_AXI13_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1207_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1208
//****************************************************************************************************************
#define DENALI_CTL_1208						(MC_BASE + 0x12e0), MC_ACCESS, 32  /* Offset: 0x12e0 */
#define DENALI_CTL_1208_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1208_AXI13_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1209
//****************************************************************************************************************
#define DENALI_CTL_1209						(MC_BASE + 0x12e4), MC_ACCESS, 32  /* Offset: 0x12e4 */
#define DENALI_CTL_1209_AXI13_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1209_AXI13_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1210
//****************************************************************************************************************
#define DENALI_CTL_1210						(MC_BASE + 0x12e8), MC_ACCESS, 32  /* Offset: 0x12e8 */
#define DENALI_CTL_1210_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1210_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1211
//****************************************************************************************************************
#define DENALI_CTL_1211						(MC_BASE + 0x12ec), MC_ACCESS, 32  /* Offset: 0x12ec */
#define DENALI_CTL_1211_AXI13_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1211_AXI13_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1212
//****************************************************************************************************************
#define DENALI_CTL_1212						(MC_BASE + 0x12f0), MC_ACCESS, 32  /* Offset: 0x12f0 */
#define DENALI_CTL_1212_AXI13_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1212_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1213
//****************************************************************************************************************
#define DENALI_CTL_1213						(MC_BASE + 0x12f4), MC_ACCESS, 32  /* Offset: 0x12f4 */
#define DENALI_CTL_1213_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1213_AXI13_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1214
//****************************************************************************************************************
#define DENALI_CTL_1214						(MC_BASE + 0x12f8), MC_ACCESS, 32  /* Offset: 0x12f8 */
#define DENALI_CTL_1214_AXI13_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1214_AXI13_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1215
//****************************************************************************************************************
#define DENALI_CTL_1215						(MC_BASE + 0x12fc), MC_ACCESS, 32  /* Offset: 0x12fc */
#define DENALI_CTL_1215_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1215_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1216
//****************************************************************************************************************
#define DENALI_CTL_1216						(MC_BASE + 0x1300), MC_ACCESS, 32  /* Offset: 0x1300 */
#define DENALI_CTL_1216_AXI13_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1216_AXI13_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1217
//****************************************************************************************************************
#define DENALI_CTL_1217						(MC_BASE + 0x1304), MC_ACCESS, 32  /* Offset: 0x1304 */
#define DENALI_CTL_1217_AXI13_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1217_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1218
//****************************************************************************************************************
#define DENALI_CTL_1218						(MC_BASE + 0x1308), MC_ACCESS, 32  /* Offset: 0x1308 */
#define DENALI_CTL_1218_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1218_AXI13_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1219
//****************************************************************************************************************
#define DENALI_CTL_1219						(MC_BASE + 0x130c), MC_ACCESS, 32  /* Offset: 0x130c */
#define DENALI_CTL_1219_AXI13_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1219_AXI13_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1220
//****************************************************************************************************************
#define DENALI_CTL_1220						(MC_BASE + 0x1310), MC_ACCESS, 32  /* Offset: 0x1310 */
#define DENALI_CTL_1220_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1220_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1221
//****************************************************************************************************************
#define DENALI_CTL_1221						(MC_BASE + 0x1314), MC_ACCESS, 32  /* Offset: 0x1314 */
#define DENALI_CTL_1221_AXI13_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1221_AXI13_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1222
//****************************************************************************************************************
#define DENALI_CTL_1222						(MC_BASE + 0x1318), MC_ACCESS, 32  /* Offset: 0x1318 */
#define DENALI_CTL_1222_AXI13_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1222_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1223
//****************************************************************************************************************
#define DENALI_CTL_1223						(MC_BASE + 0x131c), MC_ACCESS, 32  /* Offset: 0x131c */
#define DENALI_CTL_1223_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1223_AXI13_RANGE_PROT_BITS_10		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1224
//****************************************************************************************************************
#define DENALI_CTL_1224						(MC_BASE + 0x1320), MC_ACCESS, 32  /* Offset: 0x1320 */
#define DENALI_CTL_1224_AXI13_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1224_AXI13_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1225
//****************************************************************************************************************
#define DENALI_CTL_1225						(MC_BASE + 0x1324), MC_ACCESS, 32  /* Offset: 0x1324 */
#define DENALI_CTL_1225_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1225_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1226
//****************************************************************************************************************
#define DENALI_CTL_1226						(MC_BASE + 0x1328), MC_ACCESS, 32  /* Offset: 0x1328 */
#define DENALI_CTL_1226_AXI13_RANGE_PROT_BITS_11		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1226_AXI13_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1227
//****************************************************************************************************************
#define DENALI_CTL_1227						(MC_BASE + 0x132c), MC_ACCESS, 32  /* Offset: 0x132c */
#define DENALI_CTL_1227_AXI13_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1227_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1228
//****************************************************************************************************************
#define DENALI_CTL_1228						(MC_BASE + 0x1330), MC_ACCESS, 32  /* Offset: 0x1330 */
#define DENALI_CTL_1228_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1228_AXI13_RANGE_PROT_BITS_12		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1229
//****************************************************************************************************************
#define DENALI_CTL_1229						(MC_BASE + 0x1334), MC_ACCESS, 32  /* Offset: 0x1334 */
#define DENALI_CTL_1229_AXI13_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1229_AXI13_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1230
//****************************************************************************************************************
#define DENALI_CTL_1230						(MC_BASE + 0x1338), MC_ACCESS, 32  /* Offset: 0x1338 */
#define DENALI_CTL_1230_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1230_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1231
//****************************************************************************************************************
#define DENALI_CTL_1231						(MC_BASE + 0x133c), MC_ACCESS, 32  /* Offset: 0x133c */
#define DENALI_CTL_1231_AXI13_RANGE_PROT_BITS_13		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1231_AXI13_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1232
//****************************************************************************************************************
#define DENALI_CTL_1232						(MC_BASE + 0x1340), MC_ACCESS, 32  /* Offset: 0x1340 */
#define DENALI_CTL_1232_AXI13_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1232_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1233
//****************************************************************************************************************
#define DENALI_CTL_1233						(MC_BASE + 0x1344), MC_ACCESS, 32  /* Offset: 0x1344 */
#define DENALI_CTL_1233_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1233_AXI13_RANGE_PROT_BITS_14		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1234
//****************************************************************************************************************
#define DENALI_CTL_1234						(MC_BASE + 0x1348), MC_ACCESS, 32  /* Offset: 0x1348 */
#define DENALI_CTL_1234_AXI13_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1234_AXI13_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1235
//****************************************************************************************************************
#define DENALI_CTL_1235						(MC_BASE + 0x134c), MC_ACCESS, 32  /* Offset: 0x134c */
#define DENALI_CTL_1235_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1235_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1236
//****************************************************************************************************************
#define DENALI_CTL_1236						(MC_BASE + 0x1350), MC_ACCESS, 32  /* Offset: 0x1350 */
#define DENALI_CTL_1236_AXI13_RANGE_PROT_BITS_15		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 13 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1236_AXI13_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 13 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1237
//****************************************************************************************************************
#define DENALI_CTL_1237						(MC_BASE + 0x1354), MC_ACCESS, 32  /* Offset: 0x1354 */
#define DENALI_CTL_1237_AXI13_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 13 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1237_AXI13_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1238
//****************************************************************************************************************
#define DENALI_CTL_1238						(MC_BASE + 0x1358), MC_ACCESS, 32  /* Offset: 0x1358 */
#define DENALI_CTL_1238_AXI13_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.13._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1238_AXI14_RANGE_PROT_BITS_0			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 0. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1239
//****************************************************************************************************************
#define DENALI_CTL_1239						(MC_BASE + 0x135c), MC_ACCESS, 32  /* Offset: 0x135c */
#define DENALI_CTL_1239_AXI14_RANGE_RID_CHECK_BITS_0		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1239_AXI14_RANGE_WID_CHECK_BITS_0		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 0. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1240
//****************************************************************************************************************
#define DENALI_CTL_1240						(MC_BASE + 0x1360), MC_ACCESS, 32  /* Offset: 0x1360 */
#define DENALI_CTL_1240_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_0	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1240_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_0	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_0. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1241
//****************************************************************************************************************
#define DENALI_CTL_1241						(MC_BASE + 0x1364), MC_ACCESS, 32  /* Offset: 0x1364 */
#define DENALI_CTL_1241_AXI14_RANGE_PROT_BITS_1			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 1. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1241_AXI14_RANGE_RID_CHECK_BITS_1		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1242
//****************************************************************************************************************
#define DENALI_CTL_1242						(MC_BASE + 0x1368), MC_ACCESS, 32  /* Offset: 0x1368 */
#define DENALI_CTL_1242_AXI14_RANGE_WID_CHECK_BITS_1		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 1. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1242_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_1	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1243
//****************************************************************************************************************
#define DENALI_CTL_1243						(MC_BASE + 0x136c), MC_ACCESS, 32  /* Offset: 0x136c */
#define DENALI_CTL_1243_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_1	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_1. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1243_AXI14_RANGE_PROT_BITS_2			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 2. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1244
//****************************************************************************************************************
#define DENALI_CTL_1244						(MC_BASE + 0x1370), MC_ACCESS, 32  /* Offset: 0x1370 */
#define DENALI_CTL_1244_AXI14_RANGE_RID_CHECK_BITS_2		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1244_AXI14_RANGE_WID_CHECK_BITS_2		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 2. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1245
//****************************************************************************************************************
#define DENALI_CTL_1245						(MC_BASE + 0x1374), MC_ACCESS, 32  /* Offset: 0x1374 */
#define DENALI_CTL_1245_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_2	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1245_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_2	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_2. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1246
//****************************************************************************************************************
#define DENALI_CTL_1246						(MC_BASE + 0x1378), MC_ACCESS, 32  /* Offset: 0x1378 */
#define DENALI_CTL_1246_AXI14_RANGE_PROT_BITS_3			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 3. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1246_AXI14_RANGE_RID_CHECK_BITS_3		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1247
//****************************************************************************************************************
#define DENALI_CTL_1247						(MC_BASE + 0x137c), MC_ACCESS, 32  /* Offset: 0x137c */
#define DENALI_CTL_1247_AXI14_RANGE_WID_CHECK_BITS_3		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 3. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1247_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_3	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1248
//****************************************************************************************************************
#define DENALI_CTL_1248						(MC_BASE + 0x1380), MC_ACCESS, 32  /* Offset: 0x1380 */
#define DENALI_CTL_1248_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_3	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_3. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1248_AXI14_RANGE_PROT_BITS_4			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 4. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1249
//****************************************************************************************************************
#define DENALI_CTL_1249						(MC_BASE + 0x1384), MC_ACCESS, 32  /* Offset: 0x1384 */
#define DENALI_CTL_1249_AXI14_RANGE_RID_CHECK_BITS_4		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1249_AXI14_RANGE_WID_CHECK_BITS_4		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 4. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1250
//****************************************************************************************************************
#define DENALI_CTL_1250						(MC_BASE + 0x1388), MC_ACCESS, 32  /* Offset: 0x1388 */
#define DENALI_CTL_1250_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_4	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1250_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_4	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_4. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1251
//****************************************************************************************************************
#define DENALI_CTL_1251						(MC_BASE + 0x138c), MC_ACCESS, 32  /* Offset: 0x138c */
#define DENALI_CTL_1251_AXI14_RANGE_PROT_BITS_5			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 5. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1251_AXI14_RANGE_RID_CHECK_BITS_5		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1252
//****************************************************************************************************************
#define DENALI_CTL_1252						(MC_BASE + 0x1390), MC_ACCESS, 32  /* Offset: 0x1390 */
#define DENALI_CTL_1252_AXI14_RANGE_WID_CHECK_BITS_5		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 5. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1252_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_5	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1253
//****************************************************************************************************************
#define DENALI_CTL_1253						(MC_BASE + 0x1394), MC_ACCESS, 32  /* Offset: 0x1394 */
#define DENALI_CTL_1253_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_5	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_5. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1253_AXI14_RANGE_PROT_BITS_6			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 6. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1254
//****************************************************************************************************************
#define DENALI_CTL_1254						(MC_BASE + 0x1398), MC_ACCESS, 32  /* Offset: 0x1398 */
#define DENALI_CTL_1254_AXI14_RANGE_RID_CHECK_BITS_6		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1254_AXI14_RANGE_WID_CHECK_BITS_6		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 6. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1255
//****************************************************************************************************************
#define DENALI_CTL_1255						(MC_BASE + 0x139c), MC_ACCESS, 32  /* Offset: 0x139c */
#define DENALI_CTL_1255_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_6	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1255_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_6	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_6. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1256
//****************************************************************************************************************
#define DENALI_CTL_1256						(MC_BASE + 0x13a0), MC_ACCESS, 32  /* Offset: 0x13a0 */
#define DENALI_CTL_1256_AXI14_RANGE_PROT_BITS_7			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 7. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1256_AXI14_RANGE_RID_CHECK_BITS_7		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1257
//****************************************************************************************************************
#define DENALI_CTL_1257						(MC_BASE + 0x13a4), MC_ACCESS, 32  /* Offset: 0x13a4 */
#define DENALI_CTL_1257_AXI14_RANGE_WID_CHECK_BITS_7		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 7. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1257_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_7	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1258
//****************************************************************************************************************
#define DENALI_CTL_1258						(MC_BASE + 0x13a8), MC_ACCESS, 32  /* Offset: 0x13a8 */
#define DENALI_CTL_1258_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_7	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_7. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1258_AXI14_RANGE_PROT_BITS_8			16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 8. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1259
//****************************************************************************************************************
#define DENALI_CTL_1259						(MC_BASE + 0x13ac), MC_ACCESS, 32  /* Offset: 0x13ac */
#define DENALI_CTL_1259_AXI14_RANGE_RID_CHECK_BITS_8		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1259_AXI14_RANGE_WID_CHECK_BITS_8		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 8. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1260
//****************************************************************************************************************
#define DENALI_CTL_1260						(MC_BASE + 0x13b0), MC_ACCESS, 32  /* Offset: 0x13b0 */
#define DENALI_CTL_1260_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_8	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1260_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_8	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_8. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1261
//****************************************************************************************************************
#define DENALI_CTL_1261						(MC_BASE + 0x13b4), MC_ACCESS, 32  /* Offset: 0x13b4 */
#define DENALI_CTL_1261_AXI14_RANGE_PROT_BITS_9			 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 9. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1261_AXI14_RANGE_RID_CHECK_BITS_9		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1262
//****************************************************************************************************************
#define DENALI_CTL_1262						(MC_BASE + 0x13b8), MC_ACCESS, 32  /* Offset: 0x13b8 */
#define DENALI_CTL_1262_AXI14_RANGE_WID_CHECK_BITS_9		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 9. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1262_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_9	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1263
//****************************************************************************************************************
#define DENALI_CTL_1263						(MC_BASE + 0x13bc), MC_ACCESS, 32  /* Offset: 0x13bc */
#define DENALI_CTL_1263_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_9	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_9. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1263_AXI14_RANGE_PROT_BITS_10		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 10. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1264
//****************************************************************************************************************
#define DENALI_CTL_1264						(MC_BASE + 0x13c0), MC_ACCESS, 32  /* Offset: 0x13c0 */
#define DENALI_CTL_1264_AXI14_RANGE_RID_CHECK_BITS_10		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1264_AXI14_RANGE_WID_CHECK_BITS_10		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 10. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1265
//****************************************************************************************************************
#define DENALI_CTL_1265						(MC_BASE + 0x13c4), MC_ACCESS, 32  /* Offset: 0x13c4 */
#define DENALI_CTL_1265_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_10	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1265_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_10	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_10. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1266
//****************************************************************************************************************
#define DENALI_CTL_1266						(MC_BASE + 0x13c8), MC_ACCESS, 32  /* Offset: 0x13c8 */
#define DENALI_CTL_1266_AXI14_RANGE_PROT_BITS_11		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 11. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1266_AXI14_RANGE_RID_CHECK_BITS_11		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1267
//****************************************************************************************************************
#define DENALI_CTL_1267						(MC_BASE + 0x13cc), MC_ACCESS, 32  /* Offset: 0x13cc */
#define DENALI_CTL_1267_AXI14_RANGE_WID_CHECK_BITS_11		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 11. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1267_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_11	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1268
//****************************************************************************************************************
#define DENALI_CTL_1268						(MC_BASE + 0x13d0), MC_ACCESS, 32  /* Offset: 0x13d0 */
#define DENALI_CTL_1268_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_11	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_11. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1268_AXI14_RANGE_PROT_BITS_12		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 12. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1269
//****************************************************************************************************************
#define DENALI_CTL_1269						(MC_BASE + 0x13d4), MC_ACCESS, 32  /* Offset: 0x13d4 */
#define DENALI_CTL_1269_AXI14_RANGE_RID_CHECK_BITS_12		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1269_AXI14_RANGE_WID_CHECK_BITS_12		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 12. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1270
//****************************************************************************************************************
#define DENALI_CTL_1270						(MC_BASE + 0x13d8), MC_ACCESS, 32  /* Offset: 0x13d8 */
#define DENALI_CTL_1270_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_12	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1270_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_12	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_12. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1271
//****************************************************************************************************************
#define DENALI_CTL_1271						(MC_BASE + 0x13dc), MC_ACCESS, 32  /* Offset: 0x13dc */
#define DENALI_CTL_1271_AXI14_RANGE_PROT_BITS_13		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 13. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1271_AXI14_RANGE_RID_CHECK_BITS_13		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1272
//****************************************************************************************************************
#define DENALI_CTL_1272						(MC_BASE + 0x13e0), MC_ACCESS, 32  /* Offset: 0x13e0 */
#define DENALI_CTL_1272_AXI14_RANGE_WID_CHECK_BITS_13		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 13. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1272_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_13	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1273
//****************************************************************************************************************
#define DENALI_CTL_1273						(MC_BASE + 0x13e4), MC_ACCESS, 32  /* Offset: 0x13e4 */
#define DENALI_CTL_1273_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_13	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_13. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1273_AXI14_RANGE_PROT_BITS_14		16 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 14. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1274
//****************************************************************************************************************
#define DENALI_CTL_1274						(MC_BASE + 0x13e8), MC_ACCESS, 32  /* Offset: 0x13e8 */
#define DENALI_CTL_1274_AXI14_RANGE_RID_CHECK_BITS_14		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1274_AXI14_RANGE_WID_CHECK_BITS_14		16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 14. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1275
//****************************************************************************************************************
#define DENALI_CTL_1275						(MC_BASE + 0x13ec), MC_ACCESS, 32  /* Offset: 0x13ec */
#define DENALI_CTL_1275_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_14	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1275_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_14	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_14. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1276
//****************************************************************************************************************
#define DENALI_CTL_1276						(MC_BASE + 0x13f0), MC_ACCESS, 32  /* Offset: 0x13f0 */
#define DENALI_CTL_1276_AXI14_RANGE_PROT_BITS_15		 0 ,  2  /* Type: RW ; Reset: 0x0 ; Desc: Allowed transaction types for port 14 address range 15. Clear to 0 for privileged and secure only, program to 1 for secure (with or without privileged), program to 2 for privileged (with or without secure), or program to 3 for full access. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1276_AXI14_RANGE_RID_CHECK_BITS_15		 8 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed read IDs for port 14 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1277
//****************************************************************************************************************
#define DENALI_CTL_1277						(MC_BASE + 0x13f4), MC_ACCESS, 32  /* Offset: 0x13f4 */
#define DENALI_CTL_1277_AXI14_RANGE_WID_CHECK_BITS_15		 0 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Allowed write IDs for port 14 address range 15. Bit (0) correlates to requestor 0, bit (1) correlates to requestor 1, etc. Set each bit to 1 to enable. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */
#define DENALI_CTL_1277_AXI14_RANGE_RID_CHECK_BITS_ID_LOOKUP_15	16 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_RID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1278
//****************************************************************************************************************
#define DENALI_CTL_1278						(MC_BASE + 0x13f8), MC_ACCESS, 32  /* Offset: 0x13f8 */
#define DENALI_CTL_1278_AXI14_RANGE_WID_CHECK_BITS_ID_LOOKUP_15	 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Identifies which four ID bits to used to index into AXI.14._RANGE_WID_CHECK_BITS_15. This may only be changed before initialization begins or when the controller is quiescent, there is no data in the port FIFOs, and PORT_ADDR_PROTECTION_EN is low. */

//****************************************************************************************************************
// Register: DENALI_CTL_1290
//****************************************************************************************************************
#define DENALI_CTL_1290						(MC_BASE + 0x1428), MC_ACCESS, 32  /* Offset: 0x1428 */
#define DENALI_CTL_1290_CKE_STATUS				 0 ,  1  /* Type: RD ; Reset: 0x0 ; Desc: Register access to cke_status signal. */
#define DENALI_CTL_1290_MEM_RST_VALID				 8 ,  1  /* Type: RD ; Reset: 0x0 ; Desc: Register access to mem_rst_valid signal. */
#define DENALI_CTL_1290_DLL_RST_DELAY				16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Minimum cycles required for DLL reset signal dll_rst_n to be held. If this signal is not being used by the PHY, this parameter may be ignored. */

//****************************************************************************************************************
// Register: DENALI_CTL_1291
//****************************************************************************************************************
#define DENALI_CTL_1291						(MC_BASE + 0x142c), MC_ACCESS, 32  /* Offset: 0x142c */
#define DENALI_CTL_1291_DLL_RST_ADJ_DLY				 0 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Minimum cycles after setting master delay in DLL until the DLL reset signal dll_rst_n may be asserted. If this signal is not being used by the PHY, this parameter may be ignored. */
#define DENALI_CTL_1291_TDFI_PHY_WRLAT				 8 ,  7  /* Type: RD ; Reset: 0x0 ; Desc: Holds the calculated DFI tPHY_WRLAT timing parameter (in DFI PHY clocks), the maximum cycles between a write command and a dfi_wrdata_en assertion. */
#define DENALI_CTL_1291_UPDATE_ERROR_STATUS			16 ,  7  /* Type: RD ; Reset: 0x0 ; Desc: Identifies the source of any DFI MC-initiated or PHY-initiated update errors. Value of 1 indicates a timing violation of the associated timing parameter. */
#define DENALI_CTL_1291_TDFI_PHY_RDLAT				24 ,  7  /* Type: RW_D ; Reset: 0x6 ; Desc: Defines the DFI tPHY_RDLAT timing parameter (in DFI PHY clocks), the maximum cycles between a dfi_rddata_en assertion and a dfi_rddata_valid assertion. */

//****************************************************************************************************************
// Register: DENALI_CTL_1292
//****************************************************************************************************************
#define DENALI_CTL_1292						(MC_BASE + 0x1430), MC_ACCESS, 32  /* Offset: 0x1430 */
#define DENALI_CTL_1292_TDFI_RDDATA_EN				 0 ,  7  /* Type: RD ; Reset: 0x0 ; Desc: Holds the calculated DFI tRDDATA_EN timing parameter (in DFI PHY clocks), the maximum cycles between a read command and a dfi_rddata_en assertion. */
#define DENALI_CTL_1292_DRAM_CLK_DISABLE			 8 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Set value for the dfi_dram_clk_disable signal. Bit (0) controls cs0, bit (1) controls cs1, etc. Set each bit to 1 to disable. */
#define DENALI_CTL_1292_TDFI_CTRLUPD_MIN			16 , 16  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tCTRLUPD_MIN timing parameter (in DFI clocks), the minimum cycles that dfi_ctrlupd_req must be asserted. */

//****************************************************************************************************************
// Register: DENALI_CTL_1293
//****************************************************************************************************************
#define DENALI_CTL_1293						(MC_BASE + 0x1434), MC_ACCESS, 32  /* Offset: 0x1434 */
#define DENALI_CTL_1293_TDFI_CTRLUPD_MAX			 0 , 21  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tCTRLUPD_MAX timing parameter (in DFI clocks), the maximum cycles that dfi_ctrlupd_req can be asserted. If programmed to a non-zero, a timing violation will cause an interrupt and bit (0) set in the UPDATE_ERROR_STATUS parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_1294
//****************************************************************************************************************
#define DENALI_CTL_1294						(MC_BASE + 0x1438), MC_ACCESS, 32  /* Offset: 0x1438 */
#define DENALI_CTL_1294_TDFI_PHYUPD_TYPE0			 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tPHYUPD_TYPE0 timing parameter (in DFI clocks), the maximum cycles that dfi_phyupd_req can assert after dfi_phyupd_ack for dfi_phyupd_type 0. If programmed to a non-zero, a timing violation will cause an interrupt and bit (1) set in the UPDATE_ERROR_STATUS parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_1295
//****************************************************************************************************************
#define DENALI_CTL_1295						(MC_BASE + 0x143c), MC_ACCESS, 32  /* Offset: 0x143c */
#define DENALI_CTL_1295_TDFI_PHYUPD_TYPE1			 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tPHYUPD_TYPE1 timing parameter (in DFI clocks), the maximum cycles that dfi_phyupd_req can assert after dfi_phyupd_ack for dfi_phyupd_type 1. If programmed to a non-zero, a timing violation will cause an interrupt and bit (2) set in the UPDATE_ERROR_STATUS parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_1296
//****************************************************************************************************************
#define DENALI_CTL_1296						(MC_BASE + 0x1440), MC_ACCESS, 32  /* Offset: 0x1440 */
#define DENALI_CTL_1296_TDFI_PHYUPD_TYPE2			 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tPHYUPD_TYPE2 timing parameter (in DFI clocks), the maximum cycles that dfi_phyupd_req can assert after dfi_phyupd_ack for dfi_phyupd_type 2. If programmed to a non-zero, a timing violation will cause an interrupt and bit (3) set in the UPDATE_ERROR_STATUS parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_1297
//****************************************************************************************************************
#define DENALI_CTL_1297						(MC_BASE + 0x1444), MC_ACCESS, 32  /* Offset: 0x1444 */
#define DENALI_CTL_1297_TDFI_PHYUPD_TYPE3			 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tPHYUPD_TYPE3 timing parameter (in DFI clocks), the maximum cycles that dfi_phyupd_req can assert after dfi_phyupd_ack for dfi_phyupd_type 3. If programmed to a non-zero, a timing violation will cause an interrupt and bit (4) set in the UPDATE_ERROR_STATUS parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_1298
//****************************************************************************************************************
#define DENALI_CTL_1298						(MC_BASE + 0x1448), MC_ACCESS, 32  /* Offset: 0x1448 */
#define DENALI_CTL_1298_TDFI_PHYUPD_RESP			 0 , 23  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tPHYUPD_RESP timing parameter (in DFI clocks), the maximum cycles between a dfi_phyupd_req assertion and a dfi_phyupd_ack assertion. If programmed to a non-zero, a timing violation will cause an interrupt and bit (5) set in the UPDATE_ERROR_STATUS parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_1299
//****************************************************************************************************************
#define DENALI_CTL_1299						(MC_BASE + 0x144c), MC_ACCESS, 32  /* Offset: 0x144c */
#define DENALI_CTL_1299_TDFI_CTRLUPD_INTERVAL			 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tCTRLUPD_INTERVAL timing parameter (in DFI clocks), the maximum cycles between dfi_ctrlupd_req assertions. If programmed to a non-zero, a timing violation will cause an interrupt and bit (6) set in the UPDATE_ERROR_STATUS parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_1300
//****************************************************************************************************************
#define DENALI_CTL_1300						(MC_BASE + 0x1450), MC_ACCESS, 32  /* Offset: 0x1450 */
#define DENALI_CTL_1300_RDLAT_ADJ				 0 ,  7  /* Type: RW ; Reset: 0x0 ; Desc: Adjustment value for PHY read timing. */
#define DENALI_CTL_1300_WRLAT_ADJ				 8 ,  7  /* Type: RW ; Reset: 0x0 ; Desc: Adjustment value for PHY write timing. */
#define DENALI_CTL_1300_TDFI_CTRL_DELAY				16 ,  4  /* Type: RW_D ; Reset: 0x2 ; Desc: Defines the DFI tCTRL_DELAY timing parameter (in DFI clocks), the delay between a DFI command change and a memory command. */
#define DENALI_CTL_1300_TDFI_DRAM_CLK_DISABLE			24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tDRAM_CLK_DISABLE timing parameter (in DFI clocks), the delay between a dfi_dram_clock_disable assertion and the memory clock disable. */

//****************************************************************************************************************
// Register: DENALI_CTL_1301
//****************************************************************************************************************
#define DENALI_CTL_1301						(MC_BASE + 0x1454), MC_ACCESS, 32  /* Offset: 0x1454 */
#define DENALI_CTL_1301_TDFI_DRAM_CLK_ENABLE			 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tDRAM_CLK_ENABLE timing parameter (in DFI clocks), the delay between a dfi_dram_clk_disable de-assertion and the memory clock enable. */
#define DENALI_CTL_1301_TDFI_PHY_WRDATA				 8 ,  3  /* Type: RW ; Reset: 0x1 ; Desc: Defines the DFI tPHY_WRDATA timing parameter (in DFI PHY clocks), the maximum cycles between a dfi_wrdata_en assertion and a dfi_wrdata signal. */
#define DENALI_CTL_1301_TDFI_RDCSLAT				16 ,  7  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tPHY_RDCSLAT timing parameter (in DFI PHY clocks), the maximum cycles between a read command and a dfi_rddata_cs_n assertion. */
#define DENALI_CTL_1301_TDFI_WRCSLAT				24 ,  7  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tPHY_WRCSLAT timing parameter (in DFI PHY clocks), the maximum cycles between a write command and a dfi_wrdata_cs_n assertion. */

//****************************************************************************************************************
// Register: DENALI_CTL_1302
//****************************************************************************************************************
#define DENALI_CTL_1302						(MC_BASE + 0x1458), MC_ACCESS, 32  /* Offset: 0x1458 */
#define DENALI_CTL_1302_TDFI_PARIN_LAT				 0 ,  3  /* Type: RW ; Reset: 0x0 ; Desc: Defines the DFI tPARIN_LAT timing parameter (in DFI PHY clocks), the maximum cycles between a DFI command and a dfi_parity_in signal assertion. */
#define DENALI_CTL_1302_TDFI_WRDATA_DELAY			 8 ,  8  /* Type: RW ; Reset: 0x0 ; Desc: Defines the tWRDATA_DELAY timing parameter (in DFI PHY clocks), the maximum cycles between when the dfi_wrdata_en signal is asserted and when the corresponding write data transfer is completed on the DRAM bus. */

//****************************************************************************************************************
// Register: DENALI_CTL_1303
//****************************************************************************************************************
#define DENALI_CTL_1303						(MC_BASE + 0x145c), MC_ACCESS, 32  /* Offset: 0x145c */
#define DENALI_CTL_1303_INT_STATUS_USERIF			 0 , 32  /* Type: RD ; Reset: 0x0 ; Desc: Status of interrupts in the controller related to ASIC to Controller Interface. */

//****************************************************************************************************************
// Register: DENALI_CTL_1304
//****************************************************************************************************************
#define DENALI_CTL_1304						(MC_BASE + 0x1460), MC_ACCESS, 32  /* Offset: 0x1460 */
#define DENALI_CTL_1304_INT_ACK_USERIF				 0 , 32  /* Type: WR ; Reset: 0x0 ; Desc: Clear status of the INT_STATUS_USERIF parameter. */

//****************************************************************************************************************
// Register: DENALI_CTL_1305
//****************************************************************************************************************
#define DENALI_CTL_1305						(MC_BASE + 0x1464), MC_ACCESS, 32  /* Offset: 0x1464 */
#define DENALI_CTL_1305_INT_MASK_USERIF				 0 , 32  /* Type: RW ; Reset: 0x0 ; Desc: Mask for the controller_int signal from the INT_MASK_USERIF parameter */

//****************************************************************************************************************
// Register: DENALI_CTL_1306
//****************************************************************************************************************
#define DENALI_CTL_1306						(MC_BASE + 0x1468), MC_ACCESS, 32  /* Offset: 0x1468 */
#define DENALI_CTL_1306_WEIGHTED_ROUND_ROBIN_LATENCY_CONTROL	 0 ,  1  /* Type: RW ; Reset: 0x0 ; Desc: Free-running or limited WRR latency counters. Set to 1 for free-running. */
#define DENALI_CTL_1306_WEIGHTED_ROUND_ROBIN_WEIGHT_SHARING	 8 ,  7  /* Type: RW ; Reset: 0x0 ; Desc: Per-port pair shared arbitration for WRR. Bit (0) controls ports 0 and 1, bit (1) controls ports 2 and 3, etc. Set each bit to 1 to link. */
#define DENALI_CTL_1306_WRR_PARAM_VALUE_ERR			16 ,  4  /* Type: RD ; Reset: 0x0 ; Desc: Errors/warnings related to the WRR parameters. Bit (0) set indicates invalid port ordering specified, bit (1) set indicates invalid relative priority, bit (2) set indicates invalid priority for paired ports, and bit (3) set indicates invalid ordering for paired ports. */
#define DENALI_CTL_1306_AXI0_PRIORITY0_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 0. */

//****************************************************************************************************************
// Register: DENALI_CTL_1307
//****************************************************************************************************************
#define DENALI_CTL_1307						(MC_BASE + 0x146c), MC_ACCESS, 32  /* Offset: 0x146c */
#define DENALI_CTL_1307_AXI0_PRIORITY1_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 0. */
#define DENALI_CTL_1307_AXI0_PRIORITY2_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 0. */
#define DENALI_CTL_1307_AXI0_PRIORITY3_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 0. */
#define DENALI_CTL_1307_AXI0_PRIORITY4_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 0. */

//****************************************************************************************************************
// Register: DENALI_CTL_1308
//****************************************************************************************************************
#define DENALI_CTL_1308						(MC_BASE + 0x1470), MC_ACCESS, 32  /* Offset: 0x1470 */
#define DENALI_CTL_1308_AXI0_PRIORITY5_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 0. */
#define DENALI_CTL_1308_AXI0_PRIORITY6_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 0. */
#define DENALI_CTL_1308_AXI0_PRIORITY7_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 0. */
#define DENALI_CTL_1308_AXI0_PORT_ORDERING			24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 0. */

//****************************************************************************************************************
// Register: DENALI_CTL_1309
//****************************************************************************************************************
#define DENALI_CTL_1309						(MC_BASE + 0x1474), MC_ACCESS, 32  /* Offset: 0x1474 */
#define DENALI_CTL_1309_AXI0_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 0. */
#define DENALI_CTL_1309_AXI1_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 1. */
#define DENALI_CTL_1309_AXI1_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 1. */

//****************************************************************************************************************
// Register: DENALI_CTL_1310
//****************************************************************************************************************
#define DENALI_CTL_1310						(MC_BASE + 0x1478), MC_ACCESS, 32  /* Offset: 0x1478 */
#define DENALI_CTL_1310_AXI1_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 1. */
#define DENALI_CTL_1310_AXI1_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 1. */
#define DENALI_CTL_1310_AXI1_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 1. */
#define DENALI_CTL_1310_AXI1_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 1. */

//****************************************************************************************************************
// Register: DENALI_CTL_1311
//****************************************************************************************************************
#define DENALI_CTL_1311						(MC_BASE + 0x147c), MC_ACCESS, 32  /* Offset: 0x147c */
#define DENALI_CTL_1311_AXI1_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 1. */
#define DENALI_CTL_1311_AXI1_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 1. */
#define DENALI_CTL_1311_AXI1_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 1. */

//****************************************************************************************************************
// Register: DENALI_CTL_1312
//****************************************************************************************************************
#define DENALI_CTL_1312						(MC_BASE + 0x1480), MC_ACCESS, 32  /* Offset: 0x1480 */
#define DENALI_CTL_1312_AXI1_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 1. */
#define DENALI_CTL_1312_AXI2_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 2. */
#define DENALI_CTL_1312_AXI2_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 2. */

//****************************************************************************************************************
// Register: DENALI_CTL_1313
//****************************************************************************************************************
#define DENALI_CTL_1313						(MC_BASE + 0x1484), MC_ACCESS, 32  /* Offset: 0x1484 */
#define DENALI_CTL_1313_AXI2_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 2. */
#define DENALI_CTL_1313_AXI2_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 2. */
#define DENALI_CTL_1313_AXI2_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 2. */
#define DENALI_CTL_1313_AXI2_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 2. */

//****************************************************************************************************************
// Register: DENALI_CTL_1314
//****************************************************************************************************************
#define DENALI_CTL_1314						(MC_BASE + 0x1488), MC_ACCESS, 32  /* Offset: 0x1488 */
#define DENALI_CTL_1314_AXI2_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 2. */
#define DENALI_CTL_1314_AXI2_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 2. */
#define DENALI_CTL_1314_AXI2_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 2. */

//****************************************************************************************************************
// Register: DENALI_CTL_1315
//****************************************************************************************************************
#define DENALI_CTL_1315						(MC_BASE + 0x148c), MC_ACCESS, 32  /* Offset: 0x148c */
#define DENALI_CTL_1315_AXI2_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 2. */
#define DENALI_CTL_1315_AXI3_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 3. */
#define DENALI_CTL_1315_AXI3_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 3. */

//****************************************************************************************************************
// Register: DENALI_CTL_1316
//****************************************************************************************************************
#define DENALI_CTL_1316						(MC_BASE + 0x1490), MC_ACCESS, 32  /* Offset: 0x1490 */
#define DENALI_CTL_1316_AXI3_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 3. */
#define DENALI_CTL_1316_AXI3_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 3. */
#define DENALI_CTL_1316_AXI3_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 3. */
#define DENALI_CTL_1316_AXI3_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 3. */

//****************************************************************************************************************
// Register: DENALI_CTL_1317
//****************************************************************************************************************
#define DENALI_CTL_1317						(MC_BASE + 0x1494), MC_ACCESS, 32  /* Offset: 0x1494 */
#define DENALI_CTL_1317_AXI3_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 3. */
#define DENALI_CTL_1317_AXI3_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 3. */
#define DENALI_CTL_1317_AXI3_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 3. */

//****************************************************************************************************************
// Register: DENALI_CTL_1318
//****************************************************************************************************************
#define DENALI_CTL_1318						(MC_BASE + 0x1498), MC_ACCESS, 32  /* Offset: 0x1498 */
#define DENALI_CTL_1318_AXI3_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 3. */
#define DENALI_CTL_1318_AXI4_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 4. */
#define DENALI_CTL_1318_AXI4_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 4. */

//****************************************************************************************************************
// Register: DENALI_CTL_1319
//****************************************************************************************************************
#define DENALI_CTL_1319						(MC_BASE + 0x149c), MC_ACCESS, 32  /* Offset: 0x149c */
#define DENALI_CTL_1319_AXI4_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 4. */
#define DENALI_CTL_1319_AXI4_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 4. */
#define DENALI_CTL_1319_AXI4_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 4. */
#define DENALI_CTL_1319_AXI4_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 4. */

//****************************************************************************************************************
// Register: DENALI_CTL_1320
//****************************************************************************************************************
#define DENALI_CTL_1320						(MC_BASE + 0x14a0), MC_ACCESS, 32  /* Offset: 0x14a0 */
#define DENALI_CTL_1320_AXI4_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 4. */
#define DENALI_CTL_1320_AXI4_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 4. */
#define DENALI_CTL_1320_AXI4_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 4. */

//****************************************************************************************************************
// Register: DENALI_CTL_1321
//****************************************************************************************************************
#define DENALI_CTL_1321						(MC_BASE + 0x14a4), MC_ACCESS, 32  /* Offset: 0x14a4 */
#define DENALI_CTL_1321_AXI4_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 4. */
#define DENALI_CTL_1321_AXI5_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 5. */
#define DENALI_CTL_1321_AXI5_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 5. */

//****************************************************************************************************************
// Register: DENALI_CTL_1322
//****************************************************************************************************************
#define DENALI_CTL_1322						(MC_BASE + 0x14a8), MC_ACCESS, 32  /* Offset: 0x14a8 */
#define DENALI_CTL_1322_AXI5_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 5. */
#define DENALI_CTL_1322_AXI5_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 5. */
#define DENALI_CTL_1322_AXI5_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 5. */
#define DENALI_CTL_1322_AXI5_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 5. */

//****************************************************************************************************************
// Register: DENALI_CTL_1323
//****************************************************************************************************************
#define DENALI_CTL_1323						(MC_BASE + 0x14ac), MC_ACCESS, 32  /* Offset: 0x14ac */
#define DENALI_CTL_1323_AXI5_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 5. */
#define DENALI_CTL_1323_AXI5_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 5. */
#define DENALI_CTL_1323_AXI5_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 5. */

//****************************************************************************************************************
// Register: DENALI_CTL_1324
//****************************************************************************************************************
#define DENALI_CTL_1324						(MC_BASE + 0x14b0), MC_ACCESS, 32  /* Offset: 0x14b0 */
#define DENALI_CTL_1324_AXI5_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 5. */
#define DENALI_CTL_1324_AXI6_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 6. */
#define DENALI_CTL_1324_AXI6_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 6. */

//****************************************************************************************************************
// Register: DENALI_CTL_1325
//****************************************************************************************************************
#define DENALI_CTL_1325						(MC_BASE + 0x14b4), MC_ACCESS, 32  /* Offset: 0x14b4 */
#define DENALI_CTL_1325_AXI6_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 6. */
#define DENALI_CTL_1325_AXI6_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 6. */
#define DENALI_CTL_1325_AXI6_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 6. */
#define DENALI_CTL_1325_AXI6_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 6. */

//****************************************************************************************************************
// Register: DENALI_CTL_1326
//****************************************************************************************************************
#define DENALI_CTL_1326						(MC_BASE + 0x14b8), MC_ACCESS, 32  /* Offset: 0x14b8 */
#define DENALI_CTL_1326_AXI6_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 6. */
#define DENALI_CTL_1326_AXI6_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 6. */
#define DENALI_CTL_1326_AXI6_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 6. */

//****************************************************************************************************************
// Register: DENALI_CTL_1327
//****************************************************************************************************************
#define DENALI_CTL_1327						(MC_BASE + 0x14bc), MC_ACCESS, 32  /* Offset: 0x14bc */
#define DENALI_CTL_1327_AXI6_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 6. */
#define DENALI_CTL_1327_AXI7_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 7. */
#define DENALI_CTL_1327_AXI7_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 7. */

//****************************************************************************************************************
// Register: DENALI_CTL_1328
//****************************************************************************************************************
#define DENALI_CTL_1328						(MC_BASE + 0x14c0), MC_ACCESS, 32  /* Offset: 0x14c0 */
#define DENALI_CTL_1328_AXI7_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 7. */
#define DENALI_CTL_1328_AXI7_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 7. */
#define DENALI_CTL_1328_AXI7_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 7. */
#define DENALI_CTL_1328_AXI7_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 7. */

//****************************************************************************************************************
// Register: DENALI_CTL_1329
//****************************************************************************************************************
#define DENALI_CTL_1329						(MC_BASE + 0x14c4), MC_ACCESS, 32  /* Offset: 0x14c4 */
#define DENALI_CTL_1329_AXI7_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 7. */
#define DENALI_CTL_1329_AXI7_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 7. */
#define DENALI_CTL_1329_AXI7_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 7. */

//****************************************************************************************************************
// Register: DENALI_CTL_1330
//****************************************************************************************************************
#define DENALI_CTL_1330						(MC_BASE + 0x14c8), MC_ACCESS, 32  /* Offset: 0x14c8 */
#define DENALI_CTL_1330_AXI7_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 7. */
#define DENALI_CTL_1330_AXI8_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 8. */
#define DENALI_CTL_1330_AXI8_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 8. */

//****************************************************************************************************************
// Register: DENALI_CTL_1331
//****************************************************************************************************************
#define DENALI_CTL_1331						(MC_BASE + 0x14cc), MC_ACCESS, 32  /* Offset: 0x14cc */
#define DENALI_CTL_1331_AXI8_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 8. */
#define DENALI_CTL_1331_AXI8_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 8. */
#define DENALI_CTL_1331_AXI8_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 8. */
#define DENALI_CTL_1331_AXI8_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 8. */

//****************************************************************************************************************
// Register: DENALI_CTL_1332
//****************************************************************************************************************
#define DENALI_CTL_1332						(MC_BASE + 0x14d0), MC_ACCESS, 32  /* Offset: 0x14d0 */
#define DENALI_CTL_1332_AXI8_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 8. */
#define DENALI_CTL_1332_AXI8_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 8. */
#define DENALI_CTL_1332_AXI8_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 8. */

//****************************************************************************************************************
// Register: DENALI_CTL_1333
//****************************************************************************************************************
#define DENALI_CTL_1333						(MC_BASE + 0x14d4), MC_ACCESS, 32  /* Offset: 0x14d4 */
#define DENALI_CTL_1333_AXI8_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 8. */
#define DENALI_CTL_1333_AXI9_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 9. */
#define DENALI_CTL_1333_AXI9_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 9. */

//****************************************************************************************************************
// Register: DENALI_CTL_1334
//****************************************************************************************************************
#define DENALI_CTL_1334						(MC_BASE + 0x14d8), MC_ACCESS, 32  /* Offset: 0x14d8 */
#define DENALI_CTL_1334_AXI9_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 9. */
#define DENALI_CTL_1334_AXI9_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 9. */
#define DENALI_CTL_1334_AXI9_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 9. */
#define DENALI_CTL_1334_AXI9_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 9. */

//****************************************************************************************************************
// Register: DENALI_CTL_1335
//****************************************************************************************************************
#define DENALI_CTL_1335						(MC_BASE + 0x14dc), MC_ACCESS, 32  /* Offset: 0x14dc */
#define DENALI_CTL_1335_AXI9_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 9. */
#define DENALI_CTL_1335_AXI9_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 9. */
#define DENALI_CTL_1335_AXI9_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 9. */

//****************************************************************************************************************
// Register: DENALI_CTL_1336
//****************************************************************************************************************
#define DENALI_CTL_1336						(MC_BASE + 0x14e0), MC_ACCESS, 32  /* Offset: 0x14e0 */
#define DENALI_CTL_1336_AXI9_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 9. */
#define DENALI_CTL_1336_AXI10_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 10. */
#define DENALI_CTL_1336_AXI10_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 10. */

//****************************************************************************************************************
// Register: DENALI_CTL_1337
//****************************************************************************************************************
#define DENALI_CTL_1337						(MC_BASE + 0x14e4), MC_ACCESS, 32  /* Offset: 0x14e4 */
#define DENALI_CTL_1337_AXI10_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 10. */
#define DENALI_CTL_1337_AXI10_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 10. */
#define DENALI_CTL_1337_AXI10_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 10. */
#define DENALI_CTL_1337_AXI10_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 10. */

//****************************************************************************************************************
// Register: DENALI_CTL_1338
//****************************************************************************************************************
#define DENALI_CTL_1338						(MC_BASE + 0x14e8), MC_ACCESS, 32  /* Offset: 0x14e8 */
#define DENALI_CTL_1338_AXI10_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 10. */
#define DENALI_CTL_1338_AXI10_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 10. */
#define DENALI_CTL_1338_AXI10_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 10. */

//****************************************************************************************************************
// Register: DENALI_CTL_1339
//****************************************************************************************************************
#define DENALI_CTL_1339						(MC_BASE + 0x14ec), MC_ACCESS, 32  /* Offset: 0x14ec */
#define DENALI_CTL_1339_AXI10_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 10. */
#define DENALI_CTL_1339_AXI11_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 11. */
#define DENALI_CTL_1339_AXI11_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 11. */

//****************************************************************************************************************
// Register: DENALI_CTL_1340
//****************************************************************************************************************
#define DENALI_CTL_1340						(MC_BASE + 0x14f0), MC_ACCESS, 32  /* Offset: 0x14f0 */
#define DENALI_CTL_1340_AXI11_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 11. */
#define DENALI_CTL_1340_AXI11_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 11. */
#define DENALI_CTL_1340_AXI11_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 11. */
#define DENALI_CTL_1340_AXI11_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 11. */

//****************************************************************************************************************
// Register: DENALI_CTL_1341
//****************************************************************************************************************
#define DENALI_CTL_1341						(MC_BASE + 0x14f4), MC_ACCESS, 32  /* Offset: 0x14f4 */
#define DENALI_CTL_1341_AXI11_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 11. */
#define DENALI_CTL_1341_AXI11_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 11. */
#define DENALI_CTL_1341_AXI11_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 11. */

//****************************************************************************************************************
// Register: DENALI_CTL_1342
//****************************************************************************************************************
#define DENALI_CTL_1342						(MC_BASE + 0x14f8), MC_ACCESS, 32  /* Offset: 0x14f8 */
#define DENALI_CTL_1342_AXI11_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 11. */
#define DENALI_CTL_1342_AXI12_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 12. */
#define DENALI_CTL_1342_AXI12_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 12. */

//****************************************************************************************************************
// Register: DENALI_CTL_1343
//****************************************************************************************************************
#define DENALI_CTL_1343						(MC_BASE + 0x14fc), MC_ACCESS, 32  /* Offset: 0x14fc */
#define DENALI_CTL_1343_AXI12_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 12. */
#define DENALI_CTL_1343_AXI12_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 12. */
#define DENALI_CTL_1343_AXI12_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 12. */
#define DENALI_CTL_1343_AXI12_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 12. */

//****************************************************************************************************************
// Register: DENALI_CTL_1344
//****************************************************************************************************************
#define DENALI_CTL_1344						(MC_BASE + 0x1500), MC_ACCESS, 32  /* Offset: 0x1500 */
#define DENALI_CTL_1344_AXI12_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 12. */
#define DENALI_CTL_1344_AXI12_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 12. */
#define DENALI_CTL_1344_AXI12_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 12. */

//****************************************************************************************************************
// Register: DENALI_CTL_1345
//****************************************************************************************************************
#define DENALI_CTL_1345						(MC_BASE + 0x1504), MC_ACCESS, 32  /* Offset: 0x1504 */
#define DENALI_CTL_1345_AXI12_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 12. */
#define DENALI_CTL_1345_AXI13_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 13. */
#define DENALI_CTL_1345_AXI13_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 13. */

//****************************************************************************************************************
// Register: DENALI_CTL_1346
//****************************************************************************************************************
#define DENALI_CTL_1346						(MC_BASE + 0x1508), MC_ACCESS, 32  /* Offset: 0x1508 */
#define DENALI_CTL_1346_AXI13_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 13. */
#define DENALI_CTL_1346_AXI13_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 13. */
#define DENALI_CTL_1346_AXI13_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 13. */
#define DENALI_CTL_1346_AXI13_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 13. */

//****************************************************************************************************************
// Register: DENALI_CTL_1347
//****************************************************************************************************************
#define DENALI_CTL_1347						(MC_BASE + 0x150c), MC_ACCESS, 32  /* Offset: 0x150c */
#define DENALI_CTL_1347_AXI13_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 13. */
#define DENALI_CTL_1347_AXI13_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 13. */
#define DENALI_CTL_1347_AXI13_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 13. */

//****************************************************************************************************************
// Register: DENALI_CTL_1348
//****************************************************************************************************************
#define DENALI_CTL_1348						(MC_BASE + 0x1510), MC_ACCESS, 32  /* Offset: 0x1510 */
#define DENALI_CTL_1348_AXI13_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 13. */
#define DENALI_CTL_1348_AXI14_PRIORITY0_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 0 commands from port 14. */
#define DENALI_CTL_1348_AXI14_PRIORITY1_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 1 commands from port 14. */

//****************************************************************************************************************
// Register: DENALI_CTL_1349
//****************************************************************************************************************
#define DENALI_CTL_1349						(MC_BASE + 0x1514), MC_ACCESS, 32  /* Offset: 0x1514 */
#define DENALI_CTL_1349_AXI14_PRIORITY2_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 2 commands from port 14. */
#define DENALI_CTL_1349_AXI14_PRIORITY3_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 3 commands from port 14. */
#define DENALI_CTL_1349_AXI14_PRIORITY4_RELATIVE_PRIORITY	16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 4 commands from port 14. */
#define DENALI_CTL_1349_AXI14_PRIORITY5_RELATIVE_PRIORITY	24 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 5 commands from port 14. */

//****************************************************************************************************************
// Register: DENALI_CTL_1350
//****************************************************************************************************************
#define DENALI_CTL_1350						(MC_BASE + 0x1518), MC_ACCESS, 32  /* Offset: 0x1518 */
#define DENALI_CTL_1350_AXI14_PRIORITY6_RELATIVE_PRIORITY	 0 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 6 commands from port 14. */
#define DENALI_CTL_1350_AXI14_PRIORITY7_RELATIVE_PRIORITY	 8 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Relative priority of priority 7 commands from port 14. */
#define DENALI_CTL_1350_AXI14_PORT_ORDERING			16 ,  4  /* Type: RW ; Reset: 0x0 ; Desc: Reassigned port order for port 14. */

//****************************************************************************************************************
// Register: DENALI_CTL_1351
//****************************************************************************************************************
#define DENALI_CTL_1351						(MC_BASE + 0x151c), MC_ACCESS, 32  /* Offset: 0x151c */
#define DENALI_CTL_1351_AXI14_PRIORITY_RELAX			 0 , 10  /* Type: RW ; Reset: 0x0 ; Desc: Counter value to trigger priority relax on port 14. */







// NTIL
#define MC_DDR_DLL_ENABLE   ((UINT32)1<<0)
#define MC_DDR_DRV_48       ((UINT32)1<<1)
#define MC_DDR_DRV_34       ((UINT32)0<<1)
#define MC_DDR_AL_DISABLE   ((UINT32)0<<3) // 00:Disable, 10:CL-2, 01:CL-1
#define MC_DDR_WL_ENABLE    ((UINT32)1<<7)
#define MC_DDR_ODT_NO       ((UINT32)0<<8)
#define MC_DDR_ODT_60       ((UINT32)1<<8)
#define MC_DDR_ODT_120      ((UINT32)2<<8)
#define MC_DDR_ODT_40       ((UINT32)3<<8)
#define MC_DDR_ODT_240      ((UINT32)4<<8)
#define MC_DDR_ODT_48       ((UINT32)5<<8)
#define MC_DDR_ODT_80       ((UINT32)6<<8)
#define MC_DDR_ODT_34       ((UINT32)7<<8)


/*---------------------------------------------------------------------------------------------------------*/
/* In DENALI_CTL_80_DATA register and WRLVL_ON_OFF register change to MC_DDR_DRV_48, MC_DDR_ODT_120. - check*/
/* PHY spec for the correct bits.                                                                          */
/*---------------------------------------------------------------------------------------------------------*/
#define MC_MR1              ((MC_DDR_DLL_ENABLE|MC_DDR_DRV_48|MC_DDR_ODT_120)&0xFFFF)
#define DENALI_CTL_80_DATA  (MC_MR1) // MR1_DATA_F0_0 // DLL, DRV and ODT



// PHY DRV: these resistors are connected in paralel. Can mix.
#define PHY_DRV_60ohm      (0x8)
#define PHY_DRV_120ohm     (0x4)
#define PHY_DRV_240ohm_A   (0x2)
#define PHY_DRV_240ohm_B   (0x1)

#define PHY_DRV_34ohm      (PHY_DRV_60ohm | PHY_DRV_120ohm | PHY_DRV_240ohm_A)
#define PHY_DRV_30ohm      (PHY_DRV_60ohm  | PHY_DRV_120ohm | PHY_DRV_240ohm_A | PHY_DRV_240ohm_B)
#define PHY_DRV_40ohm      (PHY_DRV_60ohm  | PHY_DRV_120ohm)
#define PHY_DRV_48ohm      (PHY_DRV_60ohm  | PHY_DRV_240ohm_A)
#define PHY_DRV_40ohm_B    (PHY_DRV_60ohm  | PHY_DRV_240ohm_A | PHY_DRV_240ohm_B)
#define PHY_DRV_80ohm      (PHY_DRV_120ohm  | PHY_DRV_240ohm_A)

// MC Priority settting
#define PG_0     0  // highest
#define PG_1     1
#define PG_2     2
#define PG_3     3
#define PG_4     4
#define PG_5     5
#define PG_6     6
#define PG_7     7   // lowest

#define A2_PRIORITY_SETTINGS 1

#ifdef A1_PRIORITY_SETTINGS

    #define PRTY_GRP_AXI6_COP               PG_1
    #define PRTY_GRP_AXI7_GMAC1_RD          PG_1
    #define PRTY_GRP_AXI8_GMAC2_RD		    PG_1
    #define PRTY_GRP_AXI7_GMAC1_WR		    PG_1
    #define PRTY_GRP_AXI8_GMAC2_WR		    PG_1
    #define PRTY_GRP_AXI9_GMAC34_GDMA_VDMA  PG_1
    #define PRTY_GRP_AXI13_TIP              PG_1
    #define PRTY_GRP_AXI14_FLM              PG_1
    #define PRTY_GRP_AXI4_USBD_EMMC         PG_2
    #define PRTY_GRP_AXI5_USBH              PG_2
    #define PRTY_GRP_AXI1_BMC               PG_3
    #define PRTY_GRP_AXI2_GFX0              PG_3
    #define PRTY_GRP_AXI3_PCIERC            PG_3
    #define PRTY_GRP_AXI0_GFX1              PG_4
    #define PRTY_GRP_AXI10_ECE              PG_4
    #define PRTY_GRP_AXI11_VCD              PG_4
    #define PRTY_GRP_AXI12_VCD              PG_4

#elif A2_PRIORITY_SETTINGS

    #define PRTY_GRP_AXI11_VCD              PG_1
    #define PRTY_GRP_AXI12_VCD              PG_1
    #define PRTY_GRP_AXI9_GMAC34_GDMA_VDMA  PG_1
    #define PRTY_GRP_AXI14_FLM              PG_1
    #define PRTY_GRP_AXI7_GMAC1_RD          PG_2
    #define PRTY_GRP_AXI8_GMAC2_RD		    PG_2
    #define PRTY_GRP_AXI7_GMAC1_WR		    PG_2
    #define PRTY_GRP_AXI8_GMAC2_WR		    PG_2
    #define PRTY_GRP_AXI4_USBD_EMMC         PG_3
    #define PRTY_GRP_AXI5_USBH              PG_3
    #define PRTY_GRP_AXI10_ECE              PG_2
    #define PRTY_GRP_AXI3_PCIERC            PG_3
    #define PRTY_GRP_AXI1_BMC               PG_4
    #define PRTY_GRP_AXI2_GFX0              PG_4
    #define PRTY_GRP_AXI6_COP               PG_4
    #define PRTY_GRP_AXI13_TIP              PG_4
    #define PRTY_GRP_AXI0_GFX1              PG_6

#else
    #error UNSUPPORTED PRIORITY MODE
#endif 

#define PRTY_GRP_DEFAULT                PG_5

/*
Priority Order within groups
P0 -  N/A
P1
    GMAC3-4,GDMA,VDMA (Port 9 ) - 8
    CoP (Port 6 )         - 2
    TIP (Port 13 )        - 2
    FLM (Port 14 )        - 2
    GMAC1/2 (Port 7/8)    - 1

P2
    USB Devices/eMMC			- 2
    USB Host 1					- 1

P3
    BMC CPU (Port 1)    - 10
    GFX0    (Port 2)    - 5
    RC      (Port 3)    - 2

P4
    GFX1  (Port 0)      - 7
    ECE   (Port 10)     - 2
    VCD  (Port 11/12)   - 1
*/

#ifdef A1_PRIORITY_SETTINGS
    #define PRTY_REL_AXI6_COP         2
    #define PRTY_REL_AXI7_GMAC1       1
    #define PRTY_REL_AXI8_GMAC2       1
    #define PRTY_REL_AXI9_GMAC34_GDMA_VDMA   8
    #define PRTY_REL_AXI13_TIP       2
    #define PRTY_REL_AXI14_FLM       2
    #define PRTY_REL_AXI4_USBD_EMMC  2
    #define PRTY_REL_AXI5_USBH       1
    #define PRTY_REL_AXI1_BMC        10
    #define PRTY_REL_AXI2_GFX0       5
    #define PRTY_REL_AXI3_PCIERC     2
    #define PRTY_REL_AXI0_GFX1       7
    #define PRTY_REL_AXI10_ECE       2
    #define PRTY_REL_AXI11_VCD       1
    #define PRTY_REL_AXI12_VCD       1
#elif A2_PRIORITY_SETTINGS

    #define PRTY_REL_AXI6_COP         2
    #define PRTY_REL_AXI7_GMAC1       1
    #define PRTY_REL_AXI8_GMAC2       1
    #define PRTY_REL_AXI9_GMAC34_GDMA_VDMA    8
    #define PRTY_REL_AXI13_TIP        2
    #define PRTY_REL_AXI14_FLM        1
    #define PRTY_REL_AXI4_USBD_EMMC   2
    #define PRTY_REL_AXI5_USBH        1
    #define PRTY_REL_AXI1_BMC         5
    #define PRTY_REL_AXI2_GFX0        1
    #define PRTY_REL_AXI3_PCIERC      1
    #define PRTY_REL_AXI0_GFX1        1
    #define PRTY_REL_AXI10_ECE        2
    #define PRTY_REL_AXI11_VCD        1
    #define PRTY_REL_AXI12_VCD        1
#else
    #error UNSUPPORTED PRIORITY MODE
#endif 

#define PRT_REL_DEFAULT        1
#undef MC_CAPABILITY_CLK_TYPE_1600
#define PRINT_LEVELING



#undef VALIDATION_ALLOCATION
#undef SECURE_DDR




#define DENALI_SECURITY_ADDRESSES_START                  (MC_BASE + 0x031c)
#define DENALI_SECURITY_ADDRESSES_END                    (MC_BASE + 0x0a94)
#define DENALI_SECURITY_PORT_START                       (MC_BASE + 0x0a98)
#define DENALI_SECURITY_PORT_ADDRESSES_END               (MC_BASE + 0x1278)


#ifdef SECURE_DDR
typedef enum RANGE_SECURITY_MODE_tag
{
	// Order of elements is meaningful!
	RANGE_FULL_ACCESS_RW,
	RANGE_FULL_ACCESS_RO,
	RANGE_FULL_ACCESS_WO,
	RANGE_FULL_ACCESS_RW_DISABLED,
	RANGE_SECURE_ACCESS_RW,
	RANGE_SECURE_ACCESS_RO,
	RANGE_SECURE_ACCESS_WO,
	RANGE_UNDEFINED,
} RANGE_SECURITY_MODE;

#define PORTz_PRIVILEGED_AND_SECURE_ACCESS                0x0
#define PORTz_SECURE_ACCESS                               0x1
#define PORTz_PRIVILEGED_ACCESS                           0x2
#define PORTz_FULL_ACCESS                                 0x3
#define PORTz_RID_WID_ALLOW_ALL                           0xFFFF
#define PORTz_RID_WID_ALLOW_NONE                          0x0000

#define MC_NUM_OF_RANGES                                  16

#define DENALI_AXY_START_RANGE_Z                          199
#define DENALI_AXY_END_RANGE_Z                            200

#define RANGE_START_ADDRESS(p,r)                         ((DENALI_AXY_START_RANGE_Z + (p)*MC_NUM_OF_RANGES*2 + (r*2)) * 4) + MC_BASE
#define RANGE_END_ADDRESS(p,r)                           ((DENALI_AXY_END_RANGE_Z + (p)*MC_NUM_OF_RANGES*2 + (r*2)) * 4) + MC_BASE

#define DENALI_AXI_RANGE_RID_RANGE                       679                              
#define DENALI_AXI_RANGE_WID_RANGE                       679
#define DENALI_AXI_PROT_RANGE                            678   

#define RANGE_PROTECTION_ADDR(p,r,denali)               (((((r%2==0)?(r/2*5):((r-1)/2*5 + 3)) + denali + 40*p) * 4)+ MC_BASE)
#define RANGE_RID_ADDR(p,r,denali)                      (((((r%2==0)?(r/2*5):((r-1)/2*5 + 2)) + denali + 40*p) * 4)+ MC_BASE)
#define RANGE_RID_ADDRESS(p,r)                          RANGE_RID_ADDR(p,r,DENALI_AXI_RANGE_RID_RANGE)
#define RANGE_WID_ADDRESS(p,r)                          RANGE_PROTECTION_ADDR(p,r,DENALI_AXI_RANGE_WID_RANGE)
#define RANGE_PROT_ADDRESS(p,r)                         RANGE_PROTECTION_ADDR(p,r,DENALI_AXI_PROT_RANGE)

#define RANGE_PROT_MASK(p,r, access)                    (((p)==0)&&((r)==0))?(access)<<24:(((r)%2==0)?((access)<<16):((access)<<0))
#define RANGE_RID_MASK(r, rid)                         (((r)%2 == 0)?((rid)<<0):((rid)<<8))
#define RANGE_WID_MASK(r, wid)                         (((r)%2 == 0)?((wid)<<16):((wid)<<0))

#define GET_ACCESS_BY_MODE(mode)                          (((mode) >= RANGE_FULL_ACCESS_RW)&&((mode)<=RANGE_FULL_ACCESS_RW_DISABLED))?PORTz_FULL_ACCESS:((((mode) >= RANGE_SECURE_ACCESS_RW)&&((mode)<=RANGE_SECURE_ACCESS_WO))?PORTz_SECURE_ACCESS:0)
#define GET_RID_BY_MODE(mode)                             (((mode)==RANGE_FULL_ACCESS_RW)||((mode) == RANGE_FULL_ACCESS_RO)||((mode)==RANGE_SECURE_ACCESS_RW) || ((mode) == RANGE_SECURE_ACCESS_RO))?PORTz_RID_WID_ALLOW_ALL:PORTz_RID_WID_ALLOW_NONE
#define GET_WID_BY_MODE(mode)                             (((mode)==RANGE_FULL_ACCESS_RW)||((mode) == RANGE_FULL_ACCESS_WO)||((mode)==RANGE_SECURE_ACCESS_RW) || ((mode) == RANGE_SECURE_ACCESS_WO))?PORTz_RID_WID_ALLOW_ALL:PORTz_RID_WID_ALLOW_NONE
                 

#ifdef VALIDATION_ALLOCATION
    #define RANGE_NS_START							       0
    #define RANGE_S_TIP								       1
    #define RANGE_NS_SEC							       2		// Will not be used 
    #define RANGE_S_TIP_A35							       3
    #define RANGE_NS_END							       4
	
    #define DDR_RANGE_START_MIN                            0x0
    #define DDR_RAGE_END_MAX                               0xFFFFF
	
    #define TIP_ONLY_START_RANGE                           0x10000000
    #define TIP_ONLY_RANGE_LEN                             0x00008000
    #define PORT_START_RANGES                              0x10100000
    #define PORT_RANGE_LEN                                 0x00100000
    #define PORTz_SECURE_START_RANGE(m)                    (PORT_START_RANGES + (m*PORT_RANGE_LEN))
    #define PORTz_SECURE_END_RANGE(m)                      ((PORT_START_RANGES + ((m+1)*PORT_RANGE_LEN)))
#else
    #define RANGE_NS_START                                 0
    #define RANGE_S_TIP                                    1
    #define RANGE_NS_SEC                                   2		// Will not be used 
    #define RANGE_S_TIP_A35                                3
    #define RANGE_NS_END                                   4


    #define TIP_ONLY_START_RANGE                           0x2FFF0000
    #define TIP_ONLY_RANGE_LEN                             0x8000
    #define PORT_START_RANGES                              0x30000000
    #define PORT_RANGE_LEN                                 0x02000000
    // To keep the MACRO same as the one for Validation
    #define PORTz_SECURE_START_RANGE(m)                    (PORT_START_RANGES)
    #define PORTz_SECURE_END_RANGE(m)                      (PORT_START_RANGES + PORT_RANGE_LEN)


#endif //VALIDATION_ALLOCATION
#endif // SECURE_DDR
#endif // _MC_REGS_H

